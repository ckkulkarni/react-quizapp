27c26f9352314a99bc26d8001a21e8a5
"use strict";

var _react = _interopRequireDefault(require("react"));
var _jestCucumber = require("jest-cucumber");
var _react2 = require("@testing-library/react");
require("text-encoding");
var _Home = _interopRequireDefault(require("./../../homeandsubmit/Home"));
require("@testing-library/jest-dom/extend-expect");
var _reactRouterDom = require("react-router-dom");
var _Question = _interopRequireDefault(require("../../questions/Question1"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const feature = (0, _jestCucumber.loadFeature)("src/components/features/base.feature");
(0, _jestCucumber.defineFeature)(feature, test => {
  test("User submits form with valid inputs", ({
    given,
    when,
    and,
    then
  }) => {
    given("I am on the Home Screen", () => {
      const screen = (0, _react2.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.BrowserRouter, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactRouterDom.Routes, {
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.Route, {
            path: "/",
            element: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Home.default, {})
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.Route, {
            path: "/question",
            element: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Question.default, {})
          })]
        })
      }));
      expect(screen).toBeTruthy();
    });
    when('I enter a valid email "test@test.com"', () => {
      const emailInput = _react2.screen.getByTestId("form-mailid").querySelector("input");
      expect(emailInput).toBeInTheDocument();
      _react2.fireEvent.change(emailInput, {
        target: {
          value: "test@test.com"
        }
      });
    });
    and('I enter a valid name "John"', () => {
      const nameInput = _react2.screen.getByTestId("form-name").querySelector("input");
      expect(nameInput).toBeInTheDocument();
      _react2.fireEvent.change(nameInput, {
        target: {
          value: "John"
        }
      });
    });
    and('I enter a valid phone number "1234567890"', () => {
      const screen = (0, _react2.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.BrowserRouter, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactRouterDom.Routes, {
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.Route, {
            path: "/",
            element: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Home.default, {})
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.Route, {
            path: "/question",
            element: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Question.default, {})
          })]
        })
      }));
    });
    and("I submit the form", () => {
      const screen = (0, _react2.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.BrowserRouter, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactRouterDom.Routes, {
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.Route, {
            path: "/",
            element: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Home.default, {})
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.Route, {
            path: "/question",
            element: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Question.default, {})
          })]
        })
      }));
    });
    then("I should see the start quiz button", () => {
      const screen = (0, _react2.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.BrowserRouter, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactRouterDom.Routes, {
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.Route, {
            path: "/",
            element: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Home.default, {})
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.Route, {
            path: "/question",
            element: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Question.default, {})
          })]
        })
      }));
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,