{"version":3,"names":["Object","defineProperty","exports","value","parse","isTraversal","types_1","require","reName","reEscape","actionTypes","Map","AttributeAction","Element","Start","End","Any","Not","Hyphen","unpackPseudos","Set","selector","type","SelectorType","Adjacent","Child","Descendant","Parent","Sibling","ColumnCombinator","stripQuotesFromPseudos","funescape","_","escaped","escapedWhitespace","high","parseInt","String","fromCharCode","unescapeCSS","str","replace","isQuote","c","isWhitespace","subselects","endIndex","parseSelector","concat","length","Error","slice","selectorIndex","tokens","getName","offset","match","name","stripWhitespace","charCodeAt","readValueWithParenthesis","start","counter","isEscaped","pos","slashCount","ensureNotTraversal","addTraversal","push","addSpecialAttribute","action","Attribute","namespace","ignoreCase","finalizeSubselector","pop","loop","firstChar","Equals","name_1","startsWith","Exists","possibleAction","get","quote","sectionEnd","valueStart","forceIgnore","attributeSelector","PseudoElement","toLowerCase","data","name_2","has","quot","Pseudo","indexOf","name_3","test","Universal","Tag"],"sources":["parse.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parse = exports.isTraversal = void 0;\nvar types_1 = require(\"./types\");\nvar reName = /^[^\\\\#]?(?:\\\\(?:[\\da-f]{1,6}\\s?|.)|[\\w\\-\\u00b0-\\uFFFF])+/;\nvar reEscape = /\\\\([\\da-f]{1,6}\\s?|(\\s)|.)/gi;\nvar actionTypes = new Map([\n    [126 /* Tilde */, types_1.AttributeAction.Element],\n    [94 /* Circumflex */, types_1.AttributeAction.Start],\n    [36 /* Dollar */, types_1.AttributeAction.End],\n    [42 /* Asterisk */, types_1.AttributeAction.Any],\n    [33 /* ExclamationMark */, types_1.AttributeAction.Not],\n    [124 /* Pipe */, types_1.AttributeAction.Hyphen],\n]);\n// Pseudos, whose data property is parsed as well.\nvar unpackPseudos = new Set([\n    \"has\",\n    \"not\",\n    \"matches\",\n    \"is\",\n    \"where\",\n    \"host\",\n    \"host-context\",\n]);\n/**\n * Checks whether a specific selector is a traversal.\n * This is useful eg. in swapping the order of elements that\n * are not traversals.\n *\n * @param selector Selector to check.\n */\nfunction isTraversal(selector) {\n    switch (selector.type) {\n        case types_1.SelectorType.Adjacent:\n        case types_1.SelectorType.Child:\n        case types_1.SelectorType.Descendant:\n        case types_1.SelectorType.Parent:\n        case types_1.SelectorType.Sibling:\n        case types_1.SelectorType.ColumnCombinator:\n            return true;\n        default:\n            return false;\n    }\n}\nexports.isTraversal = isTraversal;\nvar stripQuotesFromPseudos = new Set([\"contains\", \"icontains\"]);\n// Unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L152\nfunction funescape(_, escaped, escapedWhitespace) {\n    var high = parseInt(escaped, 16) - 0x10000;\n    // NaN means non-codepoint\n    return high !== high || escapedWhitespace\n        ? escaped\n        : high < 0\n            ? // BMP codepoint\n                String.fromCharCode(high + 0x10000)\n            : // Supplemental Plane codepoint (surrogate pair)\n                String.fromCharCode((high >> 10) | 0xd800, (high & 0x3ff) | 0xdc00);\n}\nfunction unescapeCSS(str) {\n    return str.replace(reEscape, funescape);\n}\nfunction isQuote(c) {\n    return c === 39 /* SingleQuote */ || c === 34 /* DoubleQuote */;\n}\nfunction isWhitespace(c) {\n    return (c === 32 /* Space */ ||\n        c === 9 /* Tab */ ||\n        c === 10 /* NewLine */ ||\n        c === 12 /* FormFeed */ ||\n        c === 13 /* CarriageReturn */);\n}\n/**\n * Parses `selector`, optionally with the passed `options`.\n *\n * @param selector Selector to parse.\n * @param options Options for parsing.\n * @returns Returns a two-dimensional array.\n * The first dimension represents selectors separated by commas (eg. `sub1, sub2`),\n * the second contains the relevant tokens for that selector.\n */\nfunction parse(selector) {\n    var subselects = [];\n    var endIndex = parseSelector(subselects, \"\".concat(selector), 0);\n    if (endIndex < selector.length) {\n        throw new Error(\"Unmatched selector: \".concat(selector.slice(endIndex)));\n    }\n    return subselects;\n}\nexports.parse = parse;\nfunction parseSelector(subselects, selector, selectorIndex) {\n    var tokens = [];\n    function getName(offset) {\n        var match = selector.slice(selectorIndex + offset).match(reName);\n        if (!match) {\n            throw new Error(\"Expected name, found \".concat(selector.slice(selectorIndex)));\n        }\n        var name = match[0];\n        selectorIndex += offset + name.length;\n        return unescapeCSS(name);\n    }\n    function stripWhitespace(offset) {\n        selectorIndex += offset;\n        while (selectorIndex < selector.length &&\n            isWhitespace(selector.charCodeAt(selectorIndex))) {\n            selectorIndex++;\n        }\n    }\n    function readValueWithParenthesis() {\n        selectorIndex += 1;\n        var start = selectorIndex;\n        var counter = 1;\n        for (; counter > 0 && selectorIndex < selector.length; selectorIndex++) {\n            if (selector.charCodeAt(selectorIndex) ===\n                40 /* LeftParenthesis */ &&\n                !isEscaped(selectorIndex)) {\n                counter++;\n            }\n            else if (selector.charCodeAt(selectorIndex) ===\n                41 /* RightParenthesis */ &&\n                !isEscaped(selectorIndex)) {\n                counter--;\n            }\n        }\n        if (counter) {\n            throw new Error(\"Parenthesis not matched\");\n        }\n        return unescapeCSS(selector.slice(start, selectorIndex - 1));\n    }\n    function isEscaped(pos) {\n        var slashCount = 0;\n        while (selector.charCodeAt(--pos) === 92 /* BackSlash */)\n            slashCount++;\n        return (slashCount & 1) === 1;\n    }\n    function ensureNotTraversal() {\n        if (tokens.length > 0 && isTraversal(tokens[tokens.length - 1])) {\n            throw new Error(\"Did not expect successive traversals.\");\n        }\n    }\n    function addTraversal(type) {\n        if (tokens.length > 0 &&\n            tokens[tokens.length - 1].type === types_1.SelectorType.Descendant) {\n            tokens[tokens.length - 1].type = type;\n            return;\n        }\n        ensureNotTraversal();\n        tokens.push({ type: type });\n    }\n    function addSpecialAttribute(name, action) {\n        tokens.push({\n            type: types_1.SelectorType.Attribute,\n            name: name,\n            action: action,\n            value: getName(1),\n            namespace: null,\n            ignoreCase: \"quirks\",\n        });\n    }\n    /**\n     * We have finished parsing the current part of the selector.\n     *\n     * Remove descendant tokens at the end if they exist,\n     * and return the last index, so that parsing can be\n     * picked up from here.\n     */\n    function finalizeSubselector() {\n        if (tokens.length &&\n            tokens[tokens.length - 1].type === types_1.SelectorType.Descendant) {\n            tokens.pop();\n        }\n        if (tokens.length === 0) {\n            throw new Error(\"Empty sub-selector\");\n        }\n        subselects.push(tokens);\n    }\n    stripWhitespace(0);\n    if (selector.length === selectorIndex) {\n        return selectorIndex;\n    }\n    loop: while (selectorIndex < selector.length) {\n        var firstChar = selector.charCodeAt(selectorIndex);\n        switch (firstChar) {\n            // Whitespace\n            case 32 /* Space */:\n            case 9 /* Tab */:\n            case 10 /* NewLine */:\n            case 12 /* FormFeed */:\n            case 13 /* CarriageReturn */: {\n                if (tokens.length === 0 ||\n                    tokens[0].type !== types_1.SelectorType.Descendant) {\n                    ensureNotTraversal();\n                    tokens.push({ type: types_1.SelectorType.Descendant });\n                }\n                stripWhitespace(1);\n                break;\n            }\n            // Traversals\n            case 62 /* GreaterThan */: {\n                addTraversal(types_1.SelectorType.Child);\n                stripWhitespace(1);\n                break;\n            }\n            case 60 /* LessThan */: {\n                addTraversal(types_1.SelectorType.Parent);\n                stripWhitespace(1);\n                break;\n            }\n            case 126 /* Tilde */: {\n                addTraversal(types_1.SelectorType.Sibling);\n                stripWhitespace(1);\n                break;\n            }\n            case 43 /* Plus */: {\n                addTraversal(types_1.SelectorType.Adjacent);\n                stripWhitespace(1);\n                break;\n            }\n            // Special attribute selectors: .class, #id\n            case 46 /* Period */: {\n                addSpecialAttribute(\"class\", types_1.AttributeAction.Element);\n                break;\n            }\n            case 35 /* Hash */: {\n                addSpecialAttribute(\"id\", types_1.AttributeAction.Equals);\n                break;\n            }\n            case 91 /* LeftSquareBracket */: {\n                stripWhitespace(1);\n                // Determine attribute name and namespace\n                var name_1 = void 0;\n                var namespace = null;\n                if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */) {\n                    // Equivalent to no namespace\n                    name_1 = getName(1);\n                }\n                else if (selector.startsWith(\"*|\", selectorIndex)) {\n                    namespace = \"*\";\n                    name_1 = getName(2);\n                }\n                else {\n                    name_1 = getName(0);\n                    if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ &&\n                        selector.charCodeAt(selectorIndex + 1) !==\n                            61 /* Equal */) {\n                        namespace = name_1;\n                        name_1 = getName(1);\n                    }\n                }\n                stripWhitespace(0);\n                // Determine comparison operation\n                var action = types_1.AttributeAction.Exists;\n                var possibleAction = actionTypes.get(selector.charCodeAt(selectorIndex));\n                if (possibleAction) {\n                    action = possibleAction;\n                    if (selector.charCodeAt(selectorIndex + 1) !==\n                        61 /* Equal */) {\n                        throw new Error(\"Expected `=`\");\n                    }\n                    stripWhitespace(2);\n                }\n                else if (selector.charCodeAt(selectorIndex) === 61 /* Equal */) {\n                    action = types_1.AttributeAction.Equals;\n                    stripWhitespace(1);\n                }\n                // Determine value\n                var value = \"\";\n                var ignoreCase = null;\n                if (action !== \"exists\") {\n                    if (isQuote(selector.charCodeAt(selectorIndex))) {\n                        var quote = selector.charCodeAt(selectorIndex);\n                        var sectionEnd = selectorIndex + 1;\n                        while (sectionEnd < selector.length &&\n                            (selector.charCodeAt(sectionEnd) !== quote ||\n                                isEscaped(sectionEnd))) {\n                            sectionEnd += 1;\n                        }\n                        if (selector.charCodeAt(sectionEnd) !== quote) {\n                            throw new Error(\"Attribute value didn't end\");\n                        }\n                        value = unescapeCSS(selector.slice(selectorIndex + 1, sectionEnd));\n                        selectorIndex = sectionEnd + 1;\n                    }\n                    else {\n                        var valueStart = selectorIndex;\n                        while (selectorIndex < selector.length &&\n                            ((!isWhitespace(selector.charCodeAt(selectorIndex)) &&\n                                selector.charCodeAt(selectorIndex) !==\n                                    93 /* RightSquareBracket */) ||\n                                isEscaped(selectorIndex))) {\n                            selectorIndex += 1;\n                        }\n                        value = unescapeCSS(selector.slice(valueStart, selectorIndex));\n                    }\n                    stripWhitespace(0);\n                    // See if we have a force ignore flag\n                    var forceIgnore = selector.charCodeAt(selectorIndex) | 0x20;\n                    // If the forceIgnore flag is set (either `i` or `s`), use that value\n                    if (forceIgnore === 115 /* LowerS */) {\n                        ignoreCase = false;\n                        stripWhitespace(1);\n                    }\n                    else if (forceIgnore === 105 /* LowerI */) {\n                        ignoreCase = true;\n                        stripWhitespace(1);\n                    }\n                }\n                if (selector.charCodeAt(selectorIndex) !==\n                    93 /* RightSquareBracket */) {\n                    throw new Error(\"Attribute selector didn't terminate\");\n                }\n                selectorIndex += 1;\n                var attributeSelector = {\n                    type: types_1.SelectorType.Attribute,\n                    name: name_1,\n                    action: action,\n                    value: value,\n                    namespace: namespace,\n                    ignoreCase: ignoreCase,\n                };\n                tokens.push(attributeSelector);\n                break;\n            }\n            case 58 /* Colon */: {\n                if (selector.charCodeAt(selectorIndex + 1) === 58 /* Colon */) {\n                    tokens.push({\n                        type: types_1.SelectorType.PseudoElement,\n                        name: getName(2).toLowerCase(),\n                        data: selector.charCodeAt(selectorIndex) ===\n                            40 /* LeftParenthesis */\n                            ? readValueWithParenthesis()\n                            : null,\n                    });\n                    continue;\n                }\n                var name_2 = getName(1).toLowerCase();\n                var data = null;\n                if (selector.charCodeAt(selectorIndex) ===\n                    40 /* LeftParenthesis */) {\n                    if (unpackPseudos.has(name_2)) {\n                        if (isQuote(selector.charCodeAt(selectorIndex + 1))) {\n                            throw new Error(\"Pseudo-selector \".concat(name_2, \" cannot be quoted\"));\n                        }\n                        data = [];\n                        selectorIndex = parseSelector(data, selector, selectorIndex + 1);\n                        if (selector.charCodeAt(selectorIndex) !==\n                            41 /* RightParenthesis */) {\n                            throw new Error(\"Missing closing parenthesis in :\".concat(name_2, \" (\").concat(selector, \")\"));\n                        }\n                        selectorIndex += 1;\n                    }\n                    else {\n                        data = readValueWithParenthesis();\n                        if (stripQuotesFromPseudos.has(name_2)) {\n                            var quot = data.charCodeAt(0);\n                            if (quot === data.charCodeAt(data.length - 1) &&\n                                isQuote(quot)) {\n                                data = data.slice(1, -1);\n                            }\n                        }\n                        data = unescapeCSS(data);\n                    }\n                }\n                tokens.push({ type: types_1.SelectorType.Pseudo, name: name_2, data: data });\n                break;\n            }\n            case 44 /* Comma */: {\n                finalizeSubselector();\n                tokens = [];\n                stripWhitespace(1);\n                break;\n            }\n            default: {\n                if (selector.startsWith(\"/*\", selectorIndex)) {\n                    var endIndex = selector.indexOf(\"*/\", selectorIndex + 2);\n                    if (endIndex < 0) {\n                        throw new Error(\"Comment was not terminated\");\n                    }\n                    selectorIndex = endIndex + 2;\n                    // Remove leading whitespace\n                    if (tokens.length === 0) {\n                        stripWhitespace(0);\n                    }\n                    break;\n                }\n                var namespace = null;\n                var name_3 = void 0;\n                if (firstChar === 42 /* Asterisk */) {\n                    selectorIndex += 1;\n                    name_3 = \"*\";\n                }\n                else if (firstChar === 124 /* Pipe */) {\n                    name_3 = \"\";\n                    if (selector.charCodeAt(selectorIndex + 1) === 124 /* Pipe */) {\n                        addTraversal(types_1.SelectorType.ColumnCombinator);\n                        stripWhitespace(2);\n                        break;\n                    }\n                }\n                else if (reName.test(selector.slice(selectorIndex))) {\n                    name_3 = getName(0);\n                }\n                else {\n                    break loop;\n                }\n                if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ &&\n                    selector.charCodeAt(selectorIndex + 1) !== 124 /* Pipe */) {\n                    namespace = name_3;\n                    if (selector.charCodeAt(selectorIndex + 1) ===\n                        42 /* Asterisk */) {\n                        name_3 = \"*\";\n                        selectorIndex += 2;\n                    }\n                    else {\n                        name_3 = getName(1);\n                    }\n                }\n                tokens.push(name_3 === \"*\"\n                    ? { type: types_1.SelectorType.Universal, namespace: namespace }\n                    : { type: types_1.SelectorType.Tag, name: name_3, namespace: namespace });\n            }\n        }\n    }\n    finalizeSubselector();\n    return selectorIndex;\n}\n"],"mappings":"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"}