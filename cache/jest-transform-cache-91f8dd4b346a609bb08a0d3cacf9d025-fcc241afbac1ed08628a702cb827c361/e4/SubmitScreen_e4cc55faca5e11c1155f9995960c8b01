b8d8a1819467ca676df3f6e2560ff761
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _App = require("./../../App");
var _material = require("@mui/material");
var _reactRouter = require("react-router");
var _reactChartjs = require("react-chartjs-2");
require("chart.js/auto");
var _jsxRuntime = require("react/jsx-runtime");
const SubmitScreen = () => {
  const navigation = (0, _reactRouter.useNavigate)();
  const {
    score,
    setScore,
    selectedLanguage,
    email,
    name,
    phoneNumber,
    age
  } = (0, _react.useContext)(_App.QuizContext);
  const pieData = {
    labels: ["Correct Answers", "Incorrect Answers"],
    datasets: [{
      data: [score, 8 - score],
      backgroundColor: ["green", "red"]
    }]
  };
  const handleNavigate = () => {
    setScore(0);
    navigation("/");
  };
  return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
    className: "quiz-container",
    "data-testid": "submission-container",
    children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_material.Box, {
      sx: {
        display: "flex",
        flexDirection: "column",
        gap: 2
      },
      children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)(_material.Box, {
        sx: {
          border: 1,
          borderColor: "divider",
          p: 2,
          borderRadius: 2,
          display: "flex",
          flexDirection: "column",
          gap: 1
        },
        children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)(_material.Box, {
          sx: {
            display: "flex",
            gap: 0.8
          },
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_material.Typography, {
            children: "Name: "
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_material.Typography, {
            children: name
          })]
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)(_material.Box, {
          sx: {
            display: "flex",
            gap: 0.8
          },
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_material.Typography, {
            children: "Age: "
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_material.Typography, {
            children: age
          })]
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)(_material.Box, {
          sx: {
            display: "flex",
            gap: 0.8
          },
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_material.Typography, {
            children: "Phone Number: "
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_material.Typography, {
            children: phoneNumber
          })]
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)(_material.Box, {
          sx: {
            display: "flex",
            gap: 0.8
          },
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_material.Typography, {
            children: "Mail ID: "
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_material.Typography, {
            children: email
          })]
        })]
      }), /*#__PURE__*/(0, _jsxRuntime.jsxs)(_material.Box, {
        sx: {
          display: "flex",
          gap: 0.8,
          justifyContent: "center"
        },
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_material.Typography, {
          children: "Your selected language was. . ."
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_material.Typography, {
          sx: {
            color: "red"
          },
          children: selectedLanguage
        })]
      }), /*#__PURE__*/(0, _jsxRuntime.jsxs)(_material.Box, {
        sx: {
          display: "flex",
          gap: 10
        },
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_material.Typography, {
          children: "Maximum Score: 8"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_material.Typography, {
          children: "QnA: 4"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_material.Typography, {
          children: "Drag and Drop Question: 4"
        })]
      }), /*#__PURE__*/(0, _jsxRuntime.jsxs)(_material.Box, {
        sx: {
          display: "flex",
          gap: 2
        },
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_material.Typography, {
          children: "You have scored"
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)(_material.Typography, {
          sx: {
            color: "red",
            border: 2,
            borderRadius: 10,
            p: 0.2
          },
          children: [score, "/8"]
        }), score === 8 ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_material.Typography, {
          children: "Congratulations! You have received the full score!"
        }) : /*#__PURE__*/(0, _jsxRuntime.jsx)(_material.Typography, {
          children: "Try again for full score!"
        })]
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_material.Box, {
        sx: {
          display: "flex",
          flexDirection: "column",
          gap: 2,
          p: 1,
          alignItems: "center"
        },
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_material.Box, {
          sx: {
            width: "50%",
            margin: "0 auto"
          },
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactChartjs.Pie, {
            data: pieData,
            "data-testid": "submitscreen-piechart"
          })
        })
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_material.Box, {
        sx: {
          display: "flex",
          justifyContent: "flex-end"
        },
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_material.Button, {
          onClick: handleNavigate,
          children: "Try again?"
        })
      })]
    })
  });
};
var _default = SubmitScreen;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,