101991aa39d8231e3b80e19e563aaf58
"use strict";

// Following http://www.w3.org/TR/css3-selectors/#nth-child-pseudo
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parse = void 0;
// Whitespace as per https://www.w3.org/TR/selectors-3/#lex is " \t\r\n\f"
var whitespace = new Set([9, 10, 12, 13, 32]);
var ZERO = "0".charCodeAt(0);
var NINE = "9".charCodeAt(0);
/**
 * Parses an expression.
 *
 * @throws An `Error` if parsing fails.
 * @returns An array containing the integer step size and the integer offset of the nth rule.
 * @example nthCheck.parse("2n+3"); // returns [2, 3]
 */
function parse(formula) {
  formula = formula.trim().toLowerCase();
  if (formula === "even") {
    return [2, 0];
  } else if (formula === "odd") {
    return [2, 1];
  }
  // Parse [ ['-'|'+']? INTEGER? {N} [ S* ['-'|'+'] S* INTEGER ]?
  var idx = 0;
  var a = 0;
  var sign = readSign();
  var number = readNumber();
  if (idx < formula.length && formula.charAt(idx) === "n") {
    idx++;
    a = sign * (number !== null && number !== void 0 ? number : 1);
    skipWhitespace();
    if (idx < formula.length) {
      sign = readSign();
      skipWhitespace();
      number = readNumber();
    } else {
      sign = number = 0;
    }
  }
  // Throw if there is anything else
  if (number === null || idx < formula.length) {
    throw new Error("n-th rule couldn't be parsed ('".concat(formula, "')"));
  }
  return [a, sign * number];
  function readSign() {
    if (formula.charAt(idx) === "-") {
      idx++;
      return -1;
    }
    if (formula.charAt(idx) === "+") {
      idx++;
    }
    return 1;
  }
  function readNumber() {
    var start = idx;
    var value = 0;
    while (idx < formula.length && formula.charCodeAt(idx) >= ZERO && formula.charCodeAt(idx) <= NINE) {
      value = value * 10 + (formula.charCodeAt(idx) - ZERO);
      idx++;
    }
    // Return `null` if we didn't read anything.
    return idx === start ? null : value;
  }
  function skipWhitespace() {
    while (idx < formula.length && whitespace.has(formula.charCodeAt(idx))) {
      idx++;
    }
  }
}
exports.parse = parse;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ3aGl0ZXNwYWNlIiwiU2V0IiwiWkVSTyIsImNoYXJDb2RlQXQiLCJOSU5FIiwicGFyc2UiLCJmb3JtdWxhIiwidHJpbSIsInRvTG93ZXJDYXNlIiwiaWR4IiwiYSIsInNpZ24iLCJyZWFkU2lnbiIsIm51bWJlciIsInJlYWROdW1iZXIiLCJsZW5ndGgiLCJjaGFyQXQiLCJza2lwV2hpdGVzcGFjZSIsIkVycm9yIiwiY29uY2F0Iiwic3RhcnQiLCJ2YWx1ZSIsImhhcyIsImV4cG9ydHMiXSwic291cmNlcyI6WyJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZmI1NS9udGgtY2hlY2svNjM5ZmQyYTQwMDBiNjlmODIzNTBhYWQ4YzM0Y2I0M2Y3N2U0ODNiYS9zcmMvcGFyc2UudHMiXSwic291cmNlc0NvbnRlbnQiOltudWxsXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7O0FBRUE7QUFDQSxJQUFNQSxVQUFVLEdBQUcsSUFBSUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQy9DLElBQU1DLElBQUksR0FBRyxHQUFHLENBQUNDLFVBQVUsQ0FBQyxDQUFDLENBQUM7QUFDOUIsSUFBTUMsSUFBSSxHQUFHLEdBQUcsQ0FBQ0QsVUFBVSxDQUFDLENBQUMsQ0FBQztBQUU5Qjs7Ozs7OztBQU9BLFNBQWdCRSxLQUFLQSxDQUFDQyxPQUFlO0VBQ2pDQSxPQUFPLEdBQUdBLE9BQU8sQ0FBQ0MsSUFBSSxFQUFFLENBQUNDLFdBQVcsRUFBRTtFQUV0QyxJQUFJRixPQUFPLEtBQUssTUFBTSxFQUFFO0lBQ3BCLE9BQU8sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0dBQ2hCLE1BQU0sSUFBSUEsT0FBTyxLQUFLLEtBQUssRUFBRTtJQUMxQixPQUFPLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQzs7RUFHakI7RUFFQSxJQUFJRyxHQUFHLEdBQUcsQ0FBQztFQUVYLElBQUlDLENBQUMsR0FBRyxDQUFDO0VBQ1QsSUFBSUMsSUFBSSxHQUFHQyxRQUFRLEVBQUU7RUFDckIsSUFBSUMsTUFBTSxHQUFHQyxVQUFVLEVBQUU7RUFFekIsSUFBSUwsR0FBRyxHQUFHSCxPQUFPLENBQUNTLE1BQU0sSUFBSVQsT0FBTyxDQUFDVSxNQUFNLENBQUNQLEdBQUcsQ0FBQyxLQUFLLEdBQUcsRUFBRTtJQUNyREEsR0FBRyxFQUFFO0lBQ0xDLENBQUMsR0FBR0MsSUFBSSxJQUFJRSxNQUFNLGFBQU5BLE1BQU0sY0FBTkEsTUFBTSxHQUFJLENBQUMsQ0FBQztJQUV4QkksY0FBYyxFQUFFO0lBRWhCLElBQUlSLEdBQUcsR0FBR0gsT0FBTyxDQUFDUyxNQUFNLEVBQUU7TUFDdEJKLElBQUksR0FBR0MsUUFBUSxFQUFFO01BQ2pCSyxjQUFjLEVBQUU7TUFDaEJKLE1BQU0sR0FBR0MsVUFBVSxFQUFFO0tBQ3hCLE1BQU07TUFDSEgsSUFBSSxHQUFHRSxNQUFNLEdBQUcsQ0FBQzs7O0VBSXpCO0VBQ0EsSUFBSUEsTUFBTSxLQUFLLElBQUksSUFBSUosR0FBRyxHQUFHSCxPQUFPLENBQUNTLE1BQU0sRUFBRTtJQUN6QyxNQUFNLElBQUlHLEtBQUssQ0FBQyxrQ0FBQUMsTUFBQSxDQUFrQ2IsT0FBTyxPQUFJLENBQUM7O0VBR2xFLE9BQU8sQ0FBQ0ksQ0FBQyxFQUFFQyxJQUFJLEdBQUdFLE1BQU0sQ0FBQztFQUV6QixTQUFTRCxRQUFRQSxDQUFBO0lBQ2IsSUFBSU4sT0FBTyxDQUFDVSxNQUFNLENBQUNQLEdBQUcsQ0FBQyxLQUFLLEdBQUcsRUFBRTtNQUM3QkEsR0FBRyxFQUFFO01BQ0wsT0FBTyxDQUFDLENBQUM7O0lBR2IsSUFBSUgsT0FBTyxDQUFDVSxNQUFNLENBQUNQLEdBQUcsQ0FBQyxLQUFLLEdBQUcsRUFBRTtNQUM3QkEsR0FBRyxFQUFFOztJQUdULE9BQU8sQ0FBQztFQUNaO0VBRUEsU0FBU0ssVUFBVUEsQ0FBQTtJQUNmLElBQU1NLEtBQUssR0FBR1gsR0FBRztJQUNqQixJQUFJWSxLQUFLLEdBQUcsQ0FBQztJQUViLE9BQ0laLEdBQUcsR0FBR0gsT0FBTyxDQUFDUyxNQUFNLElBQ3BCVCxPQUFPLENBQUNILFVBQVUsQ0FBQ00sR0FBRyxDQUFDLElBQUlQLElBQUksSUFDL0JJLE9BQU8sQ0FBQ0gsVUFBVSxDQUFDTSxHQUFHLENBQUMsSUFBSUwsSUFBSSxFQUNqQztNQUNFaUIsS0FBSyxHQUFHQSxLQUFLLEdBQUcsRUFBRSxJQUFJZixPQUFPLENBQUNILFVBQVUsQ0FBQ00sR0FBRyxDQUFDLEdBQUdQLElBQUksQ0FBQztNQUNyRE8sR0FBRyxFQUFFOztJQUdUO0lBQ0EsT0FBT0EsR0FBRyxLQUFLVyxLQUFLLEdBQUcsSUFBSSxHQUFHQyxLQUFLO0VBQ3ZDO0VBRUEsU0FBU0osY0FBY0EsQ0FBQTtJQUNuQixPQUNJUixHQUFHLEdBQUdILE9BQU8sQ0FBQ1MsTUFBTSxJQUNwQmYsVUFBVSxDQUFDc0IsR0FBRyxDQUFDaEIsT0FBTyxDQUFDSCxVQUFVLENBQUNNLEdBQUcsQ0FBQyxDQUFDLEVBQ3pDO01BQ0VBLEdBQUcsRUFBRTs7RUFFYjtBQUNKO0FBN0VBYyxPQUFBLENBQUFsQixLQUFBLEdBQUFBLEtBQUEifQ==