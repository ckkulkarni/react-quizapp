{"version":3,"names":["_BrowserDetector","require","_MonotonicInterpolant","ELEMENT_NODE","getNodeClientOffset","node","el","nodeType","parentElement","top","left","getBoundingClientRect","x","y","getEventClientOffset","e","clientX","clientY","isImageNode","ref","nodeName","isFirefox","document","documentElement","contains","getDragPreviewSize","isImage","dragPreview","sourceWidth","sourceHeight","dragPreviewWidth","width","dragPreviewHeight","height","isSafari","window","devicePixelRatio","getDragPreviewOffset","sourceNode","clientOffset","anchorPoint","offsetPoint","dragPreviewNode","dragPreviewNodeOffsetFromClient","offsetFromDragPreview","offsetWidth","offsetHeight","anchorX","anchorY","calculateYOffset","interpolantY","MonotonicInterpolant","interpolate","calculateXOffset","interpolantX","offsetX","offsetY","isManualOffsetX","isManualOffsetY"],"sources":["../src/OffsetUtils.ts"],"sourcesContent":["import type { XYCoord } from 'dnd-core'\n\nimport { isFirefox, isSafari } from './BrowserDetector.js'\nimport { MonotonicInterpolant } from './MonotonicInterpolant.js'\n\nconst ELEMENT_NODE = 1\n\nexport function getNodeClientOffset(node: Node): XYCoord | null {\n\tconst el = node.nodeType === ELEMENT_NODE ? node : node.parentElement\n\n\tif (!el) {\n\t\treturn null\n\t}\n\n\tconst { top, left } = (el as HTMLElement).getBoundingClientRect()\n\treturn { x: left, y: top }\n}\n\nexport function getEventClientOffset(e: MouseEvent): XYCoord {\n\treturn {\n\t\tx: e.clientX,\n\t\ty: e.clientY,\n\t}\n}\n\nfunction isImageNode(node: any) {\n\treturn (\n\t\tnode.nodeName === 'IMG' &&\n\t\t(isFirefox() || !document.documentElement?.contains(node))\n\t)\n}\n\nfunction getDragPreviewSize(\n\tisImage: boolean,\n\tdragPreview: any,\n\tsourceWidth: number,\n\tsourceHeight: number,\n) {\n\tlet dragPreviewWidth = isImage ? dragPreview.width : sourceWidth\n\tlet dragPreviewHeight = isImage ? dragPreview.height : sourceHeight\n\n\t// Work around @2x coordinate discrepancies in browsers\n\tif (isSafari() && isImage) {\n\t\tdragPreviewHeight /= window.devicePixelRatio\n\t\tdragPreviewWidth /= window.devicePixelRatio\n\t}\n\treturn { dragPreviewWidth, dragPreviewHeight }\n}\n\nexport function getDragPreviewOffset(\n\tsourceNode: HTMLElement,\n\tdragPreview: HTMLElement,\n\tclientOffset: XYCoord,\n\tanchorPoint: { anchorX: number; anchorY: number },\n\toffsetPoint: { offsetX: number; offsetY: number },\n): XYCoord {\n\t// The browsers will use the image intrinsic size under different conditions.\n\t// Firefox only cares if it's an image, but WebKit also wants it to be detached.\n\tconst isImage = isImageNode(dragPreview)\n\tconst dragPreviewNode = isImage ? sourceNode : dragPreview\n\tconst dragPreviewNodeOffsetFromClient = getNodeClientOffset(\n\t\tdragPreviewNode,\n\t) as XYCoord\n\tconst offsetFromDragPreview = {\n\t\tx: clientOffset.x - dragPreviewNodeOffsetFromClient.x,\n\t\ty: clientOffset.y - dragPreviewNodeOffsetFromClient.y,\n\t}\n\tconst { offsetWidth: sourceWidth, offsetHeight: sourceHeight } = sourceNode\n\tconst { anchorX, anchorY } = anchorPoint\n\tconst { dragPreviewWidth, dragPreviewHeight } = getDragPreviewSize(\n\t\tisImage,\n\t\tdragPreview,\n\t\tsourceWidth,\n\t\tsourceHeight,\n\t)\n\n\tconst calculateYOffset = () => {\n\t\tconst interpolantY = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the top\n\t\t\t\toffsetFromDragPreview.y,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.y / sourceHeight) * dragPreviewHeight,\n\t\t\t\t// Dock to the bottom\n\t\t\t\toffsetFromDragPreview.y + dragPreviewHeight - sourceHeight,\n\t\t\t],\n\t\t)\n\t\tlet y = interpolantY.interpolate(anchorY)\n\t\t// Work around Safari 8 positioning bug\n\t\tif (isSafari() && isImage) {\n\t\t\t// We'll have to wait for @3x to see if this is entirely correct\n\t\t\ty += (window.devicePixelRatio - 1) * dragPreviewHeight\n\t\t}\n\t\treturn y\n\t}\n\n\tconst calculateXOffset = () => {\n\t\t// Interpolate coordinates depending on anchor point\n\t\t// If you know a simpler way to do this, let me know\n\t\tconst interpolantX = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the left\n\t\t\t\toffsetFromDragPreview.x,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.x / sourceWidth) * dragPreviewWidth,\n\t\t\t\t// Dock to the right\n\t\t\t\toffsetFromDragPreview.x + dragPreviewWidth - sourceWidth,\n\t\t\t],\n\t\t)\n\t\treturn interpolantX.interpolate(anchorX)\n\t}\n\n\t// Force offsets if specified in the options.\n\tconst { offsetX, offsetY } = offsetPoint\n\tconst isManualOffsetX = offsetX === 0 || offsetX\n\tconst isManualOffsetY = offsetY === 0 || offsetY\n\treturn {\n\t\tx: isManualOffsetX ? offsetX : calculateXOffset(),\n\t\ty: isManualOffsetY ? offsetY : calculateYOffset(),\n\t}\n}\n"],"mappings":"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"}