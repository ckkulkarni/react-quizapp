0494013f661c45c498e4aaebc4489931
'use strict';

var GetIntrinsic = require('get-intrinsic');
var $TypeError = GetIntrinsic('%TypeError%');
var $Number = GetIntrinsic('%Number%');
var isPrimitive = require('../helpers/isPrimitive');
var ToPrimitive = require('./ToPrimitive');
var StringToNumber = require('./StringToNumber');

// https://ecma-international.org/ecma-262/13.0/#sec-tonumber

module.exports = function ToNumber(argument) {
  var value = isPrimitive(argument) ? argument : ToPrimitive(argument, $Number);
  if (typeof value === 'symbol') {
    throw new $TypeError('Cannot convert a Symbol value to a number');
  }
  if (typeof value === 'bigint') {
    throw new $TypeError('Conversion from \'BigInt\' to \'number\' is not allowed.');
  }
  if (typeof value === 'string') {
    return StringToNumber(value);
  }
  return $Number(value);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJHZXRJbnRyaW5zaWMiLCJyZXF1aXJlIiwiJFR5cGVFcnJvciIsIiROdW1iZXIiLCJpc1ByaW1pdGl2ZSIsIlRvUHJpbWl0aXZlIiwiU3RyaW5nVG9OdW1iZXIiLCJtb2R1bGUiLCJleHBvcnRzIiwiVG9OdW1iZXIiLCJhcmd1bWVudCIsInZhbHVlIl0sInNvdXJjZXMiOlsiVG9OdW1iZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgR2V0SW50cmluc2ljID0gcmVxdWlyZSgnZ2V0LWludHJpbnNpYycpO1xuXG52YXIgJFR5cGVFcnJvciA9IEdldEludHJpbnNpYygnJVR5cGVFcnJvciUnKTtcbnZhciAkTnVtYmVyID0gR2V0SW50cmluc2ljKCclTnVtYmVyJScpO1xudmFyIGlzUHJpbWl0aXZlID0gcmVxdWlyZSgnLi4vaGVscGVycy9pc1ByaW1pdGl2ZScpO1xuXG52YXIgVG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL1RvUHJpbWl0aXZlJyk7XG52YXIgU3RyaW5nVG9OdW1iZXIgPSByZXF1aXJlKCcuL1N0cmluZ1RvTnVtYmVyJyk7XG5cbi8vIGh0dHBzOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi8xMy4wLyNzZWMtdG9udW1iZXJcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBUb051bWJlcihhcmd1bWVudCkge1xuXHR2YXIgdmFsdWUgPSBpc1ByaW1pdGl2ZShhcmd1bWVudCkgPyBhcmd1bWVudCA6IFRvUHJpbWl0aXZlKGFyZ3VtZW50LCAkTnVtYmVyKTtcblx0aWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N5bWJvbCcpIHtcblx0XHR0aHJvdyBuZXcgJFR5cGVFcnJvcignQ2Fubm90IGNvbnZlcnQgYSBTeW1ib2wgdmFsdWUgdG8gYSBudW1iZXInKTtcblx0fVxuXHRpZiAodHlwZW9mIHZhbHVlID09PSAnYmlnaW50Jykge1xuXHRcdHRocm93IG5ldyAkVHlwZUVycm9yKCdDb252ZXJzaW9uIGZyb20gXFwnQmlnSW50XFwnIHRvIFxcJ251bWJlclxcJyBpcyBub3QgYWxsb3dlZC4nKTtcblx0fVxuXHRpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuXHRcdHJldHVybiBTdHJpbmdUb051bWJlcih2YWx1ZSk7XG5cdH1cblx0cmV0dXJuICROdW1iZXIodmFsdWUpO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFFWixJQUFJQSxZQUFZLEdBQUdDLE9BQU8sQ0FBQyxlQUFlLENBQUM7QUFFM0MsSUFBSUMsVUFBVSxHQUFHRixZQUFZLENBQUMsYUFBYSxDQUFDO0FBQzVDLElBQUlHLE9BQU8sR0FBR0gsWUFBWSxDQUFDLFVBQVUsQ0FBQztBQUN0QyxJQUFJSSxXQUFXLEdBQUdILE9BQU8sQ0FBQyx3QkFBd0IsQ0FBQztBQUVuRCxJQUFJSSxXQUFXLEdBQUdKLE9BQU8sQ0FBQyxlQUFlLENBQUM7QUFDMUMsSUFBSUssY0FBYyxHQUFHTCxPQUFPLENBQUMsa0JBQWtCLENBQUM7O0FBRWhEOztBQUVBTSxNQUFNLENBQUNDLE9BQU8sR0FBRyxTQUFTQyxRQUFRQSxDQUFDQyxRQUFRLEVBQUU7RUFDNUMsSUFBSUMsS0FBSyxHQUFHUCxXQUFXLENBQUNNLFFBQVEsQ0FBQyxHQUFHQSxRQUFRLEdBQUdMLFdBQVcsQ0FBQ0ssUUFBUSxFQUFFUCxPQUFPLENBQUM7RUFDN0UsSUFBSSxPQUFPUSxLQUFLLEtBQUssUUFBUSxFQUFFO0lBQzlCLE1BQU0sSUFBSVQsVUFBVSxDQUFDLDJDQUEyQyxDQUFDO0VBQ2xFO0VBQ0EsSUFBSSxPQUFPUyxLQUFLLEtBQUssUUFBUSxFQUFFO0lBQzlCLE1BQU0sSUFBSVQsVUFBVSxDQUFDLDBEQUEwRCxDQUFDO0VBQ2pGO0VBQ0EsSUFBSSxPQUFPUyxLQUFLLEtBQUssUUFBUSxFQUFFO0lBQzlCLE9BQU9MLGNBQWMsQ0FBQ0ssS0FBSyxDQUFDO0VBQzdCO0VBQ0EsT0FBT1IsT0FBTyxDQUFDUSxLQUFLLENBQUM7QUFDdEIsQ0FBQyJ9