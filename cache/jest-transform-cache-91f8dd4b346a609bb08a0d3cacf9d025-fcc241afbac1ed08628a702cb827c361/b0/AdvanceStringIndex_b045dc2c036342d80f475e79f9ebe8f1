43a003516a7080a20546e172cce090a0
'use strict';

var GetIntrinsic = require('get-intrinsic');
var CodePointAt = require('./CodePointAt');
var IsIntegralNumber = require('./IsIntegralNumber');
var Type = require('./Type');
var MAX_SAFE_INTEGER = require('../helpers/maxSafeInteger');
var $TypeError = GetIntrinsic('%TypeError%');

// https://ecma-international.org/ecma-262/12.0/#sec-advancestringindex

module.exports = function AdvanceStringIndex(S, index, unicode) {
  if (Type(S) !== 'String') {
    throw new $TypeError('Assertion failed: `S` must be a String');
  }
  if (!IsIntegralNumber(index) || index < 0 || index > MAX_SAFE_INTEGER) {
    throw new $TypeError('Assertion failed: `length` must be an integer >= 0 and <= 2**53');
  }
  if (Type(unicode) !== 'Boolean') {
    throw new $TypeError('Assertion failed: `unicode` must be a Boolean');
  }
  if (!unicode) {
    return index + 1;
  }
  var length = S.length;
  if (index + 1 >= length) {
    return index + 1;
  }
  var cp = CodePointAt(S, index);
  return index + cp['[[CodeUnitCount]]'];
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJHZXRJbnRyaW5zaWMiLCJyZXF1aXJlIiwiQ29kZVBvaW50QXQiLCJJc0ludGVncmFsTnVtYmVyIiwiVHlwZSIsIk1BWF9TQUZFX0lOVEVHRVIiLCIkVHlwZUVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyIsIkFkdmFuY2VTdHJpbmdJbmRleCIsIlMiLCJpbmRleCIsInVuaWNvZGUiLCJsZW5ndGgiLCJjcCJdLCJzb3VyY2VzIjpbIkFkdmFuY2VTdHJpbmdJbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBHZXRJbnRyaW5zaWMgPSByZXF1aXJlKCdnZXQtaW50cmluc2ljJyk7XG5cbnZhciBDb2RlUG9pbnRBdCA9IHJlcXVpcmUoJy4vQ29kZVBvaW50QXQnKTtcbnZhciBJc0ludGVncmFsTnVtYmVyID0gcmVxdWlyZSgnLi9Jc0ludGVncmFsTnVtYmVyJyk7XG52YXIgVHlwZSA9IHJlcXVpcmUoJy4vVHlwZScpO1xuXG52YXIgTUFYX1NBRkVfSU5URUdFUiA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvbWF4U2FmZUludGVnZXInKTtcblxudmFyICRUeXBlRXJyb3IgPSBHZXRJbnRyaW5zaWMoJyVUeXBlRXJyb3IlJyk7XG5cbi8vIGh0dHBzOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi8xMi4wLyNzZWMtYWR2YW5jZXN0cmluZ2luZGV4XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gQWR2YW5jZVN0cmluZ0luZGV4KFMsIGluZGV4LCB1bmljb2RlKSB7XG5cdGlmIChUeXBlKFMpICE9PSAnU3RyaW5nJykge1xuXHRcdHRocm93IG5ldyAkVHlwZUVycm9yKCdBc3NlcnRpb24gZmFpbGVkOiBgU2AgbXVzdCBiZSBhIFN0cmluZycpO1xuXHR9XG5cdGlmICghSXNJbnRlZ3JhbE51bWJlcihpbmRleCkgfHwgaW5kZXggPCAwIHx8IGluZGV4ID4gTUFYX1NBRkVfSU5URUdFUikge1xuXHRcdHRocm93IG5ldyAkVHlwZUVycm9yKCdBc3NlcnRpb24gZmFpbGVkOiBgbGVuZ3RoYCBtdXN0IGJlIGFuIGludGVnZXIgPj0gMCBhbmQgPD0gMioqNTMnKTtcblx0fVxuXHRpZiAoVHlwZSh1bmljb2RlKSAhPT0gJ0Jvb2xlYW4nKSB7XG5cdFx0dGhyb3cgbmV3ICRUeXBlRXJyb3IoJ0Fzc2VydGlvbiBmYWlsZWQ6IGB1bmljb2RlYCBtdXN0IGJlIGEgQm9vbGVhbicpO1xuXHR9XG5cdGlmICghdW5pY29kZSkge1xuXHRcdHJldHVybiBpbmRleCArIDE7XG5cdH1cblx0dmFyIGxlbmd0aCA9IFMubGVuZ3RoO1xuXHRpZiAoKGluZGV4ICsgMSkgPj0gbGVuZ3RoKSB7XG5cdFx0cmV0dXJuIGluZGV4ICsgMTtcblx0fVxuXHR2YXIgY3AgPSBDb2RlUG9pbnRBdChTLCBpbmRleCk7XG5cdHJldHVybiBpbmRleCArIGNwWydbW0NvZGVVbml0Q291bnRdXSddO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFFWixJQUFJQSxZQUFZLEdBQUdDLE9BQU8sQ0FBQyxlQUFlLENBQUM7QUFFM0MsSUFBSUMsV0FBVyxHQUFHRCxPQUFPLENBQUMsZUFBZSxDQUFDO0FBQzFDLElBQUlFLGdCQUFnQixHQUFHRixPQUFPLENBQUMsb0JBQW9CLENBQUM7QUFDcEQsSUFBSUcsSUFBSSxHQUFHSCxPQUFPLENBQUMsUUFBUSxDQUFDO0FBRTVCLElBQUlJLGdCQUFnQixHQUFHSixPQUFPLENBQUMsMkJBQTJCLENBQUM7QUFFM0QsSUFBSUssVUFBVSxHQUFHTixZQUFZLENBQUMsYUFBYSxDQUFDOztBQUU1Qzs7QUFFQU8sTUFBTSxDQUFDQyxPQUFPLEdBQUcsU0FBU0Msa0JBQWtCQSxDQUFDQyxDQUFDLEVBQUVDLEtBQUssRUFBRUMsT0FBTyxFQUFFO0VBQy9ELElBQUlSLElBQUksQ0FBQ00sQ0FBQyxDQUFDLEtBQUssUUFBUSxFQUFFO0lBQ3pCLE1BQU0sSUFBSUosVUFBVSxDQUFDLHdDQUF3QyxDQUFDO0VBQy9EO0VBQ0EsSUFBSSxDQUFDSCxnQkFBZ0IsQ0FBQ1EsS0FBSyxDQUFDLElBQUlBLEtBQUssR0FBRyxDQUFDLElBQUlBLEtBQUssR0FBR04sZ0JBQWdCLEVBQUU7SUFDdEUsTUFBTSxJQUFJQyxVQUFVLENBQUMsaUVBQWlFLENBQUM7RUFDeEY7RUFDQSxJQUFJRixJQUFJLENBQUNRLE9BQU8sQ0FBQyxLQUFLLFNBQVMsRUFBRTtJQUNoQyxNQUFNLElBQUlOLFVBQVUsQ0FBQywrQ0FBK0MsQ0FBQztFQUN0RTtFQUNBLElBQUksQ0FBQ00sT0FBTyxFQUFFO0lBQ2IsT0FBT0QsS0FBSyxHQUFHLENBQUM7RUFDakI7RUFDQSxJQUFJRSxNQUFNLEdBQUdILENBQUMsQ0FBQ0csTUFBTTtFQUNyQixJQUFLRixLQUFLLEdBQUcsQ0FBQyxJQUFLRSxNQUFNLEVBQUU7SUFDMUIsT0FBT0YsS0FBSyxHQUFHLENBQUM7RUFDakI7RUFDQSxJQUFJRyxFQUFFLEdBQUdaLFdBQVcsQ0FBQ1EsQ0FBQyxFQUFFQyxLQUFLLENBQUM7RUFDOUIsT0FBT0EsS0FBSyxHQUFHRyxFQUFFLENBQUMsbUJBQW1CLENBQUM7QUFDdkMsQ0FBQyJ9