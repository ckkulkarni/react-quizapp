bff1d76022b46afb1b97e5d2072324e6
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _material = require("@mui/material");
var _reactRouter = require("react-router");
var _formik = require("formik");
var _NavigateNext = _interopRequireDefault(require("@mui/icons-material/NavigateNext"));
var _App = require("./../../App");
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const Question2 = () => {
  const navigation = (0, _reactRouter.useNavigate)();
  const {
    score,
    setScore,
    trackScore,
    setTracker,
    selectedLanguage
  } = (0, _react.useContext)(_App.QuizContext);
  let questionText = "";
  let answersObject = [];
  if (selectedLanguage === "ReactJS") {
    questionText = "Which of these packages that are used to install React and create React Apps?";
    answersObject = ["JVM", "npm -- Node Package Manager"];
  } else if (selectedLanguage === "React Native") {
    questionText = "Is it true that React Native can only be used to create Android Apps?";
    answersObject = ["Yes", "No"];
  } else if (selectedLanguage === "Java") {
    questionText = "Arrays should always contain the same type of elements. True or false?";
    answersObject = ["True", "False"];
  }
  const [isSubmitted, setIsSubmitted] = (0, _react.useState)(false);
  const formik = (0, _formik.useFormik)({
    initialValues: {
      answer: ""
    },
    onSubmit: values => {
      if (selectedLanguage === "ReactJS") {
        if (values.answer === answersObject[1] && score < 2) {
          setScore(previous => previous + 1);
        }
      } else if (selectedLanguage === "React Native") {
        if (values.answer === answersObject[1] && score < 2) {
          setScore(previous => previous + 1);
        }
      } else if (selectedLanguage === "Java") {
        if (values.answer === answersObject[0] && score < 2) {
          setScore(previous => previous + 1);
        }
      }
      setIsSubmitted(true);
    }
  });
  const handleNavigation = () => {
    navigation("/question3");
  };
  const handleQuestionNavigation = index => {
    navigation(`/question${index}`);
  };
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_material.Box, {
      sx: {
        display: "flex",
        gap: 1,
        flexDirection: "column",
        alignItems: "flex-end",
        p: 1,
        mt: "25vh",
        mr: 2
      },
      children: [1, 2, 3, 4, 5].map(number => /*#__PURE__*/(0, _jsxRuntime.jsx)(_material.IconButton, {
        onClick: () => handleQuestionNavigation(number),
        sx: {
          border: 1,
          borderColor: "divider"
        },
        children: number
      }, number))
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "quiz-container",
      children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_material.Box, {
        sx: {
          display: "flex",
          justifyContent: "center",
          alignItems: "flex-start",
          flexDirection: "column",
          gap: 2
        },
        children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)(_material.Box, {
          sx: {
            display: "flex",
            flexDirection: "column",
            gap: 1
          },
          children: [trackScore && /*#__PURE__*/(0, _jsxRuntime.jsxs)(_material.Typography, {
            children: ["Score: ", score]
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_material.Button, {
            variant: "outlined",
            onClick: () => {
              setTracker(!trackScore);
            },
            children: trackScore ? "Disable Score Tracking" : "Enable Score Tracking"
          })]
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_material.Box, {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_material.Typography, {
            children: questionText
          })
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_material.RadioGroup, {
          name: "answer",
          value: formik.values.answer,
          onChange: formik.handleChange,
          children: answersObject.map(option => /*#__PURE__*/(0, _jsxRuntime.jsx)(_material.FormControlLabel, {
            value: option,
            control: /*#__PURE__*/(0, _jsxRuntime.jsx)(_material.Radio, {}),
            label: option,
            disabled: isSubmitted
          }, option))
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)(_material.Box, {
          sx: {
            display: "flex"
          },
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_material.Button, {
            variant: "contained",
            onClick: e => formik.handleSubmit(),
            disabled: isSubmitted,
            children: "Submit"
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_material.IconButton, {
            onClick: handleNavigation,
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_NavigateNext.default, {})
          })]
        })]
      })
    })]
  });
};
var _default = Question2;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,