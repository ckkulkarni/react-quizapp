0ff6f7feaa4bac815971b29c2752d719
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = render;
var _object = require('object.assign');
var _object2 = _interopRequireDefault(_object);
var _getAdapter = require('./getAdapter');
var _getAdapter2 = _interopRequireDefault(_getAdapter);
var _Utils = require('./Utils');
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    'default': obj
  };
}

/**
 * Renders a react component into static HTML and provides a cheerio wrapper around it. This is
 * somewhat asymmetric with `mount` and `shallow`, which don't use any external libraries, but
 * Cheerio's API is pretty close to what we actually want and has a significant amount of utility
 * that would be recreating the wheel if we didn't use it.
 *
 * I think there are a lot of good use cases to use `render` instead of `shallow` or `mount`, and
 * thus I'd like to keep this API in here even though it's not really "ours".
 *
 * @param node
 * @param options
 * @returns {Cheerio}
 */

function render(node) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var adapter = (0, _getAdapter2['default'])(options);
  var renderer = adapter.createRenderer((0, _object2['default'])({
    mode: 'string'
  }, options));
  var html = renderer.render(node, options.context);
  return (0, _Utils.loadCheerioRoot)(html);
}

//# sourceMappingURL=render.js.map
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZW5kZXIiLCJfZ2V0QWRhcHRlciIsInJlcXVpcmUiLCJfVXRpbHMiLCJub2RlIiwib3B0aW9ucyIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsImFkYXB0ZXIiLCJfZ2V0QWRhcHRlcjIiLCJyZW5kZXJlciIsImNyZWF0ZVJlbmRlcmVyIiwiX29iamVjdDIiLCJtb2RlIiwiaHRtbCIsImNvbnRleHQiLCJsb2FkQ2hlZXJpb1Jvb3QiXSwic291cmNlcyI6WyIuLi9zcmMvcmVuZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBnZXRBZGFwdGVyIGZyb20gJy4vZ2V0QWRhcHRlcic7XG5pbXBvcnQgeyBsb2FkQ2hlZXJpb1Jvb3QgfSBmcm9tICcuL1V0aWxzJztcblxuLyoqXG4gKiBSZW5kZXJzIGEgcmVhY3QgY29tcG9uZW50IGludG8gc3RhdGljIEhUTUwgYW5kIHByb3ZpZGVzIGEgY2hlZXJpbyB3cmFwcGVyIGFyb3VuZCBpdC4gVGhpcyBpc1xuICogc29tZXdoYXQgYXN5bW1ldHJpYyB3aXRoIGBtb3VudGAgYW5kIGBzaGFsbG93YCwgd2hpY2ggZG9uJ3QgdXNlIGFueSBleHRlcm5hbCBsaWJyYXJpZXMsIGJ1dFxuICogQ2hlZXJpbydzIEFQSSBpcyBwcmV0dHkgY2xvc2UgdG8gd2hhdCB3ZSBhY3R1YWxseSB3YW50IGFuZCBoYXMgYSBzaWduaWZpY2FudCBhbW91bnQgb2YgdXRpbGl0eVxuICogdGhhdCB3b3VsZCBiZSByZWNyZWF0aW5nIHRoZSB3aGVlbCBpZiB3ZSBkaWRuJ3QgdXNlIGl0LlxuICpcbiAqIEkgdGhpbmsgdGhlcmUgYXJlIGEgbG90IG9mIGdvb2QgdXNlIGNhc2VzIHRvIHVzZSBgcmVuZGVyYCBpbnN0ZWFkIG9mIGBzaGFsbG93YCBvciBgbW91bnRgLCBhbmRcbiAqIHRodXMgSSdkIGxpa2UgdG8ga2VlcCB0aGlzIEFQSSBpbiBoZXJlIGV2ZW4gdGhvdWdoIGl0J3Mgbm90IHJlYWxseSBcIm91cnNcIi5cbiAqXG4gKiBAcGFyYW0gbm9kZVxuICogQHBhcmFtIG9wdGlvbnNcbiAqIEByZXR1cm5zIHtDaGVlcmlvfVxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJlbmRlcihub2RlLCBvcHRpb25zID0ge30pIHtcbiAgY29uc3QgYWRhcHRlciA9IGdldEFkYXB0ZXIob3B0aW9ucyk7XG4gIGNvbnN0IHJlbmRlcmVyID0gYWRhcHRlci5jcmVhdGVSZW5kZXJlcih7IG1vZGU6ICdzdHJpbmcnLCAuLi5vcHRpb25zIH0pO1xuICBjb25zdCBodG1sID0gcmVuZGVyZXIucmVuZGVyKG5vZGUsIG9wdGlvbnMuY29udGV4dCk7XG4gIHJldHVybiBsb2FkQ2hlZXJpb1Jvb3QoaHRtbCk7XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7O3FCQWlCd0JBLE07OztBQWpCeEIsSUFBQUMsV0FBQSxHQUFBQyxPQUFBOztBQUNBLElBQUFDLE1BQUEsR0FBQUQsT0FBQTs7Ozs7OztBQUVBOzs7Ozs7Ozs7Ozs7OztBQWNlLFNBQVNGLE1BQVRBLENBQWdCSSxJQUFoQixFQUFvQztFQUFBLElBQWRDLE9BQWMsR0FBQUMsU0FBQSxDQUFBQyxNQUFBLFFBQUFELFNBQUEsUUFBQUUsU0FBQSxHQUFBRixTQUFBLE1BQUosRUFBSTtFQUNqRCxJQUFNRyxPQUFBLEdBQVUsSUFBQUMsWUFBQSxhQUFXTCxPQUFYLENBQWhCO0VBQ0EsSUFBTU0sUUFBQSxHQUFXRixPQUFBLENBQVFHLGNBQVIsS0FBQUMsUUFBQTtJQUF5QkMsSUFBQSxFQUFNO0VBQS9CLEdBQTRDVCxPQUE1QyxFQUFqQjtFQUNBLElBQU1VLElBQUEsR0FBT0osUUFBQSxDQUFTWCxNQUFULENBQWdCSSxJQUFoQixFQUFzQkMsT0FBQSxDQUFRVyxPQUE5QixDQUFiO0VBQ0EsT0FBTyxJQUFBYixNQUFBLENBQUFjLGVBQUEsRUFBZ0JGLElBQWhCLENBQVA7QUFDRCJ9