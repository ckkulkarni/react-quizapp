{"version":3,"names":["GetIntrinsic","require","CodePointAt","IsIntegralNumber","Type","MAX_SAFE_INTEGER","$TypeError","module","exports","AdvanceStringIndex","S","index","unicode","length","cp"],"sources":["AdvanceStringIndex.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar CodePointAt = require('./CodePointAt');\nvar IsIntegralNumber = require('./IsIntegralNumber');\nvar Type = require('./Type');\n\nvar MAX_SAFE_INTEGER = require('../helpers/maxSafeInteger');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\n// https://ecma-international.org/ecma-262/12.0/#sec-advancestringindex\n\nmodule.exports = function AdvanceStringIndex(S, index, unicode) {\n\tif (Type(S) !== 'String') {\n\t\tthrow new $TypeError('Assertion failed: `S` must be a String');\n\t}\n\tif (!IsIntegralNumber(index) || index < 0 || index > MAX_SAFE_INTEGER) {\n\t\tthrow new $TypeError('Assertion failed: `length` must be an integer >= 0 and <= 2**53');\n\t}\n\tif (Type(unicode) !== 'Boolean') {\n\t\tthrow new $TypeError('Assertion failed: `unicode` must be a Boolean');\n\t}\n\tif (!unicode) {\n\t\treturn index + 1;\n\t}\n\tvar length = S.length;\n\tif ((index + 1) >= length) {\n\t\treturn index + 1;\n\t}\n\tvar cp = CodePointAt(S, index);\n\treturn index + cp['[[CodeUnitCount]]'];\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE3C,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAe,CAAC;AAC1C,IAAIE,gBAAgB,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AACpD,IAAIG,IAAI,GAAGH,OAAO,CAAC,QAAQ,CAAC;AAE5B,IAAII,gBAAgB,GAAGJ,OAAO,CAAC,2BAA2B,CAAC;AAE3D,IAAIK,UAAU,GAAGN,YAAY,CAAC,aAAa,CAAC;;AAE5C;;AAEAO,MAAM,CAACC,OAAO,GAAG,SAASC,kBAAkBA,CAACC,CAAC,EAAEC,KAAK,EAAEC,OAAO,EAAE;EAC/D,IAAIR,IAAI,CAACM,CAAC,CAAC,KAAK,QAAQ,EAAE;IACzB,MAAM,IAAIJ,UAAU,CAAC,wCAAwC,CAAC;EAC/D;EACA,IAAI,CAACH,gBAAgB,CAACQ,KAAK,CAAC,IAAIA,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAGN,gBAAgB,EAAE;IACtE,MAAM,IAAIC,UAAU,CAAC,iEAAiE,CAAC;EACxF;EACA,IAAIF,IAAI,CAACQ,OAAO,CAAC,KAAK,SAAS,EAAE;IAChC,MAAM,IAAIN,UAAU,CAAC,+CAA+C,CAAC;EACtE;EACA,IAAI,CAACM,OAAO,EAAE;IACb,OAAOD,KAAK,GAAG,CAAC;EACjB;EACA,IAAIE,MAAM,GAAGH,CAAC,CAACG,MAAM;EACrB,IAAKF,KAAK,GAAG,CAAC,IAAKE,MAAM,EAAE;IAC1B,OAAOF,KAAK,GAAG,CAAC;EACjB;EACA,IAAIG,EAAE,GAAGZ,WAAW,CAACQ,CAAC,EAAEC,KAAK,CAAC;EAC9B,OAAOA,KAAK,GAAGG,EAAE,CAAC,mBAAmB,CAAC;AACvC,CAAC"}