679286db21838f37588d3f6208cd42b7
'use strict';

var has = require('has');
var GetIntrinsic = require('get-intrinsic');
var $TypeError = GetIntrinsic('%TypeError%');
var Type = require('./Type');
var ToBoolean = require('./ToBoolean');
var IsCallable = require('./IsCallable');

// https://262.ecma-international.org/5.1/#sec-8.10.5

module.exports = function ToPropertyDescriptor(Obj) {
  if (Type(Obj) !== 'Object') {
    throw new $TypeError('ToPropertyDescriptor requires an object');
  }
  var desc = {};
  if (has(Obj, 'enumerable')) {
    desc['[[Enumerable]]'] = ToBoolean(Obj.enumerable);
  }
  if (has(Obj, 'configurable')) {
    desc['[[Configurable]]'] = ToBoolean(Obj.configurable);
  }
  if (has(Obj, 'value')) {
    desc['[[Value]]'] = Obj.value;
  }
  if (has(Obj, 'writable')) {
    desc['[[Writable]]'] = ToBoolean(Obj.writable);
  }
  if (has(Obj, 'get')) {
    var getter = Obj.get;
    if (typeof getter !== 'undefined' && !IsCallable(getter)) {
      throw new $TypeError('getter must be a function');
    }
    desc['[[Get]]'] = getter;
  }
  if (has(Obj, 'set')) {
    var setter = Obj.set;
    if (typeof setter !== 'undefined' && !IsCallable(setter)) {
      throw new $TypeError('setter must be a function');
    }
    desc['[[Set]]'] = setter;
  }
  if ((has(desc, '[[Get]]') || has(desc, '[[Set]]')) && (has(desc, '[[Value]]') || has(desc, '[[Writable]]'))) {
    throw new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');
  }
  return desc;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJoYXMiLCJyZXF1aXJlIiwiR2V0SW50cmluc2ljIiwiJFR5cGVFcnJvciIsIlR5cGUiLCJUb0Jvb2xlYW4iLCJJc0NhbGxhYmxlIiwibW9kdWxlIiwiZXhwb3J0cyIsIlRvUHJvcGVydHlEZXNjcmlwdG9yIiwiT2JqIiwiZGVzYyIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ2YWx1ZSIsIndyaXRhYmxlIiwiZ2V0dGVyIiwiZ2V0Iiwic2V0dGVyIiwic2V0Il0sInNvdXJjZXMiOlsiVG9Qcm9wZXJ0eURlc2NyaXB0b3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaGFzID0gcmVxdWlyZSgnaGFzJyk7XG5cbnZhciBHZXRJbnRyaW5zaWMgPSByZXF1aXJlKCdnZXQtaW50cmluc2ljJyk7XG5cbnZhciAkVHlwZUVycm9yID0gR2V0SW50cmluc2ljKCclVHlwZUVycm9yJScpO1xuXG52YXIgVHlwZSA9IHJlcXVpcmUoJy4vVHlwZScpO1xudmFyIFRvQm9vbGVhbiA9IHJlcXVpcmUoJy4vVG9Cb29sZWFuJyk7XG52YXIgSXNDYWxsYWJsZSA9IHJlcXVpcmUoJy4vSXNDYWxsYWJsZScpO1xuXG4vLyBodHRwczovLzI2Mi5lY21hLWludGVybmF0aW9uYWwub3JnLzUuMS8jc2VjLTguMTAuNVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIFRvUHJvcGVydHlEZXNjcmlwdG9yKE9iaikge1xuXHRpZiAoVHlwZShPYmopICE9PSAnT2JqZWN0Jykge1xuXHRcdHRocm93IG5ldyAkVHlwZUVycm9yKCdUb1Byb3BlcnR5RGVzY3JpcHRvciByZXF1aXJlcyBhbiBvYmplY3QnKTtcblx0fVxuXG5cdHZhciBkZXNjID0ge307XG5cdGlmIChoYXMoT2JqLCAnZW51bWVyYWJsZScpKSB7XG5cdFx0ZGVzY1snW1tFbnVtZXJhYmxlXV0nXSA9IFRvQm9vbGVhbihPYmouZW51bWVyYWJsZSk7XG5cdH1cblx0aWYgKGhhcyhPYmosICdjb25maWd1cmFibGUnKSkge1xuXHRcdGRlc2NbJ1tbQ29uZmlndXJhYmxlXV0nXSA9IFRvQm9vbGVhbihPYmouY29uZmlndXJhYmxlKTtcblx0fVxuXHRpZiAoaGFzKE9iaiwgJ3ZhbHVlJykpIHtcblx0XHRkZXNjWydbW1ZhbHVlXV0nXSA9IE9iai52YWx1ZTtcblx0fVxuXHRpZiAoaGFzKE9iaiwgJ3dyaXRhYmxlJykpIHtcblx0XHRkZXNjWydbW1dyaXRhYmxlXV0nXSA9IFRvQm9vbGVhbihPYmoud3JpdGFibGUpO1xuXHR9XG5cdGlmIChoYXMoT2JqLCAnZ2V0JykpIHtcblx0XHR2YXIgZ2V0dGVyID0gT2JqLmdldDtcblx0XHRpZiAodHlwZW9mIGdldHRlciAhPT0gJ3VuZGVmaW5lZCcgJiYgIUlzQ2FsbGFibGUoZ2V0dGVyKSkge1xuXHRcdFx0dGhyb3cgbmV3ICRUeXBlRXJyb3IoJ2dldHRlciBtdXN0IGJlIGEgZnVuY3Rpb24nKTtcblx0XHR9XG5cdFx0ZGVzY1snW1tHZXRdXSddID0gZ2V0dGVyO1xuXHR9XG5cdGlmIChoYXMoT2JqLCAnc2V0JykpIHtcblx0XHR2YXIgc2V0dGVyID0gT2JqLnNldDtcblx0XHRpZiAodHlwZW9mIHNldHRlciAhPT0gJ3VuZGVmaW5lZCcgJiYgIUlzQ2FsbGFibGUoc2V0dGVyKSkge1xuXHRcdFx0dGhyb3cgbmV3ICRUeXBlRXJyb3IoJ3NldHRlciBtdXN0IGJlIGEgZnVuY3Rpb24nKTtcblx0XHR9XG5cdFx0ZGVzY1snW1tTZXRdXSddID0gc2V0dGVyO1xuXHR9XG5cblx0aWYgKChoYXMoZGVzYywgJ1tbR2V0XV0nKSB8fCBoYXMoZGVzYywgJ1tbU2V0XV0nKSkgJiYgKGhhcyhkZXNjLCAnW1tWYWx1ZV1dJykgfHwgaGFzKGRlc2MsICdbW1dyaXRhYmxlXV0nKSkpIHtcblx0XHR0aHJvdyBuZXcgJFR5cGVFcnJvcignSW52YWxpZCBwcm9wZXJ0eSBkZXNjcmlwdG9yLiBDYW5ub3QgYm90aCBzcGVjaWZ5IGFjY2Vzc29ycyBhbmQgYSB2YWx1ZSBvciB3cml0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