{"version":3,"names":["_react","_interopRequireDefault","require","_jestCucumber","_react2","_reactRouterDom","_App","_Home","_SubmitScreen","_reactDnd","_reactDndHtml5Backend","_jsxRuntime","obj","__esModule","default","feature","loadFeature","global","ResizeObserver","defineFeature","test","beforeEach","document","body","innerHTML","given","when","then","and","mockQuizContext","score","setScore","jest","fn","name","setName","age","setAge","email","setMail","phoneNumber","setPhone","selectedLanguage","setSelector","trackScore","setTracker","screen","render","jsx","DndProvider","backend","HTML5Backend","children","QuizContext","Provider","value","BrowserRouter","jsxs","Routes","Route","path","element","expect","toBeTruthy","container","getByTestId","getByText","waitFor","toBeInTheDocument","tryAgainButton","getByRole"],"sources":["submitscreen.steps.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { defineFeature, loadFeature } from \"jest-cucumber\";\r\nimport { render, screen, fireEvent, waitFor } from \"@testing-library/react\";\r\nimport \"text-encoding\";\r\nimport \"@testing-library/jest-dom/extend-expect\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport { QuizContext } from \"../../../App\";\r\nimport Home from \"./../../homeandsubmit/Home\";\r\nimport Question5 from \"./../../questions/Question5\";\r\nimport SubmitScreen from \"../../homeandsubmit/SubmitScreen\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport \"jest-canvas-mock\";\r\nconst feature = loadFeature(\"src/components/features/submitscreen.feature\");\r\nglobal.ResizeObserver = require(\"resize-observer-polyfill\");\r\ndefineFeature(feature, (test) => {\r\n  beforeEach(() => {\r\n    document.body.innerHTML = \"\";\r\n  });\r\n  test(\"User submits their quiz and sees their results\", ({\r\n    given,\r\n    when,\r\n    then,\r\n    and,\r\n  }) => {\r\n    const mockQuizContext = {\r\n      score: 5,\r\n      setScore: jest.fn(),\r\n      name: \"chandu\",\r\n      setName: jest.fn(),\r\n      age: 25,\r\n      setAge: jest.fn(),\r\n      email: \"chandra@chandu.com\",\r\n      setMail: jest.fn(),\r\n      phoneNumber: \"1234567890\",\r\n      setPhone: jest.fn(),\r\n      selectedLanguage: \"ReactJS\",\r\n      setSelector: jest.fn(),\r\n      trackScore: false,\r\n      setTracker: jest.fn(),\r\n    };\r\n    given(\"the user has completed the quiz is on the Submit Screen\", () => {\r\n      const screen = render(\r\n        <DndProvider backend={HTML5Backend}>\r\n          <QuizContext.Provider value={mockQuizContext}>\r\n            <Router>\r\n              <Routes>\r\n                <Route path=\"/\" element={<SubmitScreen />} />\r\n                <Route element={<Home />} />\r\n              </Routes>\r\n            </Router>\r\n          </QuizContext.Provider>\r\n        </DndProvider>\r\n      );\r\n      expect(screen).toBeTruthy();\r\n      const container = screen.getByTestId(\"submission-container\");\r\n      expect(container).toBeTruthy();\r\n    });\r\n    when(\r\n      \"the user should see the details they entered in the home screen\",\r\n      () => {\r\n        expect(screen.getByText(\"chandu\")).toBeTruthy();\r\n        expect(screen.getByText(\"chandra@chandu.com\")).toBeTruthy();\r\n        expect(screen.getByText(\"1234567890\")).toBeTruthy();\r\n        expect(screen.getByText(\"ReactJS\")).toBeTruthy();\r\n        expect(screen.getByText(\"5/8\")).toBeTruthy();\r\n        expect(screen.getByText(\"25\")).toBeTruthy();\r\n      }\r\n    );\r\n    and(\"the user should see their score in a pie chart\", async () => {\r\n      await waitFor(() => {\r\n        expect(screen.getByTestId(\"submitscreen-piechart\")).toBeInTheDocument();\r\n      });\r\n    });\r\n    and(\"the user should see a button to re-enter their details\", () => {\r\n      const tryAgainButton = screen.getByRole(\"button\", { name: \"Try again?\" });\r\n      expect(tryAgainButton).toBeTruthy();\r\n    });\r\n  });\r\n});\r\n"],"mappings":"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"}