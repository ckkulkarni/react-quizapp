509d4f167a8b5e279ee81129a9d518de
"use strict";

var _react = _interopRequireDefault(require("react"));
var _jestCucumber = require("jest-cucumber");
var _Home = _interopRequireDefault(require("./../../homeandsubmit/Home"));
var _enzyme = require("enzyme");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const feature = (0, _jestCucumber.loadFeature)("src/components/features/base.feature");
(0, _jestCucumber.defineFeature)(feature, test => {
  test("User submits form with valid inputs", ({
    given,
    when,
    and,
    then
  }) => {
    let wrapper;
    beforeEach(() => {
      wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_Home.default, null));
    });
    given("I am on the Home Screen", () => {
      const wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_Home.default, null));
      expect(wrapper).toMatchSnapshot();
    });
    when('I enter a valid email "test@test.com"', () => {
      expect(wrapper.find("TextInput").at(0)).toBeTruthy();
    });
    and('I enter a valid name "John"', () => {
      expect(wrapper.find("TextInput").at(1)).toBeTruthy();
    });
    and('I enter a valid phone number "1234567890"', () => {
      expect(wrapper.find("TextInput").at(2)).toBeTruthy();
    });
    and("I submit the form", () => {
      const setSubmit = jest.fn();
      wrapper.find("TextInput").at(0).simulate("changeText", "chandrakanth");
      wrapper.find("TextInput").at(1).simulate("changeText", "chandra@kanth.com");
      wrapper.find("TextInput").at(2).simulate("changeText", "1234567890");
      wrapper.find("Button").at(0).props().onPress();
      expect(wrapper.find("Button").at(0).prop("disabled")).toBe(false);
    });
    then("I should see the start quiz button", () => {
      wrapper.find("Button").at(0).props().onPress();
      const startQuizButton = wrapper.find("Button").at(1);
      expect(startQuizButton.prop("disabled")).toBe(false);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9qZXN0Q3VjdW1iZXIiLCJfSG9tZSIsIl9lbnp5bWUiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImZlYXR1cmUiLCJsb2FkRmVhdHVyZSIsImRlZmluZUZlYXR1cmUiLCJ0ZXN0IiwiZ2l2ZW4iLCJ3aGVuIiwiYW5kIiwidGhlbiIsIndyYXBwZXIiLCJiZWZvcmVFYWNoIiwic2hhbGxvdyIsImNyZWF0ZUVsZW1lbnQiLCJleHBlY3QiLCJ0b01hdGNoU25hcHNob3QiLCJmaW5kIiwiYXQiLCJ0b0JlVHJ1dGh5Iiwic2V0U3VibWl0IiwiamVzdCIsImZuIiwic2ltdWxhdGUiLCJwcm9wcyIsIm9uUHJlc3MiLCJwcm9wIiwidG9CZSIsInN0YXJ0UXVpekJ1dHRvbiJdLCJzb3VyY2VzIjpbImJhc2Uuc3RlcHMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgZGVmaW5lRmVhdHVyZSwgbG9hZEZlYXR1cmUgfSBmcm9tIFwiamVzdC1jdWN1bWJlclwiO1xyXG5pbXBvcnQgeyByZW5kZXIsIHNjcmVlbiwgZmlyZUV2ZW50IH0gZnJvbSBcIkB0ZXN0aW5nLWxpYnJhcnkvcmVhY3RcIjtcclxuaW1wb3J0IHsgYWN0IH0gZnJvbSBcInJlYWN0LWRvbS90ZXN0LXV0aWxzXCI7XHJcbmltcG9ydCBIb21lIGZyb20gXCIuLy4uLy4uL2hvbWVhbmRzdWJtaXQvSG9tZVwiO1xyXG5pbXBvcnQgQWRhcHRlciBmcm9tIFwiZW56eW1lLWFkYXB0ZXItcmVhY3QtMTZcIjtcclxuaW1wb3J0IHsgbW91bnQsIHNoYWxsb3cgfSBmcm9tIFwiZW56eW1lXCI7XHJcbmNvbnN0IGZlYXR1cmUgPSBsb2FkRmVhdHVyZShcInNyYy9jb21wb25lbnRzL2ZlYXR1cmVzL2Jhc2UuZmVhdHVyZVwiKTtcclxuXHJcbmRlZmluZUZlYXR1cmUoZmVhdHVyZSwgKHRlc3QpID0+IHtcclxuICB0ZXN0KFwiVXNlciBzdWJtaXRzIGZvcm0gd2l0aCB2YWxpZCBpbnB1dHNcIiwgKHsgZ2l2ZW4sIHdoZW4sIGFuZCwgdGhlbiB9KSA9PiB7XHJcbiAgICBsZXQgd3JhcHBlcjogYW55O1xyXG4gICAgYmVmb3JlRWFjaCgoKSA9PiB7XHJcbiAgICAgIHdyYXBwZXIgPSBzaGFsbG93KDxIb21lIC8+KTtcclxuICAgIH0pO1xyXG4gICAgZ2l2ZW4oXCJJIGFtIG9uIHRoZSBIb21lIFNjcmVlblwiLCAoKSA9PiB7XHJcbiAgICAgIGNvbnN0IHdyYXBwZXIgPSBzaGFsbG93KDxIb21lIC8+KTtcclxuICAgICAgZXhwZWN0KHdyYXBwZXIpLnRvTWF0Y2hTbmFwc2hvdCgpO1xyXG4gICAgfSk7XHJcbiAgICB3aGVuKCdJIGVudGVyIGEgdmFsaWQgZW1haWwgXCJ0ZXN0QHRlc3QuY29tXCInLCAoKSA9PiB7XHJcbiAgICAgIGV4cGVjdCh3cmFwcGVyLmZpbmQoXCJUZXh0SW5wdXRcIikuYXQoMCkpLnRvQmVUcnV0aHkoKTtcclxuICAgIH0pO1xyXG4gICAgYW5kKCdJIGVudGVyIGEgdmFsaWQgbmFtZSBcIkpvaG5cIicsICgpID0+IHtcclxuICAgICAgZXhwZWN0KHdyYXBwZXIuZmluZChcIlRleHRJbnB1dFwiKS5hdCgxKSkudG9CZVRydXRoeSgpO1xyXG4gICAgfSk7XHJcbiAgICBhbmQoJ0kgZW50ZXIgYSB2YWxpZCBwaG9uZSBudW1iZXIgXCIxMjM0NTY3ODkwXCInLCAoKSA9PiB7XHJcbiAgICAgIGV4cGVjdCh3cmFwcGVyLmZpbmQoXCJUZXh0SW5wdXRcIikuYXQoMikpLnRvQmVUcnV0aHkoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIGFuZChcIkkgc3VibWl0IHRoZSBmb3JtXCIsICgpID0+IHtcclxuICAgICAgY29uc3Qgc2V0U3VibWl0ID0gamVzdC5mbigpO1xyXG4gICAgICB3cmFwcGVyLmZpbmQoXCJUZXh0SW5wdXRcIikuYXQoMCkuc2ltdWxhdGUoXCJjaGFuZ2VUZXh0XCIsIFwiY2hhbmRyYWthbnRoXCIpO1xyXG4gICAgICB3cmFwcGVyXHJcbiAgICAgICAgLmZpbmQoXCJUZXh0SW5wdXRcIilcclxuICAgICAgICAuYXQoMSlcclxuICAgICAgICAuc2ltdWxhdGUoXCJjaGFuZ2VUZXh0XCIsIFwiY2hhbmRyYUBrYW50aC5jb21cIik7XHJcbiAgICAgIHdyYXBwZXIuZmluZChcIlRleHRJbnB1dFwiKS5hdCgyKS5zaW11bGF0ZShcImNoYW5nZVRleHRcIiwgXCIxMjM0NTY3ODkwXCIpO1xyXG4gICAgICB3cmFwcGVyLmZpbmQoXCJCdXR0b25cIikuYXQoMCkucHJvcHMoKS5vblByZXNzKCk7XHJcbiAgICAgIGV4cGVjdCh3cmFwcGVyLmZpbmQoXCJCdXR0b25cIikuYXQoMCkucHJvcChcImRpc2FibGVkXCIpKS50b0JlKGZhbHNlKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoZW4oXCJJIHNob3VsZCBzZWUgdGhlIHN0YXJ0IHF1aXogYnV0dG9uXCIsICgpID0+IHtcclxuICAgICAgd3JhcHBlci5maW5kKFwiQnV0dG9uXCIpLmF0KDApLnByb3BzKCkub25QcmVzcygpO1xyXG4gICAgICBjb25zdCBzdGFydFF1aXpCdXR0b24gPSB3cmFwcGVyLmZpbmQoXCJCdXR0b25cIikuYXQoMSk7XHJcbiAgICAgIGV4cGVjdChzdGFydFF1aXpCdXR0b24ucHJvcChcImRpc2FibGVkXCIpKS50b0JlKGZhbHNlKTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLGFBQUEsR0FBQUQsT0FBQTtBQUdBLElBQUFFLEtBQUEsR0FBQUgsc0JBQUEsQ0FBQUMsT0FBQTtBQUVBLElBQUFHLE9BQUEsR0FBQUgsT0FBQTtBQUF3QyxTQUFBRCx1QkFBQUssR0FBQSxXQUFBQSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxHQUFBRCxHQUFBLEtB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