{"version":3,"names":["_arrayPrototype","require","_has","_enzymeShallowEqual","_Utils","_getAdapter","_Debug","_RSTTraversal","_selectors","NODE","sym","NODES","RENDERER","UNRENDERED","ROOT","OPTIONS","SET_STATE","ROOT_NODES","CHILD_CONTEXT","WRAPPING_COMPONENT","PRIMARY_WRAPPER","ROOT_FINDER","PROVIDER_VALUES","findWhereUnwrapped","wrapper","predicate","filter","arguments","length","undefined","treeFilter","flatMap","n","getNodeInternal","filterWhereUnwrapped","wrap","getNodesInternal","Boolean","validateOptions","options","lifecycleExperimental","disableLifecycleMethods","enableComponentDidUpdateOnSetState","supportPrevContextArgumentOfComponentDidUpdate","lifecycles","Error","componentDidUpdate","onSetState","TypeError","prevContext","getAdapterLifecycles","_ref","_options$lifecycles","hasLegacySetStateArg","hasLegacyPrevContextArg","_object2","originalGDSFP","getDerivedStateFromProps","hasShouldComponentUpdateBug","setState","getChildContext","calledByRenderer","getRootNode","node","nodeType","rendered","getRootNodeInternal","nodeParents","parentsOfNode","privateSetNodes","nodes","Array","isArray","privateSet","pureComponentShouldComponentUpdate","prevProps","props","prevState","state","_enzymeShallowEqual2","isPureComponent","instance","isPureReactComponent","hierarchy","renderer","Component","type","componentName","displayNameOfNode","_typeof","childContextTypes","console","warn","String","childContext","Object","keys","forEach","key","checkPropTypes","spyOnGetChildContextInitialRender","adapter","isCustomComponentElement","prototype","spyMethod","privateSetChildContext","renderedNode","getChildContextSpy","legacyContextMode","getLastReturnValue","restore","nodeHierarchy","concat","mockSCUIfgDSFPReturnNonNull","_spyMethod","originalSCU","shouldComponentUpdate","_len","args","_key","sCUResult","apply","nextState","deepRender","target","element","nodeToElement","dive","children","i","found","at","getContextFromWrappingComponent","rootFinder","legacyContext","context","providerValues","makeShallowOptions","root","passedOptions","makeOptions","_getAdapter2","isCustomComponent","wrappingComponent","wrapWithWrappingComponent","_adapter$wrapWithWrap","wrappedNode","RootFinder","WrappingComponentWrapper","_getContextFromWrappi","wrappingComponentLegacyContext","wrappingComponentProviderValues","_defineProperty","makeInheritedChildOptions","childOptions","ShallowWrapper","_this","_classCallCheck","isValidElement","createRenderer","mode","Map","render","getNode","updater","callback","_toConsumableArray","componentDidMount","batchedUpdates","update","_this2","single","_this3","map","unmount","_this4","withSetStateAllowed","nextContext","shouldRender","shouldComponentUpdateSpy","gDSFP","cloneElement","getSnapshotBeforeUpdate","snapshot","freeze","rerender","_this5","statePayload","call","maybeHasUpdate","skipsComponentDidUpdateOnNullish","invokeSetStateCallback","nodeOrNodes","isReactElementAlike","other","containsChildrenSubArray","nodeEqual","elementToNode","rstNode","nodeMatches","a","b","_this6","every","containsMatchingElement","_this7","some","_this8","_this9","selector","reduceTreesBySelector","buildPredicate","isEmptyValue","_this10","getTextFromNode","_this11","html","loadCheerioRoot","event","_this12","_len2","_key2","_RENDERER","simulateEvent","error","_this13","thisNode","simulateError","rootNode","propsOfNode","name","_this14","_state","_this15","_context","allChildren","childrenOfNode","index","_this16","_this17","allParents","parents","get","is","matchingAncestors","first","findWhere","_this18","propName","_this19","handler","prop","response","_this20","RangeError","_has2","propValue","wrapped","typeOfNode","className","indexOf","hasClassName","fn","_this21","_this22","_this23","initialValue","reduce","accum","_this24","reduceRight","begin","end","slice","_this25","_this26","_this27","flattened","_arrayPrototype2","_this28","getElements","exists","find","fnName","_len3","_key3","Function","bind","debugNodes","intercepter","_this29","el","filterWhere","updatePrimaryRootContext","primaryWrapper","primaryRenderer","primaryNode","_getContextFromWrappi2","prevProviderValues","setContext","isContextConsumer","Consumer","Provider","getProviderFromConsumer","newValue","oldValue","_this30","_possibleConstructorReturn","__proto__","getPrototypeOf","_get2","_len4","_key4","result","_get","_get3","_len5","_key5","ITERATOR_SYMBOL","defineProperty","configurable","value","iterator","_ref2","iter","next","done","privateWarning","extraMessage","enumerable"],"sources":["../src/ShallowWrapper.js"],"sourcesContent":["import flat from 'array.prototype.flat';\nimport has from 'has';\nimport shallowEqual from 'enzyme-shallow-equal';\n\nimport {\n  nodeEqual,\n  nodeMatches,\n  containsChildrenSubArray,\n  withSetStateAllowed,\n  typeOfNode,\n  isReactElementAlike,\n  displayNameOfNode,\n  isCustomComponent,\n  isCustomComponentElement,\n  ITERATOR_SYMBOL,\n  makeOptions,\n  sym,\n  privateSet,\n  cloneElement,\n  spyMethod,\n  isEmptyValue,\n  loadCheerioRoot,\n} from './Utils';\nimport getAdapter from './getAdapter';\nimport { debugNodes } from './Debug';\nimport {\n  propsOfNode,\n  getTextFromNode,\n  hasClassName,\n  childrenOfNode,\n  parentsOfNode,\n  treeFilter,\n} from './RSTTraversal';\nimport { buildPredicate, reduceTreesBySelector } from './selectors';\n\nconst NODE = sym('__node__');\nconst NODES = sym('__nodes__');\nconst RENDERER = sym('__renderer__');\nconst UNRENDERED = sym('__unrendered__');\nconst ROOT = sym('__root__');\nconst OPTIONS = sym('__options__');\nconst SET_STATE = sym('__setState__');\nconst ROOT_NODES = sym('__rootNodes__');\nconst CHILD_CONTEXT = sym('__childContext__');\nconst WRAPPING_COMPONENT = sym('__wrappingComponent__');\nconst PRIMARY_WRAPPER = sym('__primaryWrapper__');\nconst ROOT_FINDER = sym('__rootFinder__');\nconst PROVIDER_VALUES = sym('__providerValues__');\n\n/**\n * Finds all nodes in the current wrapper nodes' render trees that match the provided predicate\n * function.\n *\n * @param {ShallowWrapper} wrapper\n * @param {Function} predicate\n * @param {Function} filter\n * @returns {ShallowWrapper}\n */\nfunction findWhereUnwrapped(wrapper, predicate, filter = treeFilter) {\n  return wrapper.flatMap((n) => filter(n.getNodeInternal(), predicate));\n}\n\n/**\n * Returns a new wrapper instance with only the nodes of the current wrapper instance that match\n * the provided predicate function.\n *\n * @param {ShallowWrapper} wrapper\n * @param {Function} predicate\n * @returns {ShallowWrapper}\n */\nfunction filterWhereUnwrapped(wrapper, predicate) {\n  return wrapper.wrap(wrapper.getNodesInternal().filter(predicate).filter(Boolean));\n}\n\n/**\n * Ensure options passed to ShallowWrapper are valid. Throws otherwise.\n * @param {Object} options\n */\nfunction validateOptions(options) {\n  const {\n    lifecycleExperimental,\n    disableLifecycleMethods,\n    enableComponentDidUpdateOnSetState,\n    supportPrevContextArgumentOfComponentDidUpdate,\n    lifecycles,\n  } = options;\n  if (typeof lifecycleExperimental !== 'undefined' && typeof lifecycleExperimental !== 'boolean') {\n    throw new Error('lifecycleExperimental must be either true or false if provided');\n  }\n\n  if (typeof disableLifecycleMethods !== 'undefined' && typeof disableLifecycleMethods !== 'boolean') {\n    throw new Error('disableLifecycleMethods must be either true or false if provided');\n  }\n\n  if (\n    lifecycleExperimental != null\n    && disableLifecycleMethods != null\n    && lifecycleExperimental === disableLifecycleMethods\n  ) {\n    throw new Error('lifecycleExperimental and disableLifecycleMethods cannot be set to the same value');\n  }\n\n  if (\n    typeof enableComponentDidUpdateOnSetState !== 'undefined'\n    && lifecycles.componentDidUpdate\n    && lifecycles.componentDidUpdate.onSetState !== enableComponentDidUpdateOnSetState\n  ) {\n    throw new TypeError('the legacy enableComponentDidUpdateOnSetState option should be matched by `lifecycles: { componentDidUpdate: { onSetState: true } }`, for compatibility');\n  }\n\n  if (\n    typeof supportPrevContextArgumentOfComponentDidUpdate !== 'undefined'\n    && lifecycles.componentDidUpdate\n    && lifecycles.componentDidUpdate.prevContext !== supportPrevContextArgumentOfComponentDidUpdate\n  ) {\n    throw new TypeError('the legacy supportPrevContextArgumentOfComponentDidUpdate option should be matched by `lifecycles: { componentDidUpdate: { prevContext: true } }`, for compatibility');\n  }\n}\n\nfunction getAdapterLifecycles({ options }) {\n  const {\n    lifecycles = {},\n    enableComponentDidUpdateOnSetState,\n    supportPrevContextArgumentOfComponentDidUpdate,\n  } = options;\n\n  const hasLegacySetStateArg = typeof enableComponentDidUpdateOnSetState !== 'undefined';\n  const hasLegacyPrevContextArg = typeof supportPrevContextArgumentOfComponentDidUpdate !== 'undefined';\n  const componentDidUpdate = hasLegacySetStateArg || hasLegacyPrevContextArg\n    ? {\n      ...(hasLegacySetStateArg && {\n        onSetState: !!enableComponentDidUpdateOnSetState,\n      }),\n      ...(hasLegacyPrevContextArg && {\n        prevContext: !!supportPrevContextArgumentOfComponentDidUpdate,\n      }),\n    }\n    : null;\n  const { getDerivedStateFromProps: originalGDSFP } = lifecycles;\n  const getDerivedStateFromProps = originalGDSFP ? {\n    hasShouldComponentUpdateBug: !!originalGDSFP.hasShouldComponentUpdateBug,\n  } : false;\n\n  return {\n    ...lifecycles,\n    setState: {\n      ...lifecycles.setState,\n    },\n    getChildContext: {\n      calledByRenderer: true,\n      ...lifecycles.getChildContext,\n    },\n    ...(componentDidUpdate && { componentDidUpdate }),\n    getDerivedStateFromProps,\n  };\n}\n\nfunction getRootNode(node) {\n  if (node.nodeType === 'host') {\n    return node;\n  }\n  return node.rendered;\n}\n\nfunction getRootNodeInternal(wrapper) {\n  if (wrapper[ROOT].length !== 1) {\n    throw new Error('getRootNodeInternal(wrapper) can only be called when wrapper wraps one node');\n  }\n  if (wrapper[ROOT] !== wrapper) {\n    return wrapper[ROOT_NODES][0];\n  }\n  return wrapper[ROOT][NODE];\n}\n\nfunction nodeParents(wrapper, node) {\n  return parentsOfNode(node, getRootNodeInternal(wrapper));\n}\n\nfunction privateSetNodes(wrapper, nodes) {\n  if (!Array.isArray(nodes)) {\n    privateSet(wrapper, NODE, nodes);\n    privateSet(wrapper, NODES, [nodes]);\n  } else {\n    privateSet(wrapper, NODE, nodes[0]);\n    privateSet(wrapper, NODES, nodes);\n  }\n  privateSet(wrapper, 'length', wrapper[NODES].length);\n}\n\nfunction pureComponentShouldComponentUpdate(prevProps, props, prevState, state) {\n  return !shallowEqual(prevProps, props) || !shallowEqual(prevState, state);\n}\n\nfunction isPureComponent(instance) {\n  return instance && instance.isPureReactComponent;\n}\n\nfunction getChildContext(node, hierarchy, renderer) {\n  const { instance, type: Component } = node;\n  const componentName = displayNameOfNode(node);\n  // Warn like react if childContextTypes is not defined:\n  // https://github.com/facebook/react/blob/1454a8be03794f5e0b23a7e7696cbbbdcf8b0f5d/packages/react-dom/src/server/ReactPartialRenderer.js#L639-L646\n  if (typeof Component.childContextTypes !== 'object') {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `${componentName}.getChildContext(): childContextTypes must be defined in order to use getChildContext().`,\n    );\n    return {};\n  }\n  // Check childContextTypes like react:\n  // https://github.com/facebook/react/blob/1454a8be03794f5e0b23a7e7696cbbbdcf8b0f5d/packages/react-dom/src/server/ReactPartialRenderer.js#L630-L637\n  const childContext = instance.getChildContext();\n  Object.keys(childContext).forEach((key) => {\n    if (!(key in Component.childContextTypes)) {\n      throw new Error(\n        `${componentName}.getChildContext(): key \"${key}\" is not defined in childContextTypes.`,\n      );\n    }\n  });\n  if (typeof renderer.checkPropTypes === 'function') {\n    renderer.checkPropTypes(Component.childContextTypes, childContext, 'child context', hierarchy);\n  }\n  return childContext;\n}\n\nfunction spyOnGetChildContextInitialRender(nodes, adapter) {\n  if (\n    !isCustomComponentElement(nodes, adapter)\n    || !nodes.type.prototype\n    || typeof nodes.type.prototype.getChildContext !== 'function'\n  ) {\n    return null;\n  }\n\n  return spyMethod(nodes.type.prototype, 'getChildContext');\n}\n\nfunction privateSetChildContext(adapter, wrapper, instance, renderedNode, getChildContextSpy) {\n  const renderer = wrapper[RENDERER];\n  // We only support parent-based context.\n  if (adapter.options.legacyContextMode !== 'parent') { return; }\n  if (getChildContextSpy) {\n    privateSet(wrapper, CHILD_CONTEXT, getChildContextSpy.getLastReturnValue());\n    getChildContextSpy.restore();\n  } else if (typeof instance.getChildContext === 'function') {\n    // If there's no spy but getChildContext is a function, that means our renderer\n    // is not going to call it for us, so we need to call it ourselves.\n    const nodeHierarchy = [wrapper[NODE]].concat(nodeParents(wrapper, wrapper[NODE]));\n    const childContext = getChildContext(renderedNode, nodeHierarchy, renderer);\n    privateSet(wrapper, CHILD_CONTEXT, childContext);\n  } else {\n    privateSet(wrapper, CHILD_CONTEXT, null);\n  }\n}\n\nfunction mockSCUIfgDSFPReturnNonNull(node, state) {\n  const { getDerivedStateFromProps } = node.type;\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    // we try to fix a React shallow renderer bug here.\n    // (facebook/react#14607, which has been fixed in react 16.8):\n    // when gDSFP return derived state, it will set instance state in shallow renderer before SCU,\n    // this will cause `this.state` in sCU be the updated state, which is wrong behavior.\n    // so we have to wrap sCU to pass the old state to original sCU.\n    const { instance } = node;\n    const { restore } = spyMethod(\n      instance,\n      'shouldComponentUpdate',\n      (originalSCU) => function shouldComponentUpdate(...args) {\n        instance.state = state;\n        const sCUResult = originalSCU.apply(instance, args);\n        const [, nextState] = args;\n        instance.state = nextState;\n        restore();\n        return sCUResult;\n      },\n    );\n  }\n}\n\n/**\n * Recursively dive()s every custom component in a wrapper until\n * the target component is found.\n *\n * @param {ShallowWrapper} wrapper A ShallowWrapper to search\n * @param {ComponentType} target A react custom component that, when found, will end recursion\n * @param {Adapter} adapter An Enzyme adapter\n * @returns {ShallowWrapper|undefined} A ShallowWrapper for the target, or\n *  undefined if it can't be found\n */\nfunction deepRender(wrapper, target, adapter) {\n  const node = wrapper[NODE];\n  const element = node && adapter.nodeToElement(node);\n  if (wrapper.type() === target) {\n    return wrapper.dive();\n  }\n  if (element && isCustomComponentElement(element, adapter)) {\n    return deepRender(wrapper.dive(), target, adapter);\n  }\n  const children = wrapper.children();\n  for (let i = 0; i < children.length; i += 1) {\n    const found = deepRender(children.at(i), target, adapter);\n    if (typeof found !== 'undefined') {\n      return found;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Deep-renders the `wrappingComponent` and returns the context that should\n * be accessible to the primary wrapper.\n *\n * @param {WrappingComponentWrapper} wrapper The `WrappingComponentWrapper` for a\n *  `wrappingComponent`\n * @param {Adapter} adapter An Enzyme adapter\n * @returns {object} An object containing an object of legacy context values and a Map of\n *  `createContext()` Provider values.\n */\nfunction getContextFromWrappingComponent(wrapper, adapter) {\n  const rootFinder = deepRender(wrapper, wrapper[ROOT_FINDER], adapter);\n  if (!rootFinder) {\n    throw new Error('`wrappingComponent` must render its children!');\n  }\n  return {\n    legacyContext: rootFinder[OPTIONS].context,\n    providerValues: rootFinder[PROVIDER_VALUES],\n  };\n}\n\n/**\n * Makes options specifically for `ShallowWrapper`. Most of the logic here is around rendering\n * a `wrappingComponent` (if one was provided) and adding the child context of that component\n * to `options.context`.\n *\n * @param {ReactElement} nodes the nodes passed to `ShallowWrapper`\n * @param {ShallowWrapper} root this `ShallowWrapper`'s parent. If this is passed, options are\n *  not transformed.\n * @param {*} passedOptions the options passed to `ShallowWrapper`.\n * @param {*} wrapper the `ShallowWrapper` itself\n * @returns {Object} the decorated and transformed options\n */\nfunction makeShallowOptions(nodes, root, passedOptions, wrapper) {\n  const options = makeOptions(passedOptions);\n  const adapter = getAdapter(passedOptions);\n  privateSet(options, PROVIDER_VALUES, passedOptions[PROVIDER_VALUES]);\n  if (root || !isCustomComponent(options.wrappingComponent, adapter)) {\n    return options;\n  }\n  if (typeof adapter.wrapWithWrappingComponent !== 'function') {\n    throw new TypeError('your adapter does not support `wrappingComponent`. Try upgrading it!');\n  }\n  const { node: wrappedNode, RootFinder } = adapter.wrapWithWrappingComponent(nodes, options);\n  // eslint-disable-next-line no-use-before-define\n  const wrappingComponent = new WrappingComponentWrapper(wrappedNode, wrapper, RootFinder);\n  const {\n    legacyContext: wrappingComponentLegacyContext,\n    providerValues: wrappingComponentProviderValues,\n  } = getContextFromWrappingComponent(wrappingComponent, adapter);\n  privateSet(wrapper, WRAPPING_COMPONENT, wrappingComponent);\n  return {\n    ...options,\n    context: {\n      ...options.context,\n      ...wrappingComponentLegacyContext,\n    },\n    [PROVIDER_VALUES]: wrappingComponentProviderValues,\n  };\n}\n\n\nfunction makeInheritedChildOptions(wrapper, options = {}) {\n  const childOptions = {\n    ...wrapper[OPTIONS],\n    ...options,\n    context: options.context || {\n      ...wrapper[OPTIONS].context,\n      ...wrapper[ROOT][CHILD_CONTEXT],\n    },\n  };\n  privateSet(childOptions, PROVIDER_VALUES, wrapper[ROOT][PROVIDER_VALUES]);\n  return childOptions;\n}\n\n\n/**\n * @class ShallowWrapper\n */\nclass ShallowWrapper {\n  constructor(nodes, root, passedOptions = {}) {\n    validateOptions(passedOptions);\n\n    const options = makeShallowOptions(nodes, root, passedOptions, this);\n    const adapter = getAdapter(options);\n    const lifecycles = getAdapterLifecycles(adapter);\n\n    // mounting a ShallowRender component\n    if (!root) {\n      if (!adapter.isValidElement(nodes)) {\n        throw new TypeError('ShallowWrapper can only wrap valid elements');\n      }\n\n      const getChildContextSpy = lifecycles.getChildContext.calledByRenderer\n        ? spyOnGetChildContextInitialRender(nodes, adapter)\n        : null;\n      privateSet(this, ROOT, this);\n      privateSet(this, UNRENDERED, nodes);\n      const renderer = adapter.createRenderer({ mode: 'shallow', ...options });\n      privateSet(this, RENDERER, renderer);\n      const providerValues = new Map(options[PROVIDER_VALUES] || []);\n      this[RENDERER].render(nodes, options.context, { providerValues });\n      const renderedNode = this[RENDERER].getNode();\n      privateSetNodes(this, getRootNode(renderedNode));\n      privateSet(this, OPTIONS, options);\n      privateSet(this, PROVIDER_VALUES, providerValues);\n\n      const { instance } = renderedNode;\n      if (instance && !options.disableLifecycleMethods) {\n        // Ensure to call componentDidUpdate when instance.setState is called\n        if (lifecycles.componentDidUpdate.onSetState && !instance[SET_STATE]) {\n          privateSet(instance, SET_STATE, instance.setState);\n          instance.setState = (updater, callback = undefined) => this.setState(\n            ...(callback == null ? [updater] : [updater, callback]),\n          );\n        }\n\n        if (typeof instance.componentDidMount === 'function') {\n          this[RENDERER].batchedUpdates(() => {\n            instance.componentDidMount();\n          });\n        }\n        privateSetChildContext(adapter, this, instance, renderedNode, getChildContextSpy);\n      }\n    // creating a child component through enzyme's ShallowWrapper APIs.\n    } else {\n      privateSet(this, ROOT, root);\n      privateSet(this, UNRENDERED, null);\n      privateSet(this, RENDERER, root[RENDERER]);\n      privateSetNodes(this, nodes);\n      privateSet(this, OPTIONS, root[OPTIONS]);\n      privateSet(this, ROOT_NODES, root[NODES]);\n      privateSet(this, PROVIDER_VALUES, null);\n    }\n  }\n\n  /**\n   * Returns the root wrapper\n   *\n   * @return {ShallowWrapper}\n   */\n  root() {\n    return this[ROOT];\n  }\n\n  /**\n   * Returns the wrapped component.\n   *\n   * @return {ReactComponent}\n   */\n  getNodeInternal() {\n    if (this.length !== 1) {\n      throw new Error('ShallowWrapper::getNode() can only be called when wrapping one node');\n    }\n    if (this[ROOT] === this) {\n      this.update();\n    }\n    return this[NODE];\n  }\n\n  /**\n   * Returns the the wrapped components.\n   *\n   * @return {Array<ReactComponent>}\n   */\n  getNodesInternal() {\n    if (this[ROOT] === this && this.length === 1) {\n      this.update();\n    }\n    return this[NODES];\n  }\n\n  /**\n   * Returns the wrapped ReactElement.\n   *\n   * @return {ReactElement}\n   */\n  getElement() {\n    return this.single('getElement', (n) => getAdapter(this[OPTIONS]).nodeToElement(n));\n  }\n\n  /**\n   * Returns the wrapped ReactElements.\n   *\n   * @return {Array<ReactElement>}\n   */\n  getElements() {\n    return this.getNodesInternal().map((n) => getAdapter(this[OPTIONS]).nodeToElement(n));\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getNode() {\n    throw new Error('ShallowWrapper::getNode() is no longer supported. Use ShallowWrapper::getElement() instead');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getNodes() {\n    throw new Error('ShallowWrapper::getNodes() is no longer supported. Use ShallowWrapper::getElements() instead');\n  }\n\n  /**\n   * Gets the instance of the component being rendered as the root node passed into `shallow()`.\n   *\n   * NOTE: can only be called on a wrapper instance that is also the root instance.\n   *\n   * Example:\n   * ```\n   * const wrapper = shallow(<MyComponent />);\n   * const inst = wrapper.instance();\n   * expect(inst).to.be.instanceOf(MyComponent);\n   * ```\n   * @returns {ReactComponent}\n   */\n  instance() {\n    if (this[ROOT] !== this) {\n      throw new Error('ShallowWrapper::instance() can only be called on the root');\n    }\n    return this[RENDERER].getNode().instance;\n  }\n\n  /**\n   * If a `wrappingComponent` was passed in `options`, this methods returns a `ShallowWrapper`\n   * around the rendered `wrappingComponent`. This `ShallowWrapper` can be used to update the\n   * `wrappingComponent`'s props, state, etc.\n   *\n   * @returns ShallowWrapper\n   */\n  getWrappingComponent() {\n    if (this[ROOT] !== this) {\n      throw new Error('ShallowWrapper::getWrappingComponent() can only be called on the root');\n    }\n    if (!this[OPTIONS].wrappingComponent) {\n      throw new Error('ShallowWrapper::getWrappingComponent() can only be called on a wrapper that was originally passed a `wrappingComponent` option');\n    }\n    return this[WRAPPING_COMPONENT];\n  }\n\n  /**\n   * Forces a re-render. Useful to run before checking the render output if something external\n   * may be updating the state of the component somewhere.\n   *\n   * NOTE: can only be called on a wrapper instance that is also the root instance.\n   *\n   * @returns {ShallowWrapper}\n   */\n  update() {\n    if (this[ROOT] !== this) {\n      throw new Error('ShallowWrapper::update() can only be called on the root');\n    }\n    if (this.length !== 1) {\n      throw new Error('ShallowWrapper::update() can only be called when wrapping one node');\n    }\n    privateSetNodes(this, getRootNode(this[RENDERER].getNode()));\n    return this;\n  }\n\n  /**\n   * A method that unmounts the component. This can be used to simulate a component going through\n   * and unmount/mount lifecycle.\n   * @returns {ShallowWrapper}\n   */\n  unmount() {\n    this[RENDERER].unmount();\n    if (this[ROOT][WRAPPING_COMPONENT]) {\n      this[ROOT][WRAPPING_COMPONENT].unmount();\n    }\n    return this;\n  }\n\n  /**\n   * A method is for re-render with new props and context.\n   * This calls componentDidUpdate method if disableLifecycleMethods is not enabled.\n   *\n   * NOTE: can only be called on a wrapper instance that is also the root instance.\n   *\n   * @param {Object} props\n   * @param {Object} context\n   * @returns {ShallowWrapper}\n   */\n  rerender(props, context) {\n    const adapter = getAdapter(this[OPTIONS]);\n    this.single('rerender', () => {\n      withSetStateAllowed(() => {\n        // NOTE(lmr): In react 16, instances will be null for SFCs, but\n        // rerendering with props/context is still a valid thing to do. In\n        // this case, state will be undefined, but props/context will exist.\n        const node = this[RENDERER].getNode();\n        const instance = node.instance || {};\n        const type = node.type || {};\n        const { state } = instance;\n        const prevProps = instance.props || this[UNRENDERED].props;\n        const prevContext = instance.context || this[OPTIONS].context;\n        const nextContext = context || prevContext;\n        if (context) {\n          this[OPTIONS] = { ...this[OPTIONS], context: nextContext };\n        }\n        this[RENDERER].batchedUpdates(() => {\n          // When shouldComponentUpdate returns false we shouldn't call componentDidUpdate.\n          // so we spy shouldComponentUpdate to get the result.\n          const lifecycles = getAdapterLifecycles(adapter);\n          let shouldRender = true;\n          let shouldComponentUpdateSpy;\n          let getChildContextSpy;\n          if (\n            !this[OPTIONS].disableLifecycleMethods\n            && instance\n          ) {\n            if (typeof instance.shouldComponentUpdate === 'function') {\n              const { getDerivedStateFromProps: gDSFP } = lifecycles;\n              if (gDSFP && gDSFP.hasShouldComponentUpdateBug) {\n                mockSCUIfgDSFPReturnNonNull(node, state);\n              }\n              shouldComponentUpdateSpy = spyMethod(instance, 'shouldComponentUpdate');\n            }\n            if (\n              lifecycles.getChildContext.calledByRenderer\n              && typeof instance.getChildContext === 'function'\n            ) {\n              getChildContextSpy = spyMethod(instance, 'getChildContext');\n            }\n          }\n          if (!shouldComponentUpdateSpy && isPureComponent(instance)) {\n            shouldRender = pureComponentShouldComponentUpdate(\n              prevProps,\n              props,\n              state,\n              instance.state,\n            );\n          }\n          if (props) this[UNRENDERED] = cloneElement(adapter, this[UNRENDERED], props);\n          this[RENDERER].render(this[UNRENDERED], nextContext, {\n            providerValues: this[PROVIDER_VALUES],\n          });\n          if (shouldComponentUpdateSpy) {\n            shouldRender = shouldComponentUpdateSpy.getLastReturnValue();\n            shouldComponentUpdateSpy.restore();\n          }\n          if (\n            shouldRender\n            && !this[OPTIONS].disableLifecycleMethods\n            && instance\n          ) {\n            privateSetChildContext(adapter, this, instance, node, getChildContextSpy);\n            if (lifecycles.getSnapshotBeforeUpdate) {\n              let snapshot;\n              if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n                snapshot = instance.getSnapshotBeforeUpdate(prevProps, state);\n              }\n              if (\n                lifecycles.componentDidUpdate\n                && typeof instance.componentDidUpdate === 'function'\n                && (\n                  !state\n                  || shallowEqual(state, this.instance().state)\n                  || typeof type.getDerivedStateFromProps === 'function'\n                )\n              ) {\n                instance.componentDidUpdate(prevProps, state, snapshot);\n              }\n            } else if (\n              lifecycles.componentDidUpdate\n              && typeof instance.componentDidUpdate === 'function'\n            ) {\n              if (lifecycles.componentDidUpdate.prevContext) {\n                instance.componentDidUpdate(prevProps, state, prevContext);\n              } else if (!state || shallowEqual(this.instance().state, state)) {\n                instance.componentDidUpdate(prevProps, state);\n              }\n            }\n          // If it doesn't need to rerender, update only its props.\n          } else if (!shallowEqual(props, instance.props)) {\n            instance.props = (Object.freeze || Object)({ ...instance.props, ...props });\n          }\n          this.update();\n        });\n      });\n    });\n    return this;\n  }\n\n  /**\n   * A method that sets the props of the root component, and re-renders. Useful for when you are\n   * wanting to test how the component behaves over time with changing props. Calling this, for\n   * instance, will call the `componentWillReceiveProps` lifecycle method.\n   *\n   * Similar to `setState`, this method accepts a props object and will merge it in with the already\n   * existing props.\n   *\n   * NOTE: can only be called on a wrapper instance that is also the root instance.\n   *\n   * @param {Object} props object\n   * @param {Function} cb - callback function\n   * @returns {ShallowWrapper}\n   */\n  setProps(props, callback = undefined) {\n    if (this[ROOT] !== this) {\n      throw new Error('ShallowWrapper::setProps() can only be called on the root');\n    }\n    if (arguments.length > 1 && typeof callback !== 'function') {\n      throw new TypeError('ReactWrapper::setProps() expects a function as its second argument');\n    }\n    this.rerender(props);\n    if (callback) {\n      callback();\n    }\n    return this;\n  }\n\n  /**\n   * A method to invoke `setState` on the root component instance similar to how you might in the\n   * definition of the component, and re-renders.  This method is useful for testing your component\n   * in hard to achieve states, however should be used sparingly. If possible, you should utilize\n   * your component's external API in order to get it into whatever state you want to test, in order\n   * to be as accurate of a test as possible. This is not always practical, however.\n   *\n   * NOTE: can only be called on a wrapper instance that is also the root instance.\n   *\n   * @param {Object} state to merge\n   * @param {Function} cb - callback function\n   * @returns {ShallowWrapper}\n   */\n  setState(state, callback = undefined) {\n    if (this[ROOT] !== this) {\n      throw new Error('ShallowWrapper::setState() can only be called on the root');\n    }\n    if (this.instance() === null || this[RENDERER].getNode().nodeType !== 'class') {\n      throw new Error('ShallowWrapper::setState() can only be called on class components');\n    }\n    if (arguments.length > 1 && typeof callback !== 'function') {\n      throw new TypeError('ReactWrapper::setState() expects a function as its second argument');\n    }\n\n    this.single('setState', () => {\n      withSetStateAllowed(() => {\n        const adapter = getAdapter(this[OPTIONS]);\n\n        const lifecycles = getAdapterLifecycles(adapter);\n\n        const node = this[RENDERER].getNode();\n        const { instance } = node;\n        const prevProps = instance.props;\n        const prevState = instance.state;\n        const prevContext = instance.context;\n\n        const statePayload = typeof state === 'function'\n          ? state.call(instance, prevState, prevProps)\n          : state;\n\n        // returning null or undefined prevents the update in React 16+\n        // https://github.com/facebook/react/pull/12756\n        const maybeHasUpdate = !lifecycles.setState.skipsComponentDidUpdateOnNullish\n          || statePayload != null;\n\n        // When shouldComponentUpdate returns false we shouldn't call componentDidUpdate.\n        // so we spy shouldComponentUpdate to get the result.\n        let shouldComponentUpdateSpy;\n        let getChildContextSpy;\n        let shouldRender = true;\n        if (\n          !this[OPTIONS].disableLifecycleMethods\n          && instance\n        ) {\n          if (\n            lifecycles.componentDidUpdate\n            && lifecycles.componentDidUpdate.onSetState\n            && typeof instance.shouldComponentUpdate === 'function'\n          ) {\n            const { getDerivedStateFromProps: gDSFP } = lifecycles;\n            if (gDSFP && gDSFP.hasShouldComponentUpdateBug) {\n              mockSCUIfgDSFPReturnNonNull(node, state);\n            }\n            shouldComponentUpdateSpy = spyMethod(instance, 'shouldComponentUpdate');\n          }\n          if (\n            lifecycles.getChildContext.calledByRenderer\n            && typeof instance.getChildContext === 'function'\n          ) {\n            getChildContextSpy = spyMethod(instance, 'getChildContext');\n          }\n        }\n        if (!shouldComponentUpdateSpy && isPureComponent(instance)) {\n          shouldRender = pureComponentShouldComponentUpdate(\n            prevProps,\n            instance.props,\n            prevState,\n            { ...prevState, ...statePayload },\n          );\n        }\n\n        // We don't pass the setState callback here\n        // to guarantee to call the callback after finishing the render\n        if (instance[SET_STATE]) {\n          instance[SET_STATE](statePayload);\n        } else {\n          instance.setState(statePayload);\n        }\n        if (shouldComponentUpdateSpy) {\n          shouldRender = shouldComponentUpdateSpy.getLastReturnValue();\n          shouldComponentUpdateSpy.restore();\n        }\n        if (\n          maybeHasUpdate\n          && shouldRender\n          && !this[OPTIONS].disableLifecycleMethods\n        ) {\n          privateSetChildContext(adapter, this, instance, node, getChildContextSpy);\n          if (\n            lifecycles.componentDidUpdate\n            && lifecycles.componentDidUpdate.onSetState\n          ) {\n            if (\n              lifecycles.getSnapshotBeforeUpdate\n              && typeof instance.getSnapshotBeforeUpdate === 'function'\n            ) {\n              const snapshot = instance.getSnapshotBeforeUpdate(prevProps, prevState);\n              if (typeof instance.componentDidUpdate === 'function') {\n                instance.componentDidUpdate(prevProps, prevState, snapshot);\n              }\n            } else if (typeof instance.componentDidUpdate === 'function') {\n              if (lifecycles.componentDidUpdate.prevContext) {\n                instance.componentDidUpdate(prevProps, prevState, prevContext);\n              } else {\n                instance.componentDidUpdate(prevProps, prevState);\n              }\n            }\n          }\n        }\n        this.update();\n        // call the setState callback\n        if (callback) {\n          if (adapter.invokeSetStateCallback) {\n            adapter.invokeSetStateCallback(instance, callback);\n          } else {\n            callback.call(instance);\n          }\n        }\n      });\n    });\n    return this;\n  }\n\n  /**\n   * A method that sets the context of the root component, and re-renders. Useful for when you are\n   * wanting to test how the component behaves over time with changing contexts.\n   *\n   * NOTE: can only be called on a wrapper instance that is also the root instance.\n   *\n   * @param {Object} context object\n   * @returns {ShallowWrapper}\n   */\n  setContext(context) {\n    if (this[ROOT] !== this) {\n      throw new Error('ShallowWrapper::setContext() can only be called on the root');\n    }\n    if (!this[OPTIONS].context) {\n      throw new Error('ShallowWrapper::setContext() can only be called on a wrapper that was originally passed a context option');\n    }\n    return this.rerender(null, context);\n  }\n\n  /**\n   * Whether or not a given react element exists in the shallow render tree.\n   *\n   * Example:\n   * ```\n   * const wrapper = shallow(<MyComponent />);\n   * expect(wrapper.contains(<div className=\"foo bar\" />)).to.equal(true);\n   * ```\n   *\n   * @param {ReactElement|Array<ReactElement>} nodeOrNodes\n   * @returns {Boolean}\n   */\n  contains(nodeOrNodes) {\n    const adapter = getAdapter(this[OPTIONS]);\n    if (!isReactElementAlike(nodeOrNodes, adapter)) {\n      throw new Error('ShallowWrapper::contains() can only be called with a ReactElement (or an array of them), a string, or a number as an argument.');\n    }\n    const predicate = Array.isArray(nodeOrNodes)\n      ? (other) => containsChildrenSubArray(\n        nodeEqual,\n        other,\n        nodeOrNodes.map((node) => adapter.elementToNode(node)),\n      )\n      : (other) => nodeEqual(adapter.elementToNode(nodeOrNodes), other);\n\n    return findWhereUnwrapped(this, predicate).length > 0;\n  }\n\n  /**\n   * Whether or not a given react element exists in the shallow render tree.\n   * Match is based on the expected element and not on wrappers element.\n   * It will determine if one of the wrappers element \"looks like\" the expected\n   * element by checking if all props of the expected element are present\n   * on the wrappers element and equals to each other.\n   *\n   * Example:\n   * ```\n   * // MyComponent outputs <div><div class=\"foo\">Hello</div></div>\n   * const wrapper = shallow(<MyComponent />);\n   * expect(wrapper.containsMatchingElement(<div>Hello</div>)).to.equal(true);\n   * ```\n   *\n   * @param {ReactElement} node\n   * @returns {Boolean}\n   */\n  containsMatchingElement(node) {\n    const adapter = getAdapter(this[OPTIONS]);\n    const rstNode = adapter.elementToNode(node);\n    const predicate = (other) => nodeMatches(rstNode, other, (a, b) => a <= b);\n    return findWhereUnwrapped(this, predicate).length > 0;\n  }\n\n  /**\n   * Whether or not all the given react elements exist in the shallow render tree.\n   * Match is based on the expected element and not on wrappers element.\n   * It will determine if one of the wrappers element \"looks like\" the expected\n   * element by checking if all props of the expected element are present\n   * on the wrappers element and equals to each other.\n   *\n   * Example:\n   * ```\n   * const wrapper = shallow(<MyComponent />);\n   * expect(wrapper.containsAllMatchingElements([\n   *   <div>Hello</div>,\n   *   <div>Goodbye</div>,\n   * ])).to.equal(true);\n   * ```\n   *\n   * @param {Array<ReactElement>} nodes\n   * @returns {Boolean}\n   */\n  containsAllMatchingElements(nodes) {\n    if (!Array.isArray(nodes)) {\n      throw new TypeError('nodes should be an Array');\n    }\n\n    return nodes.every((node) => this.containsMatchingElement(node));\n  }\n\n  /**\n   * Whether or not one of the given react elements exists in the shallow render tree.\n   * Match is based on the expected element and not on wrappers element.\n   * It will determine if one of the wrappers element \"looks like\" the expected\n   * element by checking if all props of the expected element are present\n   * on the wrappers element and equals to each other.\n   *\n   * Example:\n   * ```\n   * const wrapper = shallow(<MyComponent />);\n   * expect(wrapper.containsAnyMatchingElements([\n   *   <div>Hello</div>,\n   *   <div>Goodbye</div>,\n   * ])).to.equal(true);\n   * ```\n   *\n   * @param {Array<ReactElement>} nodes\n   * @returns {Boolean}\n   */\n  containsAnyMatchingElements(nodes) {\n    return Array.isArray(nodes) && nodes.some((node) => this.containsMatchingElement(node));\n  }\n\n  /**\n   * Whether or not a given react element exists in the render tree.\n   *\n   * Example:\n   * ```\n   * const wrapper = shallow(<MyComponent />);\n   * expect(wrapper.contains(<div className=\"foo bar\" />)).to.equal(true);\n   * ```\n   *\n   * @param {ReactElement} node\n   * @returns {Boolean}\n   */\n  equals(node) {\n    return this.single('equals', () => nodeEqual(this.getNodeInternal(), node));\n  }\n\n  /**\n   * Whether or not a given react element matches the render tree.\n   * Match is based on the expected element and not on wrapper root node.\n   * It will determine if the wrapper root node \"looks like\" the expected\n   * element by checking if all props of the expected element are present\n   * on the wrapper root node and equals to each other.\n   *\n   * Example:\n   * ```\n   * // MyComponent outputs <div class=\"foo\">Hello</div>\n   * const wrapper = shallow(<MyComponent />);\n   * expect(wrapper.matchesElement(<div>Hello</div>)).to.equal(true);\n   * ```\n   *\n   * @param {ReactElement} node\n   * @returns {Boolean}\n   */\n  matchesElement(node) {\n    return this.single('matchesElement', () => {\n      const adapter = getAdapter(this[OPTIONS]);\n      const rstNode = adapter.elementToNode(node);\n      return nodeMatches(rstNode, this.getNodeInternal(), (a, b) => a <= b);\n    });\n  }\n\n  /**\n   * Finds every node in the render tree of the current wrapper that matches the provided selector.\n   *\n   * @param {EnzymeSelector} selector\n   * @returns {ShallowWrapper}\n   */\n  find(selector) {\n    return this.wrap(reduceTreesBySelector(selector, this.getNodesInternal()));\n  }\n\n  /**\n   * Returns whether or not current node matches a provided selector.\n   *\n   * NOTE: can only be called on a wrapper of a single node.\n   *\n   * @param {EnzymeSelector} selector\n   * @returns {boolean}\n   */\n  is(selector) {\n    const predicate = buildPredicate(selector);\n    return this.single('is', (n) => predicate(n));\n  }\n\n  /**\n   * Returns true if the component rendered nothing, i.e., null or false.\n   *\n   * @returns {boolean}\n   */\n  isEmptyRender() {\n    const nodes = this.getNodesInternal();\n\n    return nodes.every((n) => isEmptyValue(n));\n  }\n\n  /**\n   * Returns a new wrapper instance with only the nodes of the current wrapper instance that match\n   * the provided predicate function. The predicate should receive a wrapped node as its first\n   * argument.\n   *\n   * @param {Function} predicate\n   * @returns {ShallowWrapper}\n   */\n  filterWhere(predicate) {\n    return filterWhereUnwrapped(this, (n) => predicate(this.wrap(n)));\n  }\n\n  /**\n   * Returns a new wrapper instance with only the nodes of the current wrapper instance that match\n   * the provided selector.\n   *\n   * @param {EnzymeSelector} selector\n   * @returns {ShallowWrapper}\n   */\n  filter(selector) {\n    const predicate = buildPredicate(selector);\n    return filterWhereUnwrapped(this, predicate);\n  }\n\n  /**\n   * Returns a new wrapper instance with only the nodes of the current wrapper that did not match\n   * the provided selector. Essentially the inverse of `filter`.\n   *\n   * @param {EnzymeSelector} selector\n   * @returns {ShallowWrapper}\n   */\n  not(selector) {\n    const predicate = buildPredicate(selector);\n    return filterWhereUnwrapped(this, (n) => !predicate(n));\n  }\n\n  /**\n   * Returns a string of the rendered text of the current render tree.  This function should be\n   * looked at with skepticism if being used to test what the actual HTML output of the component\n   * will be. If that is what you would like to test, use enzyme's `render` function instead.\n   *\n   * NOTE: can only be called on a wrapper of a single node.\n   *\n   * @returns {String}\n   */\n  text() {\n    return this.single('text', getTextFromNode);\n  }\n\n  /**\n   * Returns the HTML of the node.\n   *\n   * NOTE: can only be called on a wrapper of a single node.\n   *\n   * @returns {String}\n   */\n  html() {\n    return this.single('html', (n) => {\n      if (this.type() === null) return null;\n      const adapter = getAdapter(this[OPTIONS]);\n      const renderer = adapter.createRenderer({ ...this[OPTIONS], mode: 'string' });\n      return renderer.render(adapter.nodeToElement(n));\n    });\n  }\n\n  /**\n   * Returns the current node rendered to HTML and wrapped in a CheerioWrapper.\n   *\n   * NOTE: can only be called on a wrapper of a single node.\n   *\n   * @returns {CheerioWrapper}\n   */\n  render() {\n    const html = this.html();\n    return loadCheerioRoot(html);\n  }\n\n  /**\n   * Used to simulate events. Pass an eventname and (optionally) event arguments. This method of\n   * testing events should be met with some skepticism.\n   *\n   * @param {String} event\n   * @param {Array} args\n   * @returns {ShallowWrapper}\n   */\n  simulate(event, ...args) {\n    return this.single('simulate', (n) => {\n      this[RENDERER].simulateEvent(n, event, ...args);\n      this[ROOT].update();\n      return this;\n    });\n  }\n\n  /**\n   * Used to simulate throwing a rendering error. Pass an error to throw.\n   *\n   * @param {String} error\n   * @returns {ShallowWrapper}\n   */\n  simulateError(error) {\n    // in shallow, the \"root\" is the \"rendered\" thing.\n\n    return this.single('simulateError', (thisNode) => {\n      if (thisNode.nodeType === 'host') {\n        throw new TypeError('ShallowWrapper::simulateError() can only be called on custom components');\n      }\n\n      const renderer = this[RENDERER];\n      if (typeof renderer.simulateError !== 'function') {\n        throw new TypeError('your adapter does not support `simulateError`. Try upgrading it!');\n      }\n\n      const rootNode = getRootNodeInternal(this);\n      const nodeHierarchy = [thisNode].concat(nodeParents(this, thisNode));\n      renderer.simulateError(nodeHierarchy, rootNode, error);\n\n      return this;\n    });\n  }\n\n  /**\n   * Returns the props hash for the current node of the wrapper.\n   *\n   * NOTE: can only be called on a wrapper of a single node.\n   *\n   * @returns {Object}\n   */\n  props() {\n    return this.single('props', propsOfNode);\n  }\n\n  /**\n   * Returns the state hash for the root node of the wrapper. Optionally pass in a prop name and it\n   * will return just that value.\n   *\n   * NOTE: can only be called on a wrapper of a single node.\n   *\n   * @param {String} name (optional)\n   * @returns {*}\n   */\n  state(name) {\n    if (this[ROOT] !== this) {\n      throw new Error('ShallowWrapper::state() can only be called on the root');\n    }\n    if (this.instance() === null || this[RENDERER].getNode().nodeType !== 'class') {\n      throw new Error('ShallowWrapper::state() can only be called on class components');\n    }\n    const _state = this.single('state', () => this.instance().state);\n    if (typeof name !== 'undefined') {\n      if (_state == null) {\n        throw new TypeError(`ShallowWrapper::state(\"${name}\") requires that \\`state\\` not be \\`null\\` or \\`undefined\\``);\n      }\n      return _state[name];\n    }\n    return _state;\n  }\n\n  /**\n   * Returns the context hash for the root node of the wrapper.\n   * Optionally pass in a prop name and it will return just that value.\n   *\n   * NOTE: can only be called on a wrapper of a single node.\n   *\n   * @param {String} name (optional)\n   * @returns {*}\n   */\n  context(name) {\n    if (this[ROOT] !== this) {\n      throw new Error('ShallowWrapper::context() can only be called on the root');\n    }\n    if (!this[OPTIONS].context) {\n      throw new Error('ShallowWrapper::context() can only be called on a wrapper that was originally passed a context option');\n    }\n    if (this.instance() === null) {\n      throw new Error('ShallowWrapper::context() can only be called on wrapped nodes that have a non-null instance');\n    }\n    const _context = this.single('context', () => this.instance().context);\n    if (name) {\n      return _context[name];\n    }\n    return _context;\n  }\n\n  /**\n   * Returns a new wrapper with all of the children of the current wrapper.\n   *\n   * @param {EnzymeSelector} [selector]\n   * @returns {ShallowWrapper}\n   */\n  children(selector) {\n    const allChildren = this.flatMap((n) => childrenOfNode(n.getNodeInternal()));\n    return selector ? allChildren.filter(selector) : allChildren;\n  }\n\n  /**\n   * Returns a new wrapper with a specific child\n   *\n   * @param {Number} [index]\n   * @returns {ShallowWrapper}\n   */\n  childAt(index) {\n    return this.single('childAt', () => this.children().at(index));\n  }\n\n  /**\n   * Returns a wrapper around all of the parents/ancestors of the wrapper. Does not include the node\n   * in the current wrapper.\n   *\n   * NOTE: can only be called on a wrapper of a single node.\n   *\n   * @param {EnzymeSelector} [selector]\n   * @returns {ShallowWrapper}\n   */\n  parents(selector) {\n    return this.single('parents', (n) => {\n      const allParents = this.wrap(nodeParents(this, n));\n      return selector ? allParents.filter(selector) : allParents;\n    });\n  }\n\n  /**\n   * Returns a wrapper around the immediate parent of the current node.\n   *\n   * @returns {ShallowWrapper}\n   */\n  parent() {\n    return this.flatMap((n) => [n.parents().get(0)]);\n  }\n\n  /**\n   *\n   * @param {EnzymeSelector} selector\n   * @returns {ShallowWrapper}\n   */\n  closest(selector) {\n    if (this.is(selector)) {\n      return this;\n    }\n    const matchingAncestors = this.parents().filter(selector);\n    return matchingAncestors.length > 0 ? matchingAncestors.first() : this.findWhere(() => false);\n  }\n\n  /**\n   * Shallow renders the current node and returns a shallow wrapper around it.\n   *\n   * NOTE: can only be called on wrapper of a single node.\n   *\n   * @param {Object} options\n   * @returns {ShallowWrapper}\n   */\n  shallow(options = {}) {\n    return this.single('shallow', (n) => {\n      const childOptions = makeInheritedChildOptions(this, options);\n      return this.wrap(getAdapter(this[OPTIONS]).nodeToElement(n), null, childOptions);\n    });\n  }\n\n  /**\n   * Returns the value of prop with the given name of the current node.\n   *\n   * @param propName\n   * @returns {*}\n   */\n  prop(propName) {\n    return this.props()[propName];\n  }\n\n  /**\n   * Used to invoke a function prop.\n   * Will invoke an function prop and return its value.\n   *\n   * @param {String} propName\n   * @returns {Any}\n   */\n  invoke(propName) {\n    return this.single('invoke', () => {\n      const handler = this.prop(propName);\n      if (typeof handler !== 'function') {\n        throw new TypeError('ShallowWrapper::invoke() requires the name of a prop whose value is a function');\n      }\n      return (...args) => {\n        const response = handler(...args);\n        this[ROOT].update();\n        return response;\n      };\n    });\n  }\n\n  /**\n   * Returns a wrapper of the node rendered by the provided render prop.\n   *\n   * @param {String} propName\n   * @returns {Function}\n   */\n  renderProp(propName) {\n    const adapter = getAdapter(this[OPTIONS]);\n    if (typeof adapter.wrap !== 'function') {\n      throw new RangeError('your adapter does not support `wrap`. Try upgrading it!');\n    }\n\n    return this.single('renderProp', (n) => {\n      if (n.nodeType === 'host') {\n        throw new TypeError('ShallowWrapper::renderProp() can only be called on custom components');\n      }\n      if (typeof propName !== 'string') {\n        throw new TypeError('ShallowWrapper::renderProp(): `propName` must be a string');\n      }\n      const props = this.props();\n      if (!has(props, propName)) {\n        throw new Error(`ShallowWrapper::renderProp(): no prop called “${propName}“ found`);\n      }\n      const propValue = props[propName];\n      if (typeof propValue !== 'function') {\n        throw new TypeError(`ShallowWrapper::renderProp(): expected prop “${propName}“ to contain a function, but it holds “${typeof propValue}“`);\n      }\n\n      return (...args) => {\n        const element = propValue(...args);\n        const wrapped = adapter.wrap(element);\n        return this.wrap(wrapped, null, this[OPTIONS]);\n      };\n    });\n  }\n\n  /**\n   * Returns the key assigned to the current node.\n   *\n   * @returns {String}\n   */\n  key() {\n    return this.single('key', (n) => (n.key === undefined ? null : n.key));\n  }\n\n  /**\n   * Returns the type of the current node of this wrapper. If it's a composite component, this will\n   * be the component constructor. If it's a native DOM node, it will be a string of the tag name.\n   * If it's null, it will be null.\n   *\n   * @returns {String|Function|null}\n   */\n  type() {\n    return this.single('type', (n) => typeOfNode(n));\n  }\n\n  /**\n   * Returns the name of the current node of this wrapper.\n   *\n   * In order of precedence => type.displayName -> type.name -> type.\n   *\n   * @returns {String}\n   */\n  name() {\n    const adapter = getAdapter(this[OPTIONS]);\n    return this.single('name', (n) => (\n      adapter.displayNameOfNode ? adapter.displayNameOfNode(n) : displayNameOfNode(n)\n    ));\n  }\n\n  /**\n   * Returns whether or not the current node has the given class name or not.\n   *\n   * NOTE: can only be called on a wrapper of a single node.\n   *\n   * @param className\n   * @returns {Boolean}\n   */\n  hasClass(className) {\n    if (typeof className === 'string' && className.indexOf('.') !== -1) {\n      // eslint-disable-next-line no-console\n      console.warn('It looks like you\\'re calling `ShallowWrapper::hasClass()` with a CSS selector. hasClass() expects a class name, not a CSS selector.');\n    }\n    return this.single('hasClass', (n) => hasClassName(n, className));\n  }\n\n  /**\n   * Iterates through each node of the current wrapper and executes the provided function with a\n   * wrapper around the corresponding node passed in as the first argument.\n   *\n   * @param {Function} fn\n   * @returns {ShallowWrapper}\n   */\n  forEach(fn) {\n    this.getNodesInternal().forEach((n, i) => fn.call(this, this.wrap(n), i));\n    return this;\n  }\n\n  /**\n   * Maps the current array of nodes to another array. Each node is passed in as a `ShallowWrapper`\n   * to the map function.\n   *\n   * @param {Function} fn\n   * @returns {Array}\n   */\n  map(fn) {\n    return this.getNodesInternal().map((n, i) => fn.call(this, this.wrap(n), i));\n  }\n\n  /**\n   * Reduces the current array of nodes to a value. Each node is passed in as a `ShallowWrapper`\n   * to the reducer function.\n   *\n   * @param {Function} fn - the reducer function\n   * @param {*} initialValue - the initial value\n   * @returns {*}\n   */\n  reduce(fn, initialValue = undefined) {\n    if (arguments.length > 1) {\n      return this.getNodesInternal().reduce(\n        (accum, n, i) => fn.call(this, accum, this.wrap(n), i),\n        initialValue,\n      );\n    }\n    return this.getNodesInternal().reduce((accum, n, i) => fn.call(\n      this,\n      i === 1 ? this.wrap(accum) : accum,\n      this.wrap(n),\n      i,\n    ));\n  }\n\n  /**\n   * Reduces the current array of nodes to another array, from right to left. Each node is passed\n   * in as a `ShallowWrapper` to the reducer function.\n   *\n   * @param {Function} fn - the reducer function\n   * @param {*} initialValue - the initial value\n   * @returns {*}\n   */\n  reduceRight(fn, initialValue = undefined) {\n    if (arguments.length > 1) {\n      return this.getNodesInternal().reduceRight(\n        (accum, n, i) => fn.call(this, accum, this.wrap(n), i),\n        initialValue,\n      );\n    }\n    return this.getNodesInternal().reduceRight((accum, n, i) => fn.call(\n      this,\n      i === 1 ? this.wrap(accum) : accum,\n      this.wrap(n),\n      i,\n    ));\n  }\n\n  /**\n   * Returns a new wrapper with a subset of the nodes of the original wrapper, according to the\n   * rules of `Array#slice`.\n   *\n   * @param {Number} begin\n   * @param {Number} end\n   * @returns {ShallowWrapper}\n   */\n  slice(begin, end) {\n    return this.wrap(this.getNodesInternal().slice(begin, end));\n  }\n\n  /**\n   * Returns whether or not any of the nodes in the wrapper match the provided selector.\n   *\n   * @param {EnzymeSelector} selector\n   * @returns {Boolean}\n   */\n  some(selector) {\n    if (this[ROOT] === this) {\n      throw new Error('ShallowWrapper::some() can not be called on the root');\n    }\n    const predicate = buildPredicate(selector);\n    return this.getNodesInternal().some(predicate);\n  }\n\n  /**\n   * Returns whether or not any of the nodes in the wrapper pass the provided predicate function.\n   *\n   * @param {Function} predicate\n   * @returns {Boolean}\n   */\n  someWhere(predicate) {\n    return this.getNodesInternal().some((n, i) => predicate.call(this, this.wrap(n), i));\n  }\n\n  /**\n   * Returns whether or not all of the nodes in the wrapper match the provided selector.\n   *\n   * @param {EnzymeSelector} selector\n   * @returns {Boolean}\n   */\n  every(selector) {\n    const predicate = buildPredicate(selector);\n    return this.getNodesInternal().every(predicate);\n  }\n\n  /**\n   * Returns whether or not any of the nodes in the wrapper pass the provided predicate function.\n   *\n   * @param {Function} predicate\n   * @returns {Boolean}\n   */\n  everyWhere(predicate) {\n    return this.getNodesInternal().every((n, i) => predicate.call(this, this.wrap(n), i));\n  }\n\n  /**\n   * Utility method used to create new wrappers with a mapping function that returns an array of\n   * nodes in response to a single node wrapper. The returned wrapper is a single wrapper around\n   * all of the mapped nodes flattened (and de-duplicated).\n   *\n   * @param {Function} fn\n   * @returns {ShallowWrapper}\n   */\n  flatMap(fn) {\n    const nodes = this.getNodesInternal().map((n, i) => fn.call(this, this.wrap(n), i));\n    const flattened = flat(nodes, 1);\n    return this.wrap(flattened.filter(Boolean));\n  }\n\n  /**\n   * Finds all nodes in the current wrapper nodes' render trees that match the provided predicate\n   * function. The predicate function will receive the nodes inside a ShallowWrapper as its\n   * first argument.\n   *\n   * @param {Function} predicate\n   * @returns {ShallowWrapper}\n   */\n  findWhere(predicate) {\n    return findWhereUnwrapped(this, (n) => {\n      const node = this.wrap(n);\n      return node.length > 0 && predicate(node);\n    });\n  }\n\n  /**\n   * Returns the node at a given index of the current wrapper.\n   *\n   * @param index\n   * @returns {ReactElement}\n   */\n  get(index) {\n    return this.getElements()[index];\n  }\n\n  /**\n   * Returns a wrapper around the node at a given index of the current wrapper.\n   *\n   * @param index\n   * @returns {ShallowWrapper}\n   */\n  at(index) {\n    const nodes = this.getNodesInternal();\n    if (index < nodes.length) {\n      return this.wrap(nodes[index]);\n    }\n    return this.wrap([]);\n  }\n\n  /**\n   * Returns a wrapper around the first node of the current wrapper.\n   *\n   * @returns {ShallowWrapper}\n   */\n  first() {\n    return this.at(0);\n  }\n\n  /**\n   * Returns a wrapper around the last node of the current wrapper.\n   *\n   * @returns {ShallowWrapper}\n   */\n  last() {\n    return this.at(this.length - 1);\n  }\n\n  /**\n   * Delegates to exists()\n   *\n   * @returns {boolean}\n   */\n  isEmpty() {\n    // eslint-disable-next-line no-console\n    console.warn('Enzyme::Deprecated method isEmpty() called, use exists() instead.');\n    return !this.exists();\n  }\n\n  /**\n   * Returns true if the current wrapper has nodes. False otherwise.\n   * If called with a selector it returns `.find(selector).exists()` instead.\n   *\n   * @param {EnzymeSelector} selector (optional)\n   * @returns {boolean}\n   */\n  exists(selector = null) {\n    return arguments.length > 0 ? this.find(selector).exists() : this.length > 0;\n  }\n\n  /**\n   * Utility method that throws an error if the current instance has a length other than one.\n   * This is primarily used to enforce that certain methods are only run on a wrapper when it is\n   * wrapping a single node.\n   *\n   * @param fn\n   * @returns {*}\n   */\n  single(name, fn) {\n    const fnName = typeof name === 'string' ? name : 'unknown';\n    const callback = typeof fn === 'function' ? fn : name;\n    if (this.length !== 1) {\n      throw new Error(`Method “${fnName}” is meant to be run on 1 node. ${this.length} found instead.`);\n    }\n    return callback.call(this, this.getNodeInternal());\n  }\n\n  /**\n   * Helpful utility method to create a new wrapper with the same root as the current wrapper, with\n   * any nodes passed in as the first parameter automatically wrapped.\n   *\n   * @param node\n   * @returns {ShallowWrapper}\n   */\n  wrap(node, root = this[ROOT], ...args) {\n    if (node instanceof ShallowWrapper) {\n      return node;\n    }\n    return new ShallowWrapper(node, root, ...args);\n  }\n\n  /**\n   * Returns an HTML-like string of the shallow render for debugging purposes.\n   *\n   * @param {Object} [options] - Property bag of additional options.\n   * @param {boolean} [options.ignoreProps] - if true, props are omitted from the string.\n   * @param {boolean} [options.verbose] - if true, arrays and objects to be verbosely printed.\n   * @returns {String}\n   */\n  debug(options = {}) {\n    return debugNodes(this.getNodesInternal(), options);\n  }\n\n  /**\n   * Invokes intercepter and returns itself. intercepter is called with itself.\n   * This is helpful when debugging nodes in method chains.\n   * @param fn\n   * @returns {ShallowWrapper}\n   */\n  tap(intercepter) {\n    intercepter(this);\n    return this;\n  }\n\n  /**\n   * Primarily useful for HOCs (higher-order components), this method may only be\n   * run on a single, non-DOM node, and will return the node, shallow-rendered.\n   *\n   * @param {Object} options\n   * @returns {ShallowWrapper}\n   */\n  dive(options = {}) {\n    const adapter = getAdapter(this[OPTIONS]);\n    const name = 'dive';\n    return this.single(name, (n) => {\n      if (n && n.nodeType === 'host') {\n        throw new TypeError(`ShallowWrapper::${name}() can not be called on Host Components`);\n      }\n      const el = getAdapter(this[OPTIONS]).nodeToElement(n);\n      if (!isCustomComponentElement(el, adapter)) {\n        throw new TypeError(`ShallowWrapper::${name}() can only be called on components`);\n      }\n      const childOptions = makeInheritedChildOptions(this, options);\n      return this.wrap(el, null, childOptions);\n    });\n  }\n\n  /**\n   * Strips out all the not host-nodes from the list of nodes\n   *\n   * This method is useful if you want to check for the presence of host nodes\n   * (actually rendered HTML elements) ignoring the React nodes.\n   */\n  hostNodes() {\n    return this.filterWhere((n) => typeof n.type() === 'string');\n  }\n}\n\n/**\n * Updates the context of the primary wrapper when the\n * `wrappingComponent` re-renders.\n */\nfunction updatePrimaryRootContext(wrappingComponent) {\n  const adapter = getAdapter(wrappingComponent[OPTIONS]);\n  const primaryWrapper = wrappingComponent[PRIMARY_WRAPPER];\n  const primaryRenderer = primaryWrapper[RENDERER];\n  const primaryNode = primaryRenderer.getNode();\n  const {\n    legacyContext,\n    providerValues,\n  } = getContextFromWrappingComponent(wrappingComponent, adapter);\n  const prevProviderValues = primaryWrapper[PROVIDER_VALUES];\n\n  primaryWrapper.setContext({\n    ...wrappingComponent[PRIMARY_WRAPPER][OPTIONS].context,\n    ...legacyContext,\n  });\n  primaryWrapper[PROVIDER_VALUES] = new Map([...prevProviderValues, ...providerValues]);\n\n  if (typeof adapter.isContextConsumer === 'function' && adapter.isContextConsumer(primaryNode.type)) {\n    const Consumer = primaryNode.type;\n    // Adapters with an `isContextConsumer` method will definitely have a `getProviderFromConsumer`\n    // method.\n    const Provider = adapter.getProviderFromConsumer(Consumer);\n    const newValue = providerValues.get(Provider);\n    const oldValue = prevProviderValues.get(Provider);\n\n    // Use referential comparison like React\n    if (newValue !== oldValue) {\n      primaryWrapper.rerender();\n    }\n  }\n}\n\n/**\n * A *special* \"root\" wrapper that represents the component passed as `wrappingComponent`.\n * It is linked to the primary root such that updates to it will update the primary.\n *\n * @class WrappingComponentWrapper\n */\nclass WrappingComponentWrapper extends ShallowWrapper {\n  constructor(nodes, root, RootFinder) {\n    super(nodes);\n    privateSet(this, PRIMARY_WRAPPER, root);\n    privateSet(this, ROOT_FINDER, RootFinder);\n  }\n\n  /**\n   * Like rerender() on ShallowWrapper, except it also does a \"full render\" of\n   * itself and updates the primary ShallowWrapper's context.\n   */\n  rerender(...args) {\n    const result = super.rerender(...args);\n    updatePrimaryRootContext(this);\n    return result;\n  }\n\n  /**\n   * Like setState() on ShallowWrapper, except it also does a \"full render\" of\n   * itself and updates the primary ShallowWrapper's context.\n   */\n  setState(...args) {\n    const result = super.setState(...args);\n    updatePrimaryRootContext(this);\n    return result;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getWrappingComponent() {\n    throw new Error('ShallowWrapper::getWrappingComponent() can only be called on the root');\n  }\n}\n\nif (ITERATOR_SYMBOL) {\n  Object.defineProperty(ShallowWrapper.prototype, ITERATOR_SYMBOL, {\n    configurable: true,\n    value: function iterator() {\n      const iter = this.getNodesInternal()[ITERATOR_SYMBOL]();\n      const adapter = getAdapter(this[OPTIONS]);\n      return {\n        [ITERATOR_SYMBOL]() { return this; },\n        next() {\n          const next = iter.next();\n          if (next.done) {\n            return { done: true };\n          }\n          return {\n            done: false,\n            value: adapter.nodeToElement(next.value),\n          };\n        },\n      };\n    },\n  });\n}\n\nfunction privateWarning(prop, extraMessage) {\n  Object.defineProperty(ShallowWrapper.prototype, prop, {\n    get() {\n      throw new Error(`\n        Attempted to access ShallowWrapper::${prop}, which was previously a private property on\n        Enzyme ShallowWrapper instances, but is no longer and should not be relied upon.\n        ${extraMessage}\n      `);\n    },\n    enumerable: false,\n    configurable: false,\n  });\n}\n\nprivateWarning('node', 'Consider using the getElement() method instead.');\nprivateWarning('nodes', 'Consider using the getElements() method instead.');\nprivateWarning('renderer', '');\nprivateWarning('options', '');\nprivateWarning('complexSelector', '');\n\nexport default ShallowWrapper;\n"],"mappings":"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"}