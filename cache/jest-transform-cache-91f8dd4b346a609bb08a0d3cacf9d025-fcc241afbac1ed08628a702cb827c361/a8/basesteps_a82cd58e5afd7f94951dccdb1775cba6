945d6fefae748966c8a2161c9b48f4ea
"use strict";

var _jestCucumber = require("jest-cucumber");
var _react = require("@testing-library/react");
var _Home = _interopRequireDefault(require("./../../homeandsubmit/Home"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const feature = (0, _jestCucumber.loadFeature)("src/components/features/base.feature");
(0, _jestCucumber.defineFeature)(feature, test => {
  test("User submits form with valid inputs", ({
    given,
    when,
    and,
    then
  }) => {
    let container;
    let getByLabelText;
    let getByText;
    given("I am on the Home screen", () => {
      container = (0, _react.render)( /*#__PURE__*/React.createElement(_Home.default, null));
      getByLabelText = container.getByLabelText;
      getByText = container.getByText;
    });
    when("I enter a valid email {string}", email => {
      const emailInput = getByLabelText("Enter MailID:");
      _react.fireEvent.change(emailInput, {
        target: {
          value: email
        }
      });
    });
    and("I enter a valid name {string}", name => {
      const nameInput = getByLabelText("Enter your name:");
      _react.fireEvent.change(nameInput, {
        target: {
          value: name
        }
      });
    });
    and("I enter a valid phone number {string}", phone => {
      const phoneInput = getByLabelText("Enter your Phone Number:");
      _react.fireEvent.change(phoneInput, {
        target: {
          value: phone
        }
      });
    });
    and("I submit the form", () => {
      const submitButton = getByText("Submit");
      _react.fireEvent.click(submitButton);
    });
    then("I should see the start quiz button", () => {
      expect(_react.screen.getByText("Start Quiz")).toBeInTheDocument();
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfamVzdEN1Y3VtYmVyIiwicmVxdWlyZSIsIl9yZWFjdCIsIl9Ib21lIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiZmVhdHVyZSIsImxvYWRGZWF0dXJlIiwiZGVmaW5lRmVhdHVyZSIsInRlc3QiLCJnaXZlbiIsIndoZW4iLCJhbmQiLCJ0aGVuIiwiY29udGFpbmVyIiwiZ2V0QnlMYWJlbFRleHQiLCJnZXRCeVRleHQiLCJyZW5kZXIiLCJSZWFjdCIsImNyZWF0ZUVsZW1lbnQiLCJlbWFpbCIsImVtYWlsSW5wdXQiLCJmaXJlRXZlbnQiLCJjaGFuZ2UiLCJ0YXJnZXQiLCJ2YWx1ZSIsIm5hbWUiLCJuYW1lSW5wdXQiLCJwaG9uZSIsInBob25lSW5wdXQiLCJzdWJtaXRCdXR0b24iLCJjbGljayIsImV4cGVjdCIsInNjcmVlbiIsInRvQmVJblRoZURvY3VtZW50Il0sInNvdXJjZXMiOlsiYmFzZS5zdGVwcy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVmaW5lRmVhdHVyZSwgbG9hZEZlYXR1cmUgfSBmcm9tIFwiamVzdC1jdWN1bWJlclwiO1xyXG5pbXBvcnQgeyByZW5kZXIsIHNjcmVlbiwgZmlyZUV2ZW50IH0gZnJvbSBcIkB0ZXN0aW5nLWxpYnJhcnkvcmVhY3RcIjtcclxuaW1wb3J0IHsgYWN0IH0gZnJvbSBcInJlYWN0LWRvbS90ZXN0LXV0aWxzXCI7XHJcbmltcG9ydCBIb21lIGZyb20gXCIuLy4uLy4uL2hvbWVhbmRzdWJtaXQvSG9tZVwiO1xyXG5pbXBvcnQgeyBRdWl6Q29udGV4dCB9IGZyb20gXCIuLy4uLy4uLy4uL0FwcFwiO1xyXG5cclxuY29uc3QgZmVhdHVyZSA9IGxvYWRGZWF0dXJlKFwic3JjL2NvbXBvbmVudHMvZmVhdHVyZXMvYmFzZS5mZWF0dXJlXCIpO1xyXG5cclxuZGVmaW5lRmVhdHVyZShmZWF0dXJlLCAodGVzdCkgPT4ge1xyXG4gIHRlc3QoXCJVc2VyIHN1Ym1pdHMgZm9ybSB3aXRoIHZhbGlkIGlucHV0c1wiLCAoeyBnaXZlbiwgd2hlbiwgYW5kLCB0aGVuIH0pID0+IHtcclxuICAgIGxldCBjb250YWluZXI7XHJcbiAgICBsZXQgZ2V0QnlMYWJlbFRleHQ6IGFueTtcclxuICAgIGxldCBnZXRCeVRleHQ6IGFueTtcclxuXHJcbiAgICBnaXZlbihcIkkgYW0gb24gdGhlIEhvbWUgc2NyZWVuXCIsICgpID0+IHtcclxuICAgICAgY29udGFpbmVyID0gcmVuZGVyKDxIb21lIC8+KTtcclxuICAgICAgZ2V0QnlMYWJlbFRleHQgPSBjb250YWluZXIuZ2V0QnlMYWJlbFRleHQ7XHJcbiAgICAgIGdldEJ5VGV4dCA9IGNvbnRhaW5lci5nZXRCeVRleHQ7XHJcbiAgICB9KTtcclxuXHJcbiAgICB3aGVuKFwiSSBlbnRlciBhIHZhbGlkIGVtYWlsIHtzdHJpbmd9XCIsIChlbWFpbCkgPT4ge1xyXG4gICAgICBjb25zdCBlbWFpbElucHV0ID0gZ2V0QnlMYWJlbFRleHQoXCJFbnRlciBNYWlsSUQ6XCIpO1xyXG4gICAgICBmaXJlRXZlbnQuY2hhbmdlKGVtYWlsSW5wdXQsIHsgdGFyZ2V0OiB7IHZhbHVlOiBlbWFpbCB9IH0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgYW5kKFwiSSBlbnRlciBhIHZhbGlkIG5hbWUge3N0cmluZ31cIiwgKG5hbWUpID0+IHtcclxuICAgICAgY29uc3QgbmFtZUlucHV0ID0gZ2V0QnlMYWJlbFRleHQoXCJFbnRlciB5b3VyIG5hbWU6XCIpO1xyXG4gICAgICBmaXJlRXZlbnQuY2hhbmdlKG5hbWVJbnB1dCwgeyB0YXJnZXQ6IHsgdmFsdWU6IG5hbWUgfSB9KTtcclxuICAgIH0pO1xyXG5cclxuICAgIGFuZChcIkkgZW50ZXIgYSB2YWxpZCBwaG9uZSBudW1iZXIge3N0cmluZ31cIiwgKHBob25lKSA9PiB7XHJcbiAgICAgIGNvbnN0IHBob25lSW5wdXQgPSBnZXRCeUxhYmVsVGV4dChcIkVudGVyIHlvdXIgUGhvbmUgTnVtYmVyOlwiKTtcclxuICAgICAgZmlyZUV2ZW50LmNoYW5nZShwaG9uZUlucHV0LCB7IHRhcmdldDogeyB2YWx1ZTogcGhvbmUgfSB9KTtcclxuICAgIH0pO1xyXG5cclxuICAgIGFuZChcIkkgc3VibWl0IHRoZSBmb3JtXCIsICgpID0+IHtcclxuICAgICAgY29uc3Qgc3VibWl0QnV0dG9uID0gZ2V0QnlUZXh0KFwiU3VibWl0XCIpO1xyXG4gICAgICBmaXJlRXZlbnQuY2xpY2soc3VibWl0QnV0dG9uKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoZW4oXCJJIHNob3VsZCBzZWUgdGhlIHN0YXJ0IHF1aXogYnV0dG9uXCIsICgpID0+IHtcclxuICAgICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoXCJTdGFydCBRdWl6XCIpKS50b0JlSW5UaGVEb2N1bWVudCgpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBQUEsYUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsTUFBQSxHQUFBRCxPQUFBO0FBRUEsSUFBQUUsS0FBQSxHQUFBQyxzQkFBQSxDQUFBSCxPQUFBO0FBQThDLFNBQUFHLHVCQUFBQyxHQUFBLFdBQUFBLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLEdBQUFELEdBQUEsS0FBQUUsT0FBQSxFQUFBRixHQUFBO0FBRzlDLE1BQU1HLE9BQU8sR0FBRyxJQUFBQyx5QkFBVyxFQUFDLHNDQUFzQyxDQUFDO0FBRW5FLElBQUFDLDJCQUFhLEVBQUNGLE9BQU8sRUFBR0csSUFBSSxJQUFLO0VBQy9CQSxJQUFJLENBQUMscUNBQXFDLEVBQUUsQ0FBQztJQUFFQyxLQUFLO0lBQUVDLElBQUk7SUFBRUMsR0FBRztJQUFFQztFQUFLLENBQUMsS0FBSztJQUMxRSxJQUFJQyxTQUFTO0lBQ2IsSUFBSUMsY0FBbUI7SUFDdkIsSUFBSUMsU0FBYztJQUVsQk4sS0FBSyxDQUFDLHlCQUF5QixFQUFFLE1BQU07TUFDckNJLFNBQVMsR0FBRyxJQUFBRyxhQUFNLGdCQUFDQyxLQUFBLENBQUFDLGFBQUEsQ0FBQ2xCLEtBQUEsQ0FBQUksT0FBSSxPQUFHLENBQUM7TUFDNUJVLGNBQWMsR0FBR0QsU0FBUyxDQUFDQyxjQUFjO01BQ3pDQyxTQUFTLEdBQUdGLFNBQVMsQ0FBQ0UsU0FBUztJQUNqQyxDQUFDLENBQUM7SUFFRkwsSUFBSSxDQUFDLGdDQUFnQyxFQUFHUyxLQUFLLElBQUs7TUFDaEQsTUFBTUMsVUFBVSxHQUFHTixjQUFjLENBQUMsZUFBZSxDQUFDO01BQ2xETyxnQkFBUyxDQUFDQyxNQUFNLENBQUNGLFVBQVUsRUFBRTtRQUFFRyxNQUFNLEVBQUU7VUFBRUMsS0FBSyxFQUFFTDtRQUFNO01BQUUsQ0FBQyxDQUFDO0lBQzVELENBQUMsQ0FBQztJQUVGUixHQUFHLENBQUMsK0JBQStCLEVBQUdjLElBQUksSUFBSztNQUM3QyxNQUFNQyxTQUFTLEdBQUdaLGNBQWMsQ0FBQyxrQkFBa0IsQ0FBQztNQUNwRE8sZ0JBQVMsQ0FBQ0MsTUFBTSxDQUFDSSxTQUFTLEVBQUU7UUFBRUgsTUFBTSxFQUFFO1VBQUVDLEtBQUssRUFBRUM7UUFBSztNQUFFLENBQUMsQ0FBQztJQUMxRCxDQUFDLENBQUM7SUFFRmQsR0FBRyxDQUFDLHVDQUF1QyxFQUFHZ0IsS0FBSyxJQUFLO01BQ3RELE1BQU1DLFVBQVUsR0FBR2QsY0FBYyxDQUFDLDBCQUEwQixDQUFDO01BQzdETyxnQkFBUyxDQUFDQyxNQUFNLENBQUNNLFVBQVUsRUFBRTtRQUFFTCxNQUFNLEVBQUU7VUFBRUMsS0FBSyxFQUFFRztRQUFNO01BQUUsQ0FBQyxDQUFDO0lBQzVELENBQUMsQ0FBQztJQUVGaEIsR0FBRyxDQUFDLG1CQUFtQixFQUFFLE1BQU07TUFDN0IsTUFBTWtCLFlBQVksR0FBR2QsU0FBUyxDQUFDLFFBQVEsQ0FBQztNQUN4Q00sZ0JBQVMsQ0FBQ1MsS0FBSyxDQUFDRCxZQUFZLENBQUM7SUFDL0IsQ0FBQyxDQUFDO0lBRUZqQixJQUFJLENBQUMsb0NBQW9DLEVBQUUsTUFBTTtNQUMvQ21CLE1BQU0sQ0FBQ0MsYUFBTSxDQUFDakIsU0FBUyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUNrQixpQkFBaUIsRUFBRTtJQUM1RCxDQUFDLENBQUM7RUFDSixDQUFDLENBQUM7QUFDSixDQUFDLENBQUMifQ==