14c1467f2ea39a2a8c97c6cb058dd7a7
"use strict";

var _react = _interopRequireDefault(require("react"));
var _jestCucumber = require("jest-cucumber");
var _react2 = require("@testing-library/react");
require("text-encoding");
require("@testing-library/jest-dom/extend-expect");
var _reactRouterDom = require("react-router-dom");
var _App = require("../../../App");
var _Home = _interopRequireDefault(require("./../../homeandsubmit/Home"));
var _SubmitScreen = _interopRequireDefault(require("../../homeandsubmit/SubmitScreen"));
var _reactDnd = require("react-dnd");
var _reactDndHtml5Backend = require("react-dnd-html5-backend");
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const feature = (0, _jestCucumber.loadFeature)("src/components/features/submitscreen.feature");
(0, _jestCucumber.defineFeature)(feature, test => {
  beforeEach(() => {
    document.body.innerHTML = "";
  });
  test("User submits their quiz and sees their results", ({
    given,
    when,
    then,
    and
  }) => {
    const mockQuizContext = {
      score: 5,
      setScore: jest.fn(),
      name: "chandu",
      setName: jest.fn(),
      age: 25,
      setAge: jest.fn(),
      email: "chandra@chandu.com",
      setMail: jest.fn(),
      phoneNumber: "1234567890",
      setPhone: jest.fn(),
      selectedLanguage: "ReactJS",
      setSelector: jest.fn(),
      trackScore: false,
      setTracker: jest.fn()
    };
    given("the user has completed the quiz is on the Submit Screen", () => {
      const screen = (0, _react2.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactDnd.DndProvider, {
        backend: _reactDndHtml5Backend.HTML5Backend,
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_App.QuizContext.Provider, {
          value: mockQuizContext,
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.BrowserRouter, {
            children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactRouterDom.Routes, {
              children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.Route, {
                path: "/",
                element: /*#__PURE__*/(0, _jsxRuntime.jsx)(_SubmitScreen.default, {})
              }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.Route, {
                element: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Home.default, {})
              })]
            })
          })
        })
      }));
      expect(screen).toBeTruthy();
      const container = screen.getByTestId("submission-container");
      expect(container).toBeTruthy();
    });
    when("the user should see the details they entered in the home screen", () => {
      expect(_react2.screen.getByText("chandu")).toBeTruthy();
      expect(_react2.screen.getByText("chandra@chandu.com")).toBeTruthy();
      expect(_react2.screen.getByText("1234567890")).toBeTruthy();
      expect(_react2.screen.getByText("ReactJS")).toBeTruthy();
      expect(_react2.screen.getByText("5/8")).toBeTruthy();
      expect(_react2.screen.getByText("25")).toBeTruthy();
    });
    and("the user should see their score in a pie chart", async () => {
      await (0, _react2.waitFor)(() => {
        expect(_react2.screen.getByTestId("submitscreen-piechart")).toBeInTheDocument();
      });
    });
    and("the user should see a button to re-enter their details", () => {});
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,