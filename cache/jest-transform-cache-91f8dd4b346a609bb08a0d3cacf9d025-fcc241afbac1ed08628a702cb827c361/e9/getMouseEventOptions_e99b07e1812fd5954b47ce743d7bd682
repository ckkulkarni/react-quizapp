c037388d85c17fdccb73f9ffaa25afa8
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getMouseEventOptions = getMouseEventOptions;
function isMousePressEvent(event) {
  return event === 'mousedown' || event === 'mouseup' || event === 'click' || event === 'dblclick';
} // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons

const BUTTONS_NAMES = {
  none: 0,
  primary: 1,
  secondary: 2,
  auxiliary: 4
}; // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button

const BUTTON_NAMES = {
  primary: 0,
  auxiliary: 1,
  secondary: 2
};
function translateButtonNumber(value, from) {
  var _Object$entries$find;
  const [mapIn, mapOut] = from === 'button' ? [BUTTON_NAMES, BUTTONS_NAMES] : [BUTTONS_NAMES, BUTTON_NAMES];
  const name = (_Object$entries$find = Object.entries(mapIn).find(([, i]) => i === value)) == null ? void 0 : _Object$entries$find[0]; // istanbul ignore next

  return name && Object.prototype.hasOwnProperty.call(mapOut, name) ? mapOut[name] : 0;
}
function convertMouseButtons(event, init, property) {
  if (!isMousePressEvent(event)) {
    return 0;
  }
  if (typeof init[property] === 'number') {
    return init[property];
  } else if (property === 'button' && typeof init.buttons === 'number') {
    return translateButtonNumber(init.buttons, 'buttons');
  } else if (property === 'buttons' && typeof init.button === 'number') {
    return translateButtonNumber(init.button, 'button');
  }
  return property != 'button' && isMousePressEvent(event) ? 1 : 0;
}
function getMouseEventOptions(event, init, clickCount = 0) {
  var _init;
  init = (_init = init) != null ? _init : {};
  return {
    ...init,
    // https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/detail
    detail: event === 'mousedown' || event === 'mouseup' || event === 'click' ? 1 + clickCount : clickCount,
    buttons: convertMouseButtons(event, init, 'buttons'),
    button: convertMouseButtons(event, init, 'button')
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImdldE1vdXNlRXZlbnRPcHRpb25zIiwiaXNNb3VzZVByZXNzRXZlbnQiLCJldmVudCIsIkJVVFRPTlNfTkFNRVMiLCJub25lIiwicHJpbWFyeSIsInNlY29uZGFyeSIsImF1eGlsaWFyeSIsIkJVVFRPTl9OQU1FUyIsInRyYW5zbGF0ZUJ1dHRvbk51bWJlciIsImZyb20iLCJfT2JqZWN0JGVudHJpZXMkZmluZCIsIm1hcEluIiwibWFwT3V0IiwibmFtZSIsImVudHJpZXMiLCJmaW5kIiwiaSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImNvbnZlcnRNb3VzZUJ1dHRvbnMiLCJpbml0IiwicHJvcGVydHkiLCJidXR0b25zIiwiYnV0dG9uIiwiY2xpY2tDb3VudCIsIl9pbml0IiwiZGV0YWlsIl0sInNvdXJjZXMiOlsiZ2V0TW91c2VFdmVudE9wdGlvbnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmdldE1vdXNlRXZlbnRPcHRpb25zID0gZ2V0TW91c2VFdmVudE9wdGlvbnM7XG5cbmZ1bmN0aW9uIGlzTW91c2VQcmVzc0V2ZW50KGV2ZW50KSB7XG4gIHJldHVybiBldmVudCA9PT0gJ21vdXNlZG93bicgfHwgZXZlbnQgPT09ICdtb3VzZXVwJyB8fCBldmVudCA9PT0gJ2NsaWNrJyB8fCBldmVudCA9PT0gJ2RibGNsaWNrJztcbn0gLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL01vdXNlRXZlbnQvYnV0dG9uc1xuXG5cbmNvbnN0IEJVVFRPTlNfTkFNRVMgPSB7XG4gIG5vbmU6IDAsXG4gIHByaW1hcnk6IDEsXG4gIHNlY29uZGFyeTogMixcbiAgYXV4aWxpYXJ5OiA0XG59OyAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvTW91c2VFdmVudC9idXR0b25cblxuY29uc3QgQlVUVE9OX05BTUVTID0ge1xuICBwcmltYXJ5OiAwLFxuICBhdXhpbGlhcnk6IDEsXG4gIHNlY29uZGFyeTogMlxufTtcblxuZnVuY3Rpb24gdHJhbnNsYXRlQnV0dG9uTnVtYmVyKHZhbHVlLCBmcm9tKSB7XG4gIHZhciBfT2JqZWN0JGVudHJpZXMkZmluZDtcblxuICBjb25zdCBbbWFwSW4sIG1hcE91dF0gPSBmcm9tID09PSAnYnV0dG9uJyA/IFtCVVRUT05fTkFNRVMsIEJVVFRPTlNfTkFNRVNdIDogW0JVVFRPTlNfTkFNRVMsIEJVVFRPTl9OQU1FU107XG4gIGNvbnN0IG5hbWUgPSAoX09iamVjdCRlbnRyaWVzJGZpbmQgPSBPYmplY3QuZW50cmllcyhtYXBJbikuZmluZCgoWywgaV0pID0+IGkgPT09IHZhbHVlKSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9PYmplY3QkZW50cmllcyRmaW5kWzBdOyAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuXG4gIHJldHVybiBuYW1lICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtYXBPdXQsIG5hbWUpID8gbWFwT3V0W25hbWVdIDogMDtcbn1cblxuZnVuY3Rpb24gY29udmVydE1vdXNlQnV0dG9ucyhldmVudCwgaW5pdCwgcHJvcGVydHkpIHtcbiAgaWYgKCFpc01vdXNlUHJlc3NFdmVudChldmVudCkpIHtcbiAgICByZXR1cm4gMDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgaW5pdFtwcm9wZXJ0eV0gPT09ICdudW1iZXInKSB7XG4gICAgcmV0dXJuIGluaXRbcHJvcGVydHldO1xuICB9IGVsc2UgaWYgKHByb3BlcnR5ID09PSAnYnV0dG9uJyAmJiB0eXBlb2YgaW5pdC5idXR0b25zID09PSAnbnVtYmVyJykge1xuICAgIHJldHVybiB0cmFuc2xhdGVCdXR0b25OdW1iZXIoaW5pdC5idXR0b25zLCAnYnV0dG9ucycpO1xuICB9IGVsc2UgaWYgKHByb3BlcnR5ID09PSAnYnV0dG9ucycgJiYgdHlwZW9mIGluaXQuYnV0dG9uID09PSAnbnVtYmVyJykge1xuICAgIHJldHVybiB0cmFuc2xhdGVCdXR0b25OdW1iZXIoaW5pdC5idXR0b24sICdidXR0b24nKTtcbiAgfVxuXG4gIHJldHVybiBwcm9wZXJ0eSAhPSAnYnV0dG9uJyAmJiBpc01vdXNlUHJlc3NFdmVudChldmVudCkgPyAxIDogMDtcbn1cblxuZnVuY3Rpb24gZ2V0TW91c2VFdmVudE9wdGlvbnMoZXZlbnQsIGluaXQsIGNsaWNrQ291bnQgPSAwKSB7XG4gIHZhciBfaW5pdDtcblxuICBpbml0ID0gKF9pbml0ID0gaW5pdCkgIT0gbnVsbCA/IF9pbml0IDoge307XG4gIHJldHVybiB7IC4uLmluaXQsXG4gICAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1VJRXZlbnQvZGV0YWlsXG4gICAgZGV0YWlsOiBldmVudCA9PT0gJ21vdXNlZG93bicgfHwgZXZlbnQgPT09ICdtb3VzZXVwJyB8fCBldmVudCA9PT0gJ2NsaWNrJyA/IDEgKyBjbGlja0NvdW50IDogY2xpY2tDb3VudCxcbiAgICBidXR0b25zOiBjb252ZXJ0TW91c2VCdXR0b25zKGV2ZW50LCBpbml0LCAnYnV0dG9ucycpLFxuICAgIGJ1dHRvbjogY29udmVydE1vdXNlQnV0dG9ucyhldmVudCwgaW5pdCwgJ2J1dHRvbicpXG4gIH07XG59Il0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOztBQUVaQSxNQUFNLENBQUNDLGNBQWMsQ0FBQ0MsT0FBTyxFQUFFLFlBQVksRUFBRTtFQUMzQ0MsS0FBSyxFQUFFO0FBQ1QsQ0FBQyxDQUFDO0FBQ0ZELE9BQU8sQ0FBQ0Usb0JBQW9CLEdBQUdBLG9CQUFvQjtBQUVuRCxTQUFTQyxpQkFBaUJBLENBQUNDLEtBQUssRUFBRTtFQUNoQyxPQUFPQSxLQUFLLEtBQUss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