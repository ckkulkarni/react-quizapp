7c110684e1eef21a7d68d8d69c1ef5e3
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.shallowEqual = shallowEqual;
function shallowEqual(objA, objB, compare, compareContext) {
  let compareResult = compare ? compare.call(compareContext, objA, objB) : void 0;
  if (compareResult !== void 0) {
    return !!compareResult;
  }
  if (objA === objB) {
    return true;
  }
  if (typeof objA !== 'object' || !objA || typeof objB !== 'object' || !objB) {
    return false;
  }
  const keysA = Object.keys(objA);
  const keysB = Object.keys(objB);
  if (keysA.length !== keysB.length) {
    return false;
  }
  const bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);
  // Test for A's keys different from B.
  for (let idx = 0; idx < keysA.length; idx++) {
    const key = keysA[idx];
    if (!bHasOwnProperty(key)) {
      return false;
    }
    const valueA = objA[key];
    const valueB = objB[key];
    compareResult = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;
    if (compareResult === false || compareResult === void 0 && valueA !== valueB) {
      return false;
    }
  }
  return true;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzaGFsbG93RXF1YWwiLCJvYmpBIiwib2JqQiIsImNvbXBhcmUiLCJjb21wYXJlQ29udGV4dCIsImNvbXBhcmVSZXN1bHQiLCJjYWxsIiwia2V5c0EiLCJPYmplY3QiLCJrZXlzIiwia2V5c0IiLCJsZW5ndGgiLCJiSGFzT3duUHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImJpbmQiLCJpZHgiLCJrZXkiLCJ2YWx1ZUEiLCJ2YWx1ZUIiXSwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHNoYWxsb3dFcXVhbDxUPihcblx0b2JqQTogVCxcblx0b2JqQjogVCxcblx0Y29tcGFyZT86IChhOiBULCBiOiBULCBrZXk/OiBzdHJpbmcpID0+IGJvb2xlYW4gfCB2b2lkLFxuXHRjb21wYXJlQ29udGV4dD86IGFueSxcbikge1xuXHRsZXQgY29tcGFyZVJlc3VsdCA9IGNvbXBhcmVcblx0XHQ/IGNvbXBhcmUuY2FsbChjb21wYXJlQ29udGV4dCwgb2JqQSwgb2JqQilcblx0XHQ6IHZvaWQgMFxuXHRpZiAoY29tcGFyZVJlc3VsdCAhPT0gdm9pZCAwKSB7XG5cdFx0cmV0dXJuICEhY29tcGFyZVJlc3VsdFxuXHR9XG5cblx0aWYgKG9iakEgPT09IG9iakIpIHtcblx0XHRyZXR1cm4gdHJ1ZVxuXHR9XG5cblx0aWYgKHR5cGVvZiBvYmpBICE9PSAnb2JqZWN0JyB8fCAhb2JqQSB8fCB0eXBlb2Ygb2JqQiAhPT0gJ29iamVjdCcgfHwgIW9iakIpIHtcblx0XHRyZXR1cm4gZmFsc2Vcblx0fVxuXG5cdGNvbnN0IGtleXNBID0gT2JqZWN0LmtleXMob2JqQSlcblx0Y29uc3Qga2V5c0IgPSBPYmplY3Qua2V5cyhvYmpCKVxuXG5cdGlmIChrZXlzQS5sZW5ndGggIT09IGtleXNCLmxlbmd0aCkge1xuXHRcdHJldHVybiBmYWxzZVxuXHR9XG5cblx0Y29uc3QgYkhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5iaW5kKG9iakIpXG5cblx0Ly8gVGVzdCBmb3IgQSdzIGtleXMgZGlmZmVyZW50IGZyb20gQi5cblx0Zm9yIChsZXQgaWR4ID0gMDsgaWR4IDwga2V5c0EubGVuZ3RoOyBpZHgrKykge1xuXHRcdGNvbnN0IGtleSA9IGtleXNBW2lkeF0gYXMgc3RyaW5nXG5cblx0XHRpZiAoIWJIYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2Vcblx0XHR9XG5cblx0XHRjb25zdCB2YWx1ZUEgPSAob2JqQSBhcyBhbnkpW2tleV1cblx0XHRjb25zdCB2YWx1ZUIgPSAob2JqQiBhcyBhbnkpW2tleV1cblxuXHRcdGNvbXBhcmVSZXN1bHQgPSBjb21wYXJlXG5cdFx0XHQ/IGNvbXBhcmUuY2FsbChjb21wYXJlQ29udGV4dCwgdmFsdWVBLCB2YWx1ZUIsIGtleSlcblx0XHRcdDogdm9pZCAwXG5cblx0XHRpZiAoXG5cdFx0XHRjb21wYXJlUmVzdWx0ID09PSBmYWxzZSB8fFxuXHRcdFx0KGNvbXBhcmVSZXN1bHQgPT09IHZvaWQgMCAmJiB2YWx1ZUEgIT09IHZhbHVlQilcblx0XHQpIHtcblx0XHRcdHJldHVybiBmYWxzZVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0cnVlXG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLFNBQVNBLFlBQVlBLENBQzNCQyxJQUFPLEVBQ1BDLElBQU8sRUFDUEMsT0FBc0QsRUFDdERDLGNBQW9CLEVBQ25CO0VBQ0QsSUFBSUMsYUFBYSxHQUFHRixPQUFPLEdBQ3hCQSxPQUFPLENBQUNHLElBQUksQ0FBQ0YsY0FBYyxFQUFFSCxJQUFJLEVBQUVDLElBQUksQ0FBQyxHQUN4QyxLQUFLLENBQUM7RUFDVCxJQUFJRyxhQUFhLEtBQUssS0FBSyxDQUFDLEVBQUU7SUFDN0IsT0FBTyxDQUFDLENBQUNBLGFBQWE7O0VBR3ZCLElBQUlKLElBQUksS0FBS0MsSUFBSSxFQUFFO0lBQ2xCLE9BQU8sSUFBSTs7RUFHWixJQUFJLE9BQU9ELElBQUksS0FBSyxRQUFRLElBQUksQ0FBQ0EsSUFBSSxJQUFJLE9BQU9DLElBQUksS0FBSyxRQUFRLElBQUksQ0FBQ0EsSUFBSSxFQUFFO0lBQzNFLE9BQU8sS0FBSzs7RUFHYixNQUFNSyxLQUFLLEdBQUdDLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDUixJQUFJLENBQUM7RUFDL0IsTUFBTVMsS0FBSyxHQUFHRixNQUFNLENBQUNDLElBQUksQ0FBQ1AsSUFBSSxDQUFDO0VBRS9CLElBQUlLLEtBQUssQ0FBQ0ksTUFBTSxLQUFLRCxLQUFLLENBQUNDLE1BQU0sRUFBRTtJQUNsQyxPQUFPLEtBQUs7O0VBR2IsTUFBTUMsZUFBZSxHQUFHSixNQUFNLENBQUNLLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNiLElBQUksQ0FBQztFQUVsRTtFQUNBLEtBQUssSUFBSWMsR0FBRyxHQUFHLENBQUMsRUFBRUEsR0FBRyxHQUFHVCxLQUFLLENBQUNJLE1BQU0sRUFBRUssR0FBRyxFQUFFLEVBQUU7SUFDNUMsTUFBTUMsR0FBRyxHQUFHVixLQUFLLENBQUNTLEdBQUcsQ0FBQztJQUV0QixJQUFJLENBQUNKLGVBQWUsQ0FBQ0ssR0FBRyxDQUFDLEVBQUU7TUFDMUIsT0FBTyxLQUFLOztJQUdiLE1BQU1DLE1BQU0sR0FBR2pCLElBQUssQ0FBU2dCLEdBQUcsQ0FBQztJQUNqQyxNQUFNRSxNQUFNLEdBQUdqQixJQUFLLENBQVNlLEdBQUcsQ0FBQztJQUVqQ1osYUFBYSxHQUFHRixPQUFPLEdBQ3BCQSxPQUFPLENBQUNHLElBQUksQ0FBQ0YsY0FBYyxFQUFFYyxNQUFNLEVBQUVDLE1BQU0sRUFBRUYsR0FBRyxDQUFDLEdBQ2pELEtBQUssQ0FBQztJQUVULElBQ0NaLGFBQWEsS0FBSyxLQUFLLElBQ3RCQSxhQUFhLEtBQUssS0FBSyxDQUFDLElBQUlhLE1BQU0sS0FBS0MsTUFBTSxFQUM3QztNQUNELE9BQU8sS0FBSzs7O0VBSWQsT0FBTyxJQUFJIn0=