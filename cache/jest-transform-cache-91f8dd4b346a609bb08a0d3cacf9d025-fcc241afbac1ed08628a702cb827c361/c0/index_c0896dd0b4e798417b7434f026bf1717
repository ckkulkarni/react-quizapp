af8790bbe28c0c761db70e1b5051108e
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.invariant = invariant;
/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */
function invariant(condition, format, ...args) {
  if (isProduction()) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  }
  if (!condition) {
    let error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      let argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }
    error.framesToPop = 1 // we don't care about invariant's own frame
    ;

    throw error;
  }
}
function isProduction() {
  return typeof process !== 'undefined' && process.env['NODE_ENV'] === 'production';
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJpbnZhcmlhbnQiLCJjb25kaXRpb24iLCJmb3JtYXQiLCJhcmdzIiwiaXNQcm9kdWN0aW9uIiwidW5kZWZpbmVkIiwiRXJyb3IiLCJlcnJvciIsImFyZ0luZGV4IiwicmVwbGFjZSIsIm5hbWUiLCJmcmFtZXNUb1BvcCIsInByb2Nlc3MiLCJlbnYiXSwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVc2UgaW52YXJpYW50KCkgdG8gYXNzZXJ0IHN0YXRlIHdoaWNoIHlvdXIgcHJvZ3JhbSBhc3N1bWVzIHRvIGJlIHRydWUuXG4gKlxuICogUHJvdmlkZSBzcHJpbnRmLXN0eWxlIGZvcm1hdCAob25seSAlcyBpcyBzdXBwb3J0ZWQpIGFuZCBhcmd1bWVudHNcbiAqIHRvIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCBicm9rZSBhbmQgd2hhdCB5b3Ugd2VyZVxuICogZXhwZWN0aW5nLlxuICpcbiAqIFRoZSBpbnZhcmlhbnQgbWVzc2FnZSB3aWxsIGJlIHN0cmlwcGVkIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgaW52YXJpYW50XG4gKiB3aWxsIHJlbWFpbiB0byBlbnN1cmUgbG9naWMgZG9lcyBub3QgZGlmZmVyIGluIHByb2R1Y3Rpb24uXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGludmFyaWFudChjb25kaXRpb246IGFueSwgZm9ybWF0OiBzdHJpbmcsIC4uLmFyZ3M6IGFueVtdKSB7XG5cdGlmIChpc1Byb2R1Y3Rpb24oKSkge1xuXHRcdGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuXHRcdFx0dGhyb3cgbmV3IEVycm9yKCdpbnZhcmlhbnQgcmVxdWlyZXMgYW4gZXJyb3IgbWVzc2FnZSBhcmd1bWVudCcpXG5cdFx0fVxuXHR9XG5cblx0aWYgKCFjb25kaXRpb24pIHtcblx0XHRsZXQgZXJyb3Jcblx0XHRpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcblx0XHRcdGVycm9yID0gbmV3IEVycm9yKFxuXHRcdFx0XHQnTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgJyArXG5cdFx0XHRcdFx0J2ZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuJyxcblx0XHRcdClcblx0XHR9IGVsc2Uge1xuXHRcdFx0bGV0IGFyZ0luZGV4ID0gMFxuXHRcdFx0ZXJyb3IgPSBuZXcgRXJyb3IoXG5cdFx0XHRcdGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGFyZ3NbYXJnSW5kZXgrK11cblx0XHRcdFx0fSksXG5cdFx0XHQpXG5cdFx0XHRlcnJvci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nXG5cdFx0fVxuXG5cdFx0OyhlcnJvciBhcyBhbnkpLmZyYW1lc1RvUG9wID0gMSAvLyB3ZSBkb24ndCBjYXJlIGFib3V0IGludmFyaWFudCdzIG93biBmcmFtZVxuXHRcdHRocm93IGVycm9yXG5cdH1cbn1cblxuZnVuY3Rpb24gaXNQcm9kdWN0aW9uKCkge1xuXHRyZXR1cm4gKFxuXHRcdHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiBwcm9jZXNzLmVudlsnTk9ERV9FTlYnXSA9PT0gJ3Byb2R1Y3Rpb24nXG5cdClcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7QUFXTyxTQUFTQSxTQUFTQSxDQUFDQyxTQUFjLEVBQUVDLE1BQWMsRUFBRSxHQUFHQyxJQUFJLEVBQVM7RUFDekUsSUFBSUMsWUFBWSxFQUFFLEVBQUU7SUFDbkIsSUFBSUYsTUFBTSxLQUFLRyxTQUFTLEVBQUU7TUFDekIsTUFBTSxJQUFJQyxLQUFLLENBQUMsOENBQThDLENBQUM7OztFQUlqRSxJQUFJLENBQUNMLFNBQVMsRUFBRTtJQUNmLElBQUlNLEtBQUs7SUFDVCxJQUFJTCxNQUFNLEtBQUtHLFNBQVMsRUFBRTtNQUN6QkUsS0FBSyxHQUFHLElBQUlELEtBQUssQ0FDaEIsb0VBQW9FLEdBQ25FLDZEQUE2RCxDQUM5RDtLQUNELE1BQU07TUFDTixJQUFJRSxRQUFRLEdBQUcsQ0FBQztNQUNoQkQsS0FBSyxHQUFHLElBQUlELEtBQUssQ0FDaEJKLE1BQU0sQ0FBQ08sT0FBTyxRQUFRLFlBQVk7UUFDakMsT0FBT04sSUFBSSxDQUFDSyxRQUFRLEVBQUUsQ0FBQztPQUN2QixDQUFDLENBQ0Y7TUFDREQsS0FBSyxDQUFDRyxJQUFJLEdBQUcscUJBQXFCOztJQUdsQ0gsS0FBTSxDQUFTSSxXQUFXLEdBQUcsQ0FBQyxDQUFDO0lBQUE7O0lBQ2hDLE1BQU1KLEtBQUs7OztBQUliLFNBQVNILFlBQVlBLENBQUEsRUFBRztFQUN2QixPQUNDLE9BQU9RLE9BQU8sS0FBSyxXQUFXLElBQUlBLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLFVBQVUsQ0FBQyxLQUFLLFlBQVkifQ==