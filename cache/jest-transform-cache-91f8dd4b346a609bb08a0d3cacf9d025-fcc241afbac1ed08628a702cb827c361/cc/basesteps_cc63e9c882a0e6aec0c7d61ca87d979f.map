{"version":3,"names":["_react","_interopRequireDefault","require","_jestCucumber","_react2","_Home","_reactRouterDom","_Question","_jsxRuntime","obj","__esModule","default","feature","loadFeature","defineFeature","test","given","when","and","then","alertMock","jest","spyOn","window","mockImplementation","screen","render","jsx","BrowserRouter","children","jsxs","Routes","Route","path","element","expect","toBeTruthy","submitButton","getByRole","name","toBeDisabled","emailInput","getByTestId","querySelector","toBeInTheDocument","fireEvent","change","target","value","nameInput","phoneInput","ageInput","languageSelect","not","toBeChecked","click","scoreSelect","waitFor","toHaveBeenCalledWith","location","pathname","toEqual"],"sources":["base.steps.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { defineFeature, loadFeature } from \"jest-cucumber\";\r\nimport { render, screen, fireEvent, waitFor } from \"@testing-library/react\";\r\nimport \"text-encoding\";\r\nimport Home from \"./../../homeandsubmit/Home\";\r\nimport \"@testing-library/jest-dom/extend-expect\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Question1 from \"../../questions/Question1\";\r\nconst feature = loadFeature(\"src/components/features/base.feature\");\r\ndefineFeature(feature, (test) => {\r\n  test(\"User submits form with valid inputs\", ({ given, when, and, then }) => {\r\n    const alertMock = jest.spyOn(window, \"alert\").mockImplementation(() => {});\r\n    given(\"I am on the Home Screen\", () => {\r\n      const screen = render(\r\n        <Router>\r\n          <Routes>\r\n            <Route path=\"/\" element={<Home />} />\r\n            <Route path=\"/question1\" element={<Question1 />} />\r\n          </Routes>\r\n        </Router>\r\n      );\r\n      expect(screen).toBeTruthy();\r\n      const submitButton = screen.getByRole(\"button\", { name: \"Submit\" });\r\n      expect(submitButton).toBeDisabled();\r\n    });\r\n    when('I enter a valid email \"test@test.com\"', () => {\r\n      const emailInput = screen\r\n        .getByTestId(\"form-mailid\")\r\n        .querySelector(\"input\")!;\r\n      expect(emailInput).toBeInTheDocument();\r\n      fireEvent.change(emailInput, { target: { value: \"test@test.com\" } });\r\n    });\r\n    and('I enter a valid name \"John\"', () => {\r\n      const nameInput = screen.getByTestId(\"form-name\").querySelector(\"input\")!;\r\n      expect(nameInput).toBeInTheDocument();\r\n      fireEvent.change(nameInput, { target: { value: \"John\" } });\r\n    });\r\n    and('I enter a valid phone number \"1234567890\"', () => {\r\n      const phoneInput = screen\r\n        .getByTestId(\"form-phone\")\r\n        .querySelector(\"input\")!;\r\n      expect(phoneInput).toBeInTheDocument();\r\n      fireEvent.change(phoneInput, { target: { value: \"1234567890\" } });\r\n    });\r\n    and('I enter a valid age \"25\"', () => {\r\n      const ageInput = screen.getByTestId(\"form-age\").querySelector(\"input\")!;\r\n      expect(ageInput).toBeInTheDocument();\r\n      fireEvent.change(ageInput, { target: { value: \"25\" } });\r\n    });\r\n    and('I select the language \"ReactJS\"', () => {\r\n      const languageSelect = screen.getByRole(\"radio\", {\r\n        name: \"ReactJS\",\r\n      });\r\n      expect(languageSelect).not.toBeChecked();\r\n      fireEvent.click(languageSelect);\r\n      expect(languageSelect).toBeChecked();\r\n    });\r\n    and(\"I choose to track my score\", () => {\r\n      const scoreSelect = screen.getByRole(\"radio\", {\r\n        name: \"Yes\",\r\n      });\r\n      expect(scoreSelect).not.toBeChecked();\r\n      fireEvent.click(scoreSelect);\r\n      expect(scoreSelect).toBeChecked();\r\n    });\r\n    then(\"I submit the form\", async () => {\r\n      const submitButton = screen.getByRole(\"button\", { name: \"Submit\" });\r\n      expect(submitButton).not.toBeDisabled();\r\n      fireEvent.click(submitButton);\r\n      await waitFor(() => {\r\n        expect(alertMock).toHaveBeenCalledWith(\r\n          \"Details Submitted. Starting Quiz...\"\r\n        );\r\n      });\r\n      await waitFor(() => {\r\n        expect(window.location.pathname).toEqual(\"/question1\");\r\n      });\r\n    });\r\n  });\r\n});\r\n"],"mappings":"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"}