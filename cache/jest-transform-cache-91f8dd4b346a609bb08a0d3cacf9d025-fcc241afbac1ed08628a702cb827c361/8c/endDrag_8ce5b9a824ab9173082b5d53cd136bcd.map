{"version":3,"names":["_invariant","require","_types","createEndDrag","manager","endDrag","monitor","getMonitor","registry","getRegistry","verifyIsDragging","sourceId","getSourceId","source","getSource","unpinSource","type","END_DRAG","invariant","isDragging"],"sources":["../../../src/actions/dragDrop/endDrag.ts"],"sourcesContent":["import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tSentinelAction,\n} from '../../interfaces.js'\nimport { END_DRAG } from './types.js'\n\nexport function createEndDrag(manager: DragDropManager) {\n\treturn function endDrag(): SentinelAction {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyIsDragging(monitor)\n\n\t\tconst sourceId = monitor.getSourceId()\n\t\tif (sourceId != null) {\n\t\t\tconst source = registry.getSource(sourceId, true)\n\t\t\tsource.endDrag(monitor, sourceId)\n\t\t\tregistry.unpinSource()\n\t\t}\n\t\treturn { type: END_DRAG }\n\t}\n}\n\nfunction verifyIsDragging(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call endDrag while not dragging.')\n}\n"],"mappings":";;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AAOA,IAAAC,MAAA,GAAAD,OAAA;AAEO,SAASE,aAAaA,CAACC,OAAwB,EAAE;EACvD,OAAO,SAASC,OAAOA,CAAA,EAAmB;IACzC,MAAMC,OAAO,GAAGF,OAAO,CAACG,UAAU,EAAE;IACpC,MAAMC,QAAQ,GAAGJ,OAAO,CAACK,WAAW,EAAE;IACtCC,gBAAgB,CAACJ,OAAO,CAAC;IAEzB,MAAMK,QAAQ,GAAGL,OAAO,CAACM,WAAW,EAAE;IACtC,IAAID,QAAQ,IAAI,IAAI,EAAE;MACrB,MAAME,MAAM,GAAGL,QAAQ,CAACM,SAAS,CAACH,QAAQ,EAAE,IAAI,CAAC;MACjDE,MAAM,CAACR,OAAO,CAACC,OAAO,EAAEK,QAAQ,CAAC;MACjCH,QAAQ,CAACO,WAAW,EAAE;;IAEvB,OAAO;MAAEC,IAAI,EAAEC;KAAU;GACzB;;AAGF,SAASP,gBAAgBA,CAACJ,OAAwB,EAAE;EACnD,IAAAY,oBAAS,EAACZ,OAAO,CAACa,UAAU,EAAE,EAAE,yCAAyC,CAAC"}