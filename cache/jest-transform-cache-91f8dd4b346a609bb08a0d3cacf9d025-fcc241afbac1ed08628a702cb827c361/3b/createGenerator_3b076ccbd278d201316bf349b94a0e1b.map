{"version":3,"names":["escapeValue","value","JSON","stringify","renderSelector","selectorToken","tokens","body","parts","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","next","done","token","part","type","name","operator","parameters","length","map","join","Error","push","err","return","generate","sequences","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2"],"sources":["../src/createGenerator.js"],"sourcesContent":["// @flow\n\nimport type {\n  CombinatorTokenType,\n  SelectorTokenType\n} from './types';\n\nconst escapeValue = (value: string): string => {\n  return JSON.stringify(value);\n};\n\nconst renderSelector = (selectorToken: SelectorTokenType) => {\n  const tokens = selectorToken.body;\n  const parts = [];\n\n  for (const token of tokens) {\n    let part;\n\n    if (token.type === 'universalSelector') {\n      part = '*';\n    } else if (token.type === 'typeSelector') {\n      part = token.name;\n    } else if (token.type === 'idSelector') {\n      part = '#' + token.name;\n    } else if (token.type === 'classSelector') {\n      part = '.' + token.name;\n    } else if (token.type === 'attributePresenceSelector') {\n      part = '[' + token.name + ']';\n    } else if (token.type === 'attributeValueSelector') {\n      part = '[' + token.name + token.operator + escapeValue(token.value) + ']';\n    } else if (token.type === 'pseudoClassSelector') {\n      part = ':' + token.name;\n\n      if (token.parameters.length) {\n        part += '(' + token.parameters.map(escapeValue).join(', ') + ')';\n      }\n    } else if (token.type === 'pseudoElementSelector') {\n      part = '::' + token.name;\n    } else {\n      throw new Error('Unknown token.');\n    }\n\n    parts.push(part);\n  }\n\n  return parts.join('');\n};\n\nexport default () => {\n  const generate = (tokens: Array<SelectorTokenType | CombinatorTokenType>): string => {\n    /**\n     * @todo Think of a better name. This array contains selectors or combinators.\n     */\n    const sequences: Array<string> = [];\n\n    for (const token of tokens) {\n      if (token.type === 'selector') {\n        sequences.push(renderSelector(token));\n      } else if (token.type === 'descendantCombinator') {\n        sequences.push(' ');\n      } else if (token.type === 'childCombinator') {\n        sequences.push(' > ');\n      } else if (token.type === 'adjacentSiblingCombinator') {\n        sequences.push(' + ');\n      } else if (token.type === 'generalSiblingCombinator') {\n        sequences.push(' ~ ');\n      } else {\n        throw new Error('Unknown token.');\n      }\n    }\n\n    return sequences.join('');\n  };\n\n  return {\n    generate\n  };\n};\n"],"mappings":"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"}