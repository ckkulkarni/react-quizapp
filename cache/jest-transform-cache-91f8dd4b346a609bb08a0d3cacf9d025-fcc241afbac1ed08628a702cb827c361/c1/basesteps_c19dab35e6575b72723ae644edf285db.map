{"version":3,"names":["_react","_interopRequireDefault","require","_jestCucumber","_react2","_Home","obj","__esModule","default","feature","loadFeature","defineFeature","test","given","when","and","then","container","getByLabelText","getByText","render","createElement","email","emailInput","fireEvent","change","target","value","name","nameInput","phone","phoneInput","submitButton","click","expect","screen","toBeInTheDocument"],"sources":["base.steps.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { defineFeature, loadFeature } from \"jest-cucumber\";\r\nimport { render, screen, fireEvent } from \"@testing-library/react\";\r\nimport { act } from \"react-dom/test-utils\";\r\nimport Home from \"./../../homeandsubmit/Home\";\r\nimport { QuizContext } from \"./../../../App\";\r\n\r\nconst feature = loadFeature(\"src/components/features/base.feature\");\r\n\r\ndefineFeature(feature, (test) => {\r\n  test(\"User submits form with valid inputs\", ({ given, when, and, then }) => {\r\n    let container;\r\n    let getByLabelText: any;\r\n    let getByText: any;\r\n\r\n    given(\"I am on the Home screen\", () => {\r\n      container = render(<Home />);\r\n      getByLabelText = container.getByLabelText;\r\n      getByText = container.getByText;\r\n    });\r\n\r\n    when('I enter a valid email \"test@test.com\"', (email) => {\r\n      const emailInput = getByLabelText(\"Enter MailID:\");\r\n      fireEvent.change(emailInput, { target: { value: \"test@test.com\" } });\r\n    });\r\n\r\n    and('I enter a valid name \"John\"', (name) => {\r\n      const nameInput = getByLabelText(\"Enter your name:\");\r\n      fireEvent.change(nameInput, { target: { value: \"John\" } });\r\n    });\r\n\r\n    and('I enter a valid phone number \"1234567890\"', (phone) => {\r\n      const phoneInput = getByLabelText(\"Enter your Phone Number:\");\r\n      fireEvent.change(phoneInput, { target: { value: \"1234567890\" } });\r\n    });\r\n\r\n    and(\"I submit the form\", () => {\r\n      const submitButton = getByText(\"Submit\");\r\n      fireEvent.click(submitButton);\r\n    });\r\n\r\n    then(\"I should see the start quiz button\", () => {\r\n      expect(screen.getByText(\"Start Quiz\")).toBeInTheDocument();\r\n    });\r\n  });\r\n});\r\n"],"mappings":";;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,aAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AAEA,IAAAG,KAAA,GAAAJ,sBAAA,CAAAC,OAAA;AAA8C,SAAAD,uBAAAK,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAG9C,MAAMG,OAAO,GAAG,IAAAC,yBAAW,EAAC,sCAAsC,CAAC;AAEnE,IAAAC,2BAAa,EAACF,OAAO,EAAGG,IAAI,IAAK;EAC/BA,IAAI,CAAC,qCAAqC,EAAE,CAAC;IAAEC,KAAK;IAAEC,IAAI;IAAEC,GAAG;IAAEC;EAAK,CAAC,KAAK;IAC1E,IAAIC,SAAS;IACb,IAAIC,cAAmB;IACvB,IAAIC,SAAc;IAElBN,KAAK,CAAC,yBAAyB,EAAE,MAAM;MACrCI,SAAS,GAAG,IAAAG,cAAM,gBAACpB,MAAA,CAAAQ,OAAA,CAAAa,aAAA,CAAChB,KAAA,CAAAG,OAAI,OAAG,CAAC;MAC5BU,cAAc,GAAGD,SAAS,CAACC,cAAc;MACzCC,SAAS,GAAGF,SAAS,CAACE,SAAS;IACjC,CAAC,CAAC;IAEFL,IAAI,CAAC,uCAAuC,EAAGQ,KAAK,IAAK;MACvD,MAAMC,UAAU,GAAGL,cAAc,CAAC,eAAe,CAAC;MAClDM,iBAAS,CAACC,MAAM,CAACF,UAAU,EAAE;QAAEG,MAAM,EAAE;UAAEC,KAAK,EAAE;QAAgB;MAAE,CAAC,CAAC;IACtE,CAAC,CAAC;IAEFZ,GAAG,CAAC,6BAA6B,EAAGa,IAAI,IAAK;MAC3C,MAAMC,SAAS,GAAGX,cAAc,CAAC,kBAAkB,CAAC;MACpDM,iBAAS,CAACC,MAAM,CAACI,SAAS,EAAE;QAAEH,MAAM,EAAE;UAAEC,KAAK,EAAE;QAAO;MAAE,CAAC,CAAC;IAC5D,CAAC,CAAC;IAEFZ,GAAG,CAAC,2CAA2C,EAAGe,KAAK,IAAK;MAC1D,MAAMC,UAAU,GAAGb,cAAc,CAAC,0BAA0B,CAAC;MAC7DM,iBAAS,CAACC,MAAM,CAACM,UAAU,EAAE;QAAEL,MAAM,EAAE;UAAEC,KAAK,EAAE;QAAa;MAAE,CAAC,CAAC;IACnE,CAAC,CAAC;IAEFZ,GAAG,CAAC,mBAAmB,EAAE,MAAM;MAC7B,MAAMiB,YAAY,GAAGb,SAAS,CAAC,QAAQ,CAAC;MACxCK,iBAAS,CAACS,KAAK,CAACD,YAAY,CAAC;IAC/B,CAAC,CAAC;IAEFhB,IAAI,CAAC,oCAAoC,EAAE,MAAM;MAC/CkB,MAAM,CAACC,cAAM,CAAChB,SAAS,CAAC,YAAY,CAAC,CAAC,CAACiB,iBAAiB,EAAE;IAC5D,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}