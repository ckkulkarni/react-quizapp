{"version":3,"names":["_react","_interopRequireDefault","require","_jestCucumber","_react2","_reactRouterDom","_App","_Question","_SubmitScreen","_reactDnd","_reactDndHtml5Backend","_jsxRuntime","obj","__esModule","default","feature","loadFeature","defineFeature","test","beforeEach","document","body","innerHTML","given","when","then","mockQuizContext","score","setScore","jest","fn","name","setName","age","setAge","email","setMail","phoneNumber","setPhone","selectedLanguage","setSelector","trackScore","setTracker","screen","render","jsx","DndProvider","backend","HTML5Backend","children","QuizContext","Provider","value","BrowserRouter","jsxs","Routes","Route","path","element","expect","toBeTruthy","questionText","getByText","draggableAnswer","dropZone","getAllByText","fireEvent","dragStart","dragEnter","drop","toBeCalled","toBe","submitButton","getAllByRole"],"sources":["question5.steps.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { defineFeature, loadFeature } from \"jest-cucumber\";\r\nimport { render, screen, fireEvent, waitFor } from \"@testing-library/react\";\r\nimport \"text-encoding\";\r\nimport Home from \"./../../homeandsubmit/Home\";\r\nimport \"@testing-library/jest-dom/extend-expect\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport { QuizContext } from \"../../../App\";\r\nimport Question5 from \"./../../questions/Question5\";\r\nimport SubmitScreen from \"../../homeandsubmit/SubmitScreen\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nconst feature = loadFeature(\"src/components/features/question5.feature\");\r\ndefineFeature(feature, (test) => {\r\n  beforeEach(() => {\r\n    document.body.innerHTML = \"\";\r\n  });\r\n  test(\"User answers Question 5 correctly\", ({ given, when, then }) => {\r\n    const mockQuizContext = {\r\n      score: 0,\r\n      setScore: jest.fn(),\r\n      name: \"chandu\",\r\n      setName: jest.fn(),\r\n      age: 0,\r\n      setAge: jest.fn(),\r\n      email: \"chandra@chandu.com\",\r\n      setMail: jest.fn(),\r\n      phoneNumber: \"1234567890\",\r\n      setPhone: jest.fn(),\r\n      selectedLanguage: \"ReactJS\",\r\n      setSelector: jest.fn(),\r\n      trackScore: false,\r\n      setTracker: jest.fn(),\r\n    };\r\n    given(\"I am on the Question 5 screen\", () => {\r\n      const screen = render(\r\n        <DndProvider backend={HTML5Backend}>\r\n          <QuizContext.Provider value={mockQuizContext}>\r\n            <Router>\r\n              <Routes>\r\n                <Route path=\"/\" element={<Question5 />} />\r\n                <Route path=\"/submission\" element={<SubmitScreen />} />\r\n              </Routes>\r\n            </Router>\r\n          </QuizContext.Provider>\r\n        </DndProvider>\r\n      );\r\n      expect(screen).toBeTruthy();\r\n      const questionText = screen.getByText(\"React is used to make _\");\r\n      expect(questionText).toBeTruthy();\r\n    });\r\n    when(\r\n      \"I drag the correct answer to the blank space, and the answer is accepted\",\r\n      async () => {\r\n        const draggableAnswer = screen.getByText(\"UIs\");\r\n        const dropZone = screen.getAllByText(\"Drop here\");\r\n        fireEvent.dragStart(draggableAnswer);\r\n        fireEvent.dragEnter(dropZone[1]);\r\n        fireEvent.drop(dropZone[1]);\r\n        expect(mockQuizContext.setScore).toBeCalled();\r\n      }\r\n    );\r\n\r\n    test(\"User answers Question 5 incorrectly\", ({ given, when, then }) => {\r\n      const mockQuizContext = {\r\n        score: 0,\r\n        setScore: jest.fn(),\r\n        name: \"chandu\",\r\n        setName: jest.fn(),\r\n        age: 0,\r\n        setAge: jest.fn(),\r\n        email: \"chandra@chandu.com\",\r\n        setMail: jest.fn(),\r\n        phoneNumber: \"1234567890\",\r\n        setPhone: jest.fn(),\r\n        selectedLanguage: \"ReactJS\",\r\n        setSelector: jest.fn(),\r\n        trackScore: false,\r\n        setTracker: jest.fn(),\r\n      };\r\n      given(\"I am on the Question 5 screen\", () => {\r\n        const screen = render(\r\n          <DndProvider backend={HTML5Backend}>\r\n            <QuizContext.Provider value={mockQuizContext}>\r\n              <Router>\r\n                <Routes>\r\n                  <Route path=\"/\" element={<Question5 />} />\r\n                  <Route path=\"/submission\" element={<SubmitScreen />} />\r\n                </Routes>\r\n              </Router>\r\n            </QuizContext.Provider>\r\n          </DndProvider>\r\n        );\r\n        expect(screen).toBeTruthy();\r\n        const questionText = screen.getByText(\"React is a _\");\r\n        expect(questionText).toBeTruthy();\r\n      });\r\n      when(\r\n        \"I drag an incorrect answer to the blank space, and the answer is rejected\",\r\n        () => {\r\n          const draggableAnswer = screen.getByText(\"Redux\");\r\n          const dropZone = screen.getAllByText(\"Drop here\");\r\n          fireEvent.dragStart(draggableAnswer);\r\n          fireEvent.dragEnter(dropZone[0]);\r\n          fireEvent.drop(dropZone[0]);\r\n          expect(mockQuizContext.score).toBe(0);\r\n        }\r\n      );\r\n      then('I press the \"Submit\" button, and it greys out', () => {\r\n        const submitButton = screen.getAllByRole(\"button\", { name: \"Submit\" });\r\n        expect(submitButton).toBeTruthy();\r\n      });\r\n\r\n      then(\"it should navigate to that respective question screen\", () => {});\r\n    });\r\n  });\r\n});\r\n"],"mappings":"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"}