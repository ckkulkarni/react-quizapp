{"version":3,"names":["global","factory","exports","module","define","amd","ResizeObserver","MapShim","Map","getIndex","arr","key","result","some","entry","index","class_1","__entries__","Object","defineProperty","prototype","get","length","enumerable","configurable","set","value","push","delete","entries","splice","has","clear","forEach","callback","ctx","_i","_a","call","isBrowser","window","document","global$1","Math","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","trailingTimeout","throttle","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","REFRESH_DELAY","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","changesDetected","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","isReflowProperty","getInstance","instance_","defineConfigurable","target","props","keys","writable","getWindowOf","ownerGlobal","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","arguments","reduce","size","position","getPaddings","paddings","positions_1","getSVGContentRect","bbox","getBBox","width","height","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","horizPad","left","right","vertPad","top","bottom","boxSizing","round","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","documentElement","getContentRect","createReadOnlyRect","x","y","Constr","DOMRectReadOnly","rect","create","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","broadcastRect","ResizeObserverEntry","rectInit","contentRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","_this","observation","map","WeakMap","method","apply"],"sources":["ResizeObserver.js"],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.ResizeObserver = factory());\n}(this, (function () { 'use strict';\n\n    /**\r\n     * A collection of shims that provide minimal functionality of the ES6 collections.\r\n     *\r\n     * These implementations are not meant to be used outside of the ResizeObserver\r\n     * modules as they cover only a limited range of use cases.\r\n     */\r\n    /* eslint-disable require-jsdoc, valid-jsdoc */\r\n    var MapShim = (function () {\r\n        if (typeof Map !== 'undefined') {\r\n            return Map;\r\n        }\r\n        /**\r\n         * Returns index in provided array that matches the specified key.\r\n         *\r\n         * @param {Array<Array>} arr\r\n         * @param {*} key\r\n         * @returns {number}\r\n         */\r\n        function getIndex(arr, key) {\r\n            var result = -1;\r\n            arr.some(function (entry, index) {\r\n                if (entry[0] === key) {\r\n                    result = index;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            return result;\r\n        }\r\n        return /** @class */ (function () {\r\n            function class_1() {\r\n                this.__entries__ = [];\r\n            }\r\n            Object.defineProperty(class_1.prototype, \"size\", {\r\n                /**\r\n                 * @returns {boolean}\r\n                 */\r\n                get: function () {\r\n                    return this.__entries__.length;\r\n                },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            /**\r\n             * @param {*} key\r\n             * @returns {*}\r\n             */\r\n            class_1.prototype.get = function (key) {\r\n                var index = getIndex(this.__entries__, key);\r\n                var entry = this.__entries__[index];\r\n                return entry && entry[1];\r\n            };\r\n            /**\r\n             * @param {*} key\r\n             * @param {*} value\r\n             * @returns {void}\r\n             */\r\n            class_1.prototype.set = function (key, value) {\r\n                var index = getIndex(this.__entries__, key);\r\n                if (~index) {\r\n                    this.__entries__[index][1] = value;\r\n                }\r\n                else {\r\n                    this.__entries__.push([key, value]);\r\n                }\r\n            };\r\n            /**\r\n             * @param {*} key\r\n             * @returns {void}\r\n             */\r\n            class_1.prototype.delete = function (key) {\r\n                var entries = this.__entries__;\r\n                var index = getIndex(entries, key);\r\n                if (~index) {\r\n                    entries.splice(index, 1);\r\n                }\r\n            };\r\n            /**\r\n             * @param {*} key\r\n             * @returns {void}\r\n             */\r\n            class_1.prototype.has = function (key) {\r\n                return !!~getIndex(this.__entries__, key);\r\n            };\r\n            /**\r\n             * @returns {void}\r\n             */\r\n            class_1.prototype.clear = function () {\r\n                this.__entries__.splice(0);\r\n            };\r\n            /**\r\n             * @param {Function} callback\r\n             * @param {*} [ctx=null]\r\n             * @returns {void}\r\n             */\r\n            class_1.prototype.forEach = function (callback, ctx) {\r\n                if (ctx === void 0) { ctx = null; }\r\n                for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                    var entry = _a[_i];\r\n                    callback.call(ctx, entry[1], entry[0]);\r\n                }\r\n            };\r\n            return class_1;\r\n        }());\r\n    })();\n\n    /**\r\n     * Detects whether window and document objects are available in current environment.\r\n     */\r\n    var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n    // Returns global object of a current environment.\r\n    var global$1 = (function () {\r\n        if (typeof global !== 'undefined' && global.Math === Math) {\r\n            return global;\r\n        }\r\n        if (typeof self !== 'undefined' && self.Math === Math) {\r\n            return self;\r\n        }\r\n        if (typeof window !== 'undefined' && window.Math === Math) {\r\n            return window;\r\n        }\r\n        // eslint-disable-next-line no-new-func\r\n        return Function('return this')();\r\n    })();\n\n    /**\r\n     * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n     * first one is not supported.\r\n     *\r\n     * @returns {number} Requests' identifier.\r\n     */\r\n    var requestAnimationFrame$1 = (function () {\r\n        if (typeof requestAnimationFrame === 'function') {\r\n            // It's required to use a bounded function because IE sometimes throws\r\n            // an \"Invalid calling object\" error if rAF is invoked without the global\r\n            // object on the left hand side.\r\n            return requestAnimationFrame.bind(global$1);\r\n        }\r\n        return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n    })();\n\n    // Defines minimum timeout before adding a trailing call.\r\n    var trailingTimeout = 2;\r\n    /**\r\n     * Creates a wrapper function which ensures that provided callback will be\r\n     * invoked only once during the specified delay period.\r\n     *\r\n     * @param {Function} callback - Function to be invoked after the delay period.\r\n     * @param {number} delay - Delay after which to invoke callback.\r\n     * @returns {Function}\r\n     */\r\n    function throttle (callback, delay) {\r\n        var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n        /**\r\n         * Invokes the original callback function and schedules new invocation if\r\n         * the \"proxy\" was called during current request.\r\n         *\r\n         * @returns {void}\r\n         */\r\n        function resolvePending() {\r\n            if (leadingCall) {\r\n                leadingCall = false;\r\n                callback();\r\n            }\r\n            if (trailingCall) {\r\n                proxy();\r\n            }\r\n        }\r\n        /**\r\n         * Callback invoked after the specified delay. It will further postpone\r\n         * invocation of the original function delegating it to the\r\n         * requestAnimationFrame.\r\n         *\r\n         * @returns {void}\r\n         */\r\n        function timeoutCallback() {\r\n            requestAnimationFrame$1(resolvePending);\r\n        }\r\n        /**\r\n         * Schedules invocation of the original function.\r\n         *\r\n         * @returns {void}\r\n         */\r\n        function proxy() {\r\n            var timeStamp = Date.now();\r\n            if (leadingCall) {\r\n                // Reject immediately following calls.\r\n                if (timeStamp - lastCallTime < trailingTimeout) {\r\n                    return;\r\n                }\r\n                // Schedule new call to be in invoked when the pending one is resolved.\r\n                // This is important for \"transitions\" which never actually start\r\n                // immediately so there is a chance that we might miss one if change\r\n                // happens amids the pending invocation.\r\n                trailingCall = true;\r\n            }\r\n            else {\r\n                leadingCall = true;\r\n                trailingCall = false;\r\n                setTimeout(timeoutCallback, delay);\r\n            }\r\n            lastCallTime = timeStamp;\r\n        }\r\n        return proxy;\r\n    }\n\n    // Minimum delay before invoking the update of observers.\r\n    var REFRESH_DELAY = 20;\r\n    // A list of substrings of CSS properties used to find transition events that\r\n    // might affect dimensions of observed elements.\r\n    var transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n    // Check if MutationObserver is available.\r\n    var mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n    /**\r\n     * Singleton controller class which handles updates of ResizeObserver instances.\r\n     */\r\n    var ResizeObserverController = /** @class */ (function () {\r\n        /**\r\n         * Creates a new instance of ResizeObserverController.\r\n         *\r\n         * @private\r\n         */\r\n        function ResizeObserverController() {\r\n            /**\r\n             * Indicates whether DOM listeners have been added.\r\n             *\r\n             * @private {boolean}\r\n             */\r\n            this.connected_ = false;\r\n            /**\r\n             * Tells that controller has subscribed for Mutation Events.\r\n             *\r\n             * @private {boolean}\r\n             */\r\n            this.mutationEventsAdded_ = false;\r\n            /**\r\n             * Keeps reference to the instance of MutationObserver.\r\n             *\r\n             * @private {MutationObserver}\r\n             */\r\n            this.mutationsObserver_ = null;\r\n            /**\r\n             * A list of connected observers.\r\n             *\r\n             * @private {Array<ResizeObserverSPI>}\r\n             */\r\n            this.observers_ = [];\r\n            this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n            this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n        }\r\n        /**\r\n         * Adds observer to observers list.\r\n         *\r\n         * @param {ResizeObserverSPI} observer - Observer to be added.\r\n         * @returns {void}\r\n         */\r\n        ResizeObserverController.prototype.addObserver = function (observer) {\r\n            if (!~this.observers_.indexOf(observer)) {\r\n                this.observers_.push(observer);\r\n            }\r\n            // Add listeners if they haven't been added yet.\r\n            if (!this.connected_) {\r\n                this.connect_();\r\n            }\r\n        };\r\n        /**\r\n         * Removes observer from observers list.\r\n         *\r\n         * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n         * @returns {void}\r\n         */\r\n        ResizeObserverController.prototype.removeObserver = function (observer) {\r\n            var observers = this.observers_;\r\n            var index = observers.indexOf(observer);\r\n            // Remove observer if it's present in registry.\r\n            if (~index) {\r\n                observers.splice(index, 1);\r\n            }\r\n            // Remove listeners if controller has no connected observers.\r\n            if (!observers.length && this.connected_) {\r\n                this.disconnect_();\r\n            }\r\n        };\r\n        /**\r\n         * Invokes the update of observers. It will continue running updates insofar\r\n         * it detects changes.\r\n         *\r\n         * @returns {void}\r\n         */\r\n        ResizeObserverController.prototype.refresh = function () {\r\n            var changesDetected = this.updateObservers_();\r\n            // Continue running updates if changes have been detected as there might\r\n            // be future ones caused by CSS transitions.\r\n            if (changesDetected) {\r\n                this.refresh();\r\n            }\r\n        };\r\n        /**\r\n         * Updates every observer from observers list and notifies them of queued\r\n         * entries.\r\n         *\r\n         * @private\r\n         * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n         *      dimensions of it's elements.\r\n         */\r\n        ResizeObserverController.prototype.updateObservers_ = function () {\r\n            // Collect observers that have active observations.\r\n            var activeObservers = this.observers_.filter(function (observer) {\r\n                return observer.gatherActive(), observer.hasActive();\r\n            });\r\n            // Deliver notifications in a separate cycle in order to avoid any\r\n            // collisions between observers, e.g. when multiple instances of\r\n            // ResizeObserver are tracking the same element and the callback of one\r\n            // of them changes content dimensions of the observed target. Sometimes\r\n            // this may result in notifications being blocked for the rest of observers.\r\n            activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n            return activeObservers.length > 0;\r\n        };\r\n        /**\r\n         * Initializes DOM listeners.\r\n         *\r\n         * @private\r\n         * @returns {void}\r\n         */\r\n        ResizeObserverController.prototype.connect_ = function () {\r\n            // Do nothing if running in a non-browser environment or if listeners\r\n            // have been already added.\r\n            if (!isBrowser || this.connected_) {\r\n                return;\r\n            }\r\n            // Subscription to the \"Transitionend\" event is used as a workaround for\r\n            // delayed transitions. This way it's possible to capture at least the\r\n            // final state of an element.\r\n            document.addEventListener('transitionend', this.onTransitionEnd_);\r\n            window.addEventListener('resize', this.refresh);\r\n            if (mutationObserverSupported) {\r\n                this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n                this.mutationsObserver_.observe(document, {\r\n                    attributes: true,\r\n                    childList: true,\r\n                    characterData: true,\r\n                    subtree: true\r\n                });\r\n            }\r\n            else {\r\n                document.addEventListener('DOMSubtreeModified', this.refresh);\r\n                this.mutationEventsAdded_ = true;\r\n            }\r\n            this.connected_ = true;\r\n        };\r\n        /**\r\n         * Removes DOM listeners.\r\n         *\r\n         * @private\r\n         * @returns {void}\r\n         */\r\n        ResizeObserverController.prototype.disconnect_ = function () {\r\n            // Do nothing if running in a non-browser environment or if listeners\r\n            // have been already removed.\r\n            if (!isBrowser || !this.connected_) {\r\n                return;\r\n            }\r\n            document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n            window.removeEventListener('resize', this.refresh);\r\n            if (this.mutationsObserver_) {\r\n                this.mutationsObserver_.disconnect();\r\n            }\r\n            if (this.mutationEventsAdded_) {\r\n                document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n            }\r\n            this.mutationsObserver_ = null;\r\n            this.mutationEventsAdded_ = false;\r\n            this.connected_ = false;\r\n        };\r\n        /**\r\n         * \"Transitionend\" event handler.\r\n         *\r\n         * @private\r\n         * @param {TransitionEvent} event\r\n         * @returns {void}\r\n         */\r\n        ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n            var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n            // Detect whether transition may affect dimensions of an element.\r\n            var isReflowProperty = transitionKeys.some(function (key) {\r\n                return !!~propertyName.indexOf(key);\r\n            });\r\n            if (isReflowProperty) {\r\n                this.refresh();\r\n            }\r\n        };\r\n        /**\r\n         * Returns instance of the ResizeObserverController.\r\n         *\r\n         * @returns {ResizeObserverController}\r\n         */\r\n        ResizeObserverController.getInstance = function () {\r\n            if (!this.instance_) {\r\n                this.instance_ = new ResizeObserverController();\r\n            }\r\n            return this.instance_;\r\n        };\r\n        /**\r\n         * Holds reference to the controller's instance.\r\n         *\r\n         * @private {ResizeObserverController}\r\n         */\r\n        ResizeObserverController.instance_ = null;\r\n        return ResizeObserverController;\r\n    }());\n\n    /**\r\n     * Defines non-writable/enumerable properties of the provided target object.\r\n     *\r\n     * @param {Object} target - Object for which to define properties.\r\n     * @param {Object} props - Properties to be defined.\r\n     * @returns {Object} Target object.\r\n     */\r\n    var defineConfigurable = (function (target, props) {\r\n        for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n            var key = _a[_i];\r\n            Object.defineProperty(target, key, {\r\n                value: props[key],\r\n                enumerable: false,\r\n                writable: false,\r\n                configurable: true\r\n            });\r\n        }\r\n        return target;\r\n    });\n\n    /**\r\n     * Returns the global object associated with provided element.\r\n     *\r\n     * @param {Object} target\r\n     * @returns {Object}\r\n     */\r\n    var getWindowOf = (function (target) {\r\n        // Assume that the element is an instance of Node, which means that it\r\n        // has the \"ownerDocument\" property from which we can retrieve a\r\n        // corresponding global object.\r\n        var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n        // Return the local global object if it's not possible extract one from\r\n        // provided element.\r\n        return ownerGlobal || global$1;\r\n    });\n\n    // Placeholder of an empty content rectangle.\r\n    var emptyRect = createRectInit(0, 0, 0, 0);\r\n    /**\r\n     * Converts provided string to a number.\r\n     *\r\n     * @param {number|string} value\r\n     * @returns {number}\r\n     */\r\n    function toFloat(value) {\r\n        return parseFloat(value) || 0;\r\n    }\r\n    /**\r\n     * Extracts borders size from provided styles.\r\n     *\r\n     * @param {CSSStyleDeclaration} styles\r\n     * @param {...string} positions - Borders positions (top, right, ...)\r\n     * @returns {number}\r\n     */\r\n    function getBordersSize(styles) {\r\n        var positions = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            positions[_i - 1] = arguments[_i];\r\n        }\r\n        return positions.reduce(function (size, position) {\r\n            var value = styles['border-' + position + '-width'];\r\n            return size + toFloat(value);\r\n        }, 0);\r\n    }\r\n    /**\r\n     * Extracts paddings sizes from provided styles.\r\n     *\r\n     * @param {CSSStyleDeclaration} styles\r\n     * @returns {Object} Paddings box.\r\n     */\r\n    function getPaddings(styles) {\r\n        var positions = ['top', 'right', 'bottom', 'left'];\r\n        var paddings = {};\r\n        for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n            var position = positions_1[_i];\r\n            var value = styles['padding-' + position];\r\n            paddings[position] = toFloat(value);\r\n        }\r\n        return paddings;\r\n    }\r\n    /**\r\n     * Calculates content rectangle of provided SVG element.\r\n     *\r\n     * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n     *      to be calculated.\r\n     * @returns {DOMRectInit}\r\n     */\r\n    function getSVGContentRect(target) {\r\n        var bbox = target.getBBox();\r\n        return createRectInit(0, 0, bbox.width, bbox.height);\r\n    }\r\n    /**\r\n     * Calculates content rectangle of provided HTMLElement.\r\n     *\r\n     * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n     * @returns {DOMRectInit}\r\n     */\r\n    function getHTMLElementContentRect(target) {\r\n        // Client width & height properties can't be\r\n        // used exclusively as they provide rounded values.\r\n        var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n        // By this condition we can catch all non-replaced inline, hidden and\r\n        // detached elements. Though elements with width & height properties less\r\n        // than 0.5 will be discarded as well.\r\n        //\r\n        // Without it we would need to implement separate methods for each of\r\n        // those cases and it's not possible to perform a precise and performance\r\n        // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n        // gives wrong results for elements with width & height less than 0.5.\r\n        if (!clientWidth && !clientHeight) {\r\n            return emptyRect;\r\n        }\r\n        var styles = getWindowOf(target).getComputedStyle(target);\r\n        var paddings = getPaddings(styles);\r\n        var horizPad = paddings.left + paddings.right;\r\n        var vertPad = paddings.top + paddings.bottom;\r\n        // Computed styles of width & height are being used because they are the\r\n        // only dimensions available to JS that contain non-rounded values. It could\r\n        // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n        // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n        var width = toFloat(styles.width), height = toFloat(styles.height);\r\n        // Width & height include paddings and borders when the 'border-box' box\r\n        // model is applied (except for IE).\r\n        if (styles.boxSizing === 'border-box') {\r\n            // Following conditions are required to handle Internet Explorer which\r\n            // doesn't include paddings and borders to computed CSS dimensions.\r\n            //\r\n            // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n            // properties then it's either IE, and thus we don't need to subtract\r\n            // anything, or an element merely doesn't have paddings/borders styles.\r\n            if (Math.round(width + horizPad) !== clientWidth) {\r\n                width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n            }\r\n            if (Math.round(height + vertPad) !== clientHeight) {\r\n                height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n            }\r\n        }\r\n        // Following steps can't be applied to the document's root element as its\r\n        // client[Width/Height] properties represent viewport area of the window.\r\n        // Besides, it's as well not necessary as the <html> itself neither has\r\n        // rendered scroll bars nor it can be clipped.\r\n        if (!isDocumentElement(target)) {\r\n            // In some browsers (only in Firefox, actually) CSS width & height\r\n            // include scroll bars size which can be removed at this step as scroll\r\n            // bars are the only difference between rounded dimensions + paddings\r\n            // and \"client\" properties, though that is not always true in Chrome.\r\n            var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n            var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n            // Chrome has a rather weird rounding of \"client\" properties.\r\n            // E.g. for an element with content width of 314.2px it sometimes gives\r\n            // the client width of 315px and for the width of 314.7px it may give\r\n            // 314px. And it doesn't happen all the time. So just ignore this delta\r\n            // as a non-relevant.\r\n            if (Math.abs(vertScrollbar) !== 1) {\r\n                width -= vertScrollbar;\r\n            }\r\n            if (Math.abs(horizScrollbar) !== 1) {\r\n                height -= horizScrollbar;\r\n            }\r\n        }\r\n        return createRectInit(paddings.left, paddings.top, width, height);\r\n    }\r\n    /**\r\n     * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n     *\r\n     * @param {Element} target - Element to be checked.\r\n     * @returns {boolean}\r\n     */\r\n    var isSVGGraphicsElement = (function () {\r\n        // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n        // interface.\r\n        if (typeof SVGGraphicsElement !== 'undefined') {\r\n            return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n        }\r\n        // If it's so, then check that element is at least an instance of the\r\n        // SVGElement and that it has the \"getBBox\" method.\r\n        // eslint-disable-next-line no-extra-parens\r\n        return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n            typeof target.getBBox === 'function'); };\r\n    })();\r\n    /**\r\n     * Checks whether provided element is a document element (<html>).\r\n     *\r\n     * @param {Element} target - Element to be checked.\r\n     * @returns {boolean}\r\n     */\r\n    function isDocumentElement(target) {\r\n        return target === getWindowOf(target).document.documentElement;\r\n    }\r\n    /**\r\n     * Calculates an appropriate content rectangle for provided html or svg element.\r\n     *\r\n     * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n     * @returns {DOMRectInit}\r\n     */\r\n    function getContentRect(target) {\r\n        if (!isBrowser) {\r\n            return emptyRect;\r\n        }\r\n        if (isSVGGraphicsElement(target)) {\r\n            return getSVGContentRect(target);\r\n        }\r\n        return getHTMLElementContentRect(target);\r\n    }\r\n    /**\r\n     * Creates rectangle with an interface of the DOMRectReadOnly.\r\n     * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n     *\r\n     * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n     * @returns {DOMRectReadOnly}\r\n     */\r\n    function createReadOnlyRect(_a) {\r\n        var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n        // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n        var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n        var rect = Object.create(Constr.prototype);\r\n        // Rectangle's properties are not writable and non-enumerable.\r\n        defineConfigurable(rect, {\r\n            x: x, y: y, width: width, height: height,\r\n            top: y,\r\n            right: x + width,\r\n            bottom: height + y,\r\n            left: x\r\n        });\r\n        return rect;\r\n    }\r\n    /**\r\n     * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n     * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n     *\r\n     * @param {number} x - X coordinate.\r\n     * @param {number} y - Y coordinate.\r\n     * @param {number} width - Rectangle's width.\r\n     * @param {number} height - Rectangle's height.\r\n     * @returns {DOMRectInit}\r\n     */\r\n    function createRectInit(x, y, width, height) {\r\n        return { x: x, y: y, width: width, height: height };\r\n    }\n\n    /**\r\n     * Class that is responsible for computations of the content rectangle of\r\n     * provided DOM element and for keeping track of it's changes.\r\n     */\r\n    var ResizeObservation = /** @class */ (function () {\r\n        /**\r\n         * Creates an instance of ResizeObservation.\r\n         *\r\n         * @param {Element} target - Element to be observed.\r\n         */\r\n        function ResizeObservation(target) {\r\n            /**\r\n             * Broadcasted width of content rectangle.\r\n             *\r\n             * @type {number}\r\n             */\r\n            this.broadcastWidth = 0;\r\n            /**\r\n             * Broadcasted height of content rectangle.\r\n             *\r\n             * @type {number}\r\n             */\r\n            this.broadcastHeight = 0;\r\n            /**\r\n             * Reference to the last observed content rectangle.\r\n             *\r\n             * @private {DOMRectInit}\r\n             */\r\n            this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n            this.target = target;\r\n        }\r\n        /**\r\n         * Updates content rectangle and tells whether it's width or height properties\r\n         * have changed since the last broadcast.\r\n         *\r\n         * @returns {boolean}\r\n         */\r\n        ResizeObservation.prototype.isActive = function () {\r\n            var rect = getContentRect(this.target);\r\n            this.contentRect_ = rect;\r\n            return (rect.width !== this.broadcastWidth ||\r\n                rect.height !== this.broadcastHeight);\r\n        };\r\n        /**\r\n         * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n         * from the corresponding properties of the last observed content rectangle.\r\n         *\r\n         * @returns {DOMRectInit} Last observed content rectangle.\r\n         */\r\n        ResizeObservation.prototype.broadcastRect = function () {\r\n            var rect = this.contentRect_;\r\n            this.broadcastWidth = rect.width;\r\n            this.broadcastHeight = rect.height;\r\n            return rect;\r\n        };\r\n        return ResizeObservation;\r\n    }());\n\n    var ResizeObserverEntry = /** @class */ (function () {\r\n        /**\r\n         * Creates an instance of ResizeObserverEntry.\r\n         *\r\n         * @param {Element} target - Element that is being observed.\r\n         * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n         */\r\n        function ResizeObserverEntry(target, rectInit) {\r\n            var contentRect = createReadOnlyRect(rectInit);\r\n            // According to the specification following properties are not writable\r\n            // and are also not enumerable in the native implementation.\r\n            //\r\n            // Property accessors are not being used as they'd require to define a\r\n            // private WeakMap storage which may cause memory leaks in browsers that\r\n            // don't support this type of collections.\r\n            defineConfigurable(this, { target: target, contentRect: contentRect });\r\n        }\r\n        return ResizeObserverEntry;\r\n    }());\n\n    var ResizeObserverSPI = /** @class */ (function () {\r\n        /**\r\n         * Creates a new instance of ResizeObserver.\r\n         *\r\n         * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n         *      when one of the observed elements changes it's content dimensions.\r\n         * @param {ResizeObserverController} controller - Controller instance which\r\n         *      is responsible for the updates of observer.\r\n         * @param {ResizeObserver} callbackCtx - Reference to the public\r\n         *      ResizeObserver instance which will be passed to callback function.\r\n         */\r\n        function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n            /**\r\n             * Collection of resize observations that have detected changes in dimensions\r\n             * of elements.\r\n             *\r\n             * @private {Array<ResizeObservation>}\r\n             */\r\n            this.activeObservations_ = [];\r\n            /**\r\n             * Registry of the ResizeObservation instances.\r\n             *\r\n             * @private {Map<Element, ResizeObservation>}\r\n             */\r\n            this.observations_ = new MapShim();\r\n            if (typeof callback !== 'function') {\r\n                throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n            }\r\n            this.callback_ = callback;\r\n            this.controller_ = controller;\r\n            this.callbackCtx_ = callbackCtx;\r\n        }\r\n        /**\r\n         * Starts observing provided element.\r\n         *\r\n         * @param {Element} target - Element to be observed.\r\n         * @returns {void}\r\n         */\r\n        ResizeObserverSPI.prototype.observe = function (target) {\r\n            if (!arguments.length) {\r\n                throw new TypeError('1 argument required, but only 0 present.');\r\n            }\r\n            // Do nothing if current environment doesn't have the Element interface.\r\n            if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n                return;\r\n            }\r\n            if (!(target instanceof getWindowOf(target).Element)) {\r\n                throw new TypeError('parameter 1 is not of type \"Element\".');\r\n            }\r\n            var observations = this.observations_;\r\n            // Do nothing if element is already being observed.\r\n            if (observations.has(target)) {\r\n                return;\r\n            }\r\n            observations.set(target, new ResizeObservation(target));\r\n            this.controller_.addObserver(this);\r\n            // Force the update of observations.\r\n            this.controller_.refresh();\r\n        };\r\n        /**\r\n         * Stops observing provided element.\r\n         *\r\n         * @param {Element} target - Element to stop observing.\r\n         * @returns {void}\r\n         */\r\n        ResizeObserverSPI.prototype.unobserve = function (target) {\r\n            if (!arguments.length) {\r\n                throw new TypeError('1 argument required, but only 0 present.');\r\n            }\r\n            // Do nothing if current environment doesn't have the Element interface.\r\n            if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n                return;\r\n            }\r\n            if (!(target instanceof getWindowOf(target).Element)) {\r\n                throw new TypeError('parameter 1 is not of type \"Element\".');\r\n            }\r\n            var observations = this.observations_;\r\n            // Do nothing if element is not being observed.\r\n            if (!observations.has(target)) {\r\n                return;\r\n            }\r\n            observations.delete(target);\r\n            if (!observations.size) {\r\n                this.controller_.removeObserver(this);\r\n            }\r\n        };\r\n        /**\r\n         * Stops observing all elements.\r\n         *\r\n         * @returns {void}\r\n         */\r\n        ResizeObserverSPI.prototype.disconnect = function () {\r\n            this.clearActive();\r\n            this.observations_.clear();\r\n            this.controller_.removeObserver(this);\r\n        };\r\n        /**\r\n         * Collects observation instances the associated element of which has changed\r\n         * it's content rectangle.\r\n         *\r\n         * @returns {void}\r\n         */\r\n        ResizeObserverSPI.prototype.gatherActive = function () {\r\n            var _this = this;\r\n            this.clearActive();\r\n            this.observations_.forEach(function (observation) {\r\n                if (observation.isActive()) {\r\n                    _this.activeObservations_.push(observation);\r\n                }\r\n            });\r\n        };\r\n        /**\r\n         * Invokes initial callback function with a list of ResizeObserverEntry\r\n         * instances collected from active resize observations.\r\n         *\r\n         * @returns {void}\r\n         */\r\n        ResizeObserverSPI.prototype.broadcastActive = function () {\r\n            // Do nothing if observer doesn't have active observations.\r\n            if (!this.hasActive()) {\r\n                return;\r\n            }\r\n            var ctx = this.callbackCtx_;\r\n            // Create ResizeObserverEntry instance for every active observation.\r\n            var entries = this.activeObservations_.map(function (observation) {\r\n                return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n            });\r\n            this.callback_.call(ctx, entries, ctx);\r\n            this.clearActive();\r\n        };\r\n        /**\r\n         * Clears the collection of active observations.\r\n         *\r\n         * @returns {void}\r\n         */\r\n        ResizeObserverSPI.prototype.clearActive = function () {\r\n            this.activeObservations_.splice(0);\r\n        };\r\n        /**\r\n         * Tells whether observer has active observations.\r\n         *\r\n         * @returns {boolean}\r\n         */\r\n        ResizeObserverSPI.prototype.hasActive = function () {\r\n            return this.activeObservations_.length > 0;\r\n        };\r\n        return ResizeObserverSPI;\r\n    }());\n\n    // Registry of internal observers. If WeakMap is not available use current shim\r\n    // for the Map collection as it has all required methods and because WeakMap\r\n    // can't be fully polyfilled anyway.\r\n    var observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n    /**\r\n     * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n     * exposing only those methods and properties that are defined in the spec.\r\n     */\r\n    var ResizeObserver = /** @class */ (function () {\r\n        /**\r\n         * Creates a new instance of ResizeObserver.\r\n         *\r\n         * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n         *      dimensions of the observed elements change.\r\n         */\r\n        function ResizeObserver(callback) {\r\n            if (!(this instanceof ResizeObserver)) {\r\n                throw new TypeError('Cannot call a class as a function.');\r\n            }\r\n            if (!arguments.length) {\r\n                throw new TypeError('1 argument required, but only 0 present.');\r\n            }\r\n            var controller = ResizeObserverController.getInstance();\r\n            var observer = new ResizeObserverSPI(callback, controller, this);\r\n            observers.set(this, observer);\r\n        }\r\n        return ResizeObserver;\r\n    }());\r\n    // Expose public methods of ResizeObserver.\r\n    [\r\n        'observe',\r\n        'unobserve',\r\n        'disconnect'\r\n    ].forEach(function (method) {\r\n        ResizeObserver.prototype[method] = function () {\r\n            var _a;\r\n            return (_a = observers.get(this))[method].apply(_a, arguments);\r\n        };\r\n    });\n\n    var index = (function () {\r\n        // Export existing implementation if available.\r\n        if (typeof global$1.ResizeObserver !== 'undefined') {\r\n            return global$1.ResizeObserver;\r\n        }\r\n        return ResizeObserver;\r\n    })();\n\n    return index;\n\n})));\n"],"mappings":"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"}