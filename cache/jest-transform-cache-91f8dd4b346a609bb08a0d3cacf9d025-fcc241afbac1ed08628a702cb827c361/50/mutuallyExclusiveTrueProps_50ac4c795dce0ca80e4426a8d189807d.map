{"version":3,"names":["_propTypes","require","_wrapValidator","_interopRequireDefault","mutuallyExclusiveTrue","_len","arguments","length","exclusiveProps","Array","_key","TypeError","every","x","propsList","join","validator","mutuallyExclusiveTrueProps","props","propName","componentName","countProps","count","prop","exclusivePropCount","reduce","Error","concat","_len2","rest","_key2","bool","apply","isRequired","mutuallyExclusiveTruePropsRequired","_len3","_key3"],"sources":["../src/mutuallyExclusiveTrueProps.js"],"sourcesContent":["import { bool } from 'prop-types';\nimport wrapValidator from './helpers/wrapValidator';\n\nexport default function mutuallyExclusiveTrue(...exclusiveProps) {\n  if (exclusiveProps.length < 1) {\n    throw new TypeError('at least one prop that is mutually exclusive is required');\n  }\n  if (!exclusiveProps.every((x) => typeof x === 'string')) {\n    throw new TypeError('all exclusive true props must be strings');\n  }\n\n  const propsList = exclusiveProps.join(', or ');\n\n  const validator = function mutuallyExclusiveTrueProps(props, propName, componentName, ...rest) {\n    const countProps = (count, prop) => (count + (props[prop] ? 1 : 0));\n\n    const exclusivePropCount = exclusiveProps.reduce(countProps, 0);\n    if (exclusivePropCount > 1) {\n      return new Error(`A ${componentName} cannot have more than one of these boolean props be true: ${propsList}`);\n    }\n    return bool(props, propName, componentName, ...rest);\n  };\n\n  validator.isRequired = function mutuallyExclusiveTruePropsRequired(\n    props,\n    propName,\n    componentName,\n    ...rest\n  ) {\n    const countProps = (count, prop) => (count + (props[prop] ? 1 : 0));\n\n    const exclusivePropCount = exclusiveProps.reduce(countProps, 0);\n    if (exclusivePropCount > 1) {\n      return new Error(`A ${componentName} cannot have more than one of these boolean props be true: ${propsList}`);\n    }\n    return bool.isRequired(props, propName, componentName, ...rest);\n  };\n\n  return wrapValidator(validator, `mutuallyExclusiveTrueProps: ${propsList}`, exclusiveProps);\n}\n"],"mappings":"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"}