65783ba8a8e184b696d46b4fa5de37f0
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.clear = clear;
var _utils = require("./utils");
var _type = require("./type");
function clear(element) {
  var _element$selectionSta, _element$selectionEnd;
  if (!(0, _utils.isElementType)(element, ['input', 'textarea'])) {
    // TODO: support contenteditable
    throw new Error('clear currently only supports input and textarea elements.');
  }
  if ((0, _utils.isDisabled)(element)) {
    return;
  } // TODO: track the selection range ourselves so we don't have to do this input "type" trickery
  // just like cypress does: https://github.com/cypress-io/cypress/blob/8d7f1a0bedc3c45a2ebf1ff50324b34129fdc683/packages/driver/src/dom/selection.ts#L16-L37

  const elementType = element.type;
  if (elementType !== 'textarea') {
    // setSelectionRange is not supported on certain types of inputs, e.g. "number" or "email"
    ;
    element.type = 'text';
  }
  (0, _type.type)(element, '{selectall}{del}', {
    delay: 0,
    initialSelectionStart: (_element$selectionSta = element.selectionStart) != null ? _element$selectionSta : /* istanbul ignore next */
    undefined,
    initialSelectionEnd: (_element$selectionEnd = element.selectionEnd) != null ? _element$selectionEnd : /* istanbul ignore next */
    undefined
  });
  if (elementType !== 'textarea') {
    ;
    element.type = elementType;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNsZWFyIiwiX3V0aWxzIiwicmVxdWlyZSIsIl90eXBlIiwiZWxlbWVudCIsIl9lbGVtZW50JHNlbGVjdGlvblN0YSIsIl9lbGVtZW50JHNlbGVjdGlvbkVuZCIsImlzRWxlbWVudFR5cGUiLCJFcnJvciIsImlzRGlzYWJsZWQiLCJlbGVtZW50VHlwZSIsInR5cGUiLCJkZWxheSIsImluaXRpYWxTZWxlY3Rpb25TdGFydCIsInNlbGVjdGlvblN0YXJ0IiwidW5kZWZpbmVkIiwiaW5pdGlhbFNlbGVjdGlvbkVuZCIsInNlbGVjdGlvbkVuZCJdLCJzb3VyY2VzIjpbImNsZWFyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5jbGVhciA9IGNsZWFyO1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG5cbnZhciBfdHlwZSA9IHJlcXVpcmUoXCIuL3R5cGVcIik7XG5cbmZ1bmN0aW9uIGNsZWFyKGVsZW1lbnQpIHtcbiAgdmFyIF9lbGVtZW50JHNlbGVjdGlvblN0YSwgX2VsZW1lbnQkc2VsZWN0aW9uRW5kO1xuXG4gIGlmICghKDAsIF91dGlscy5pc0VsZW1lbnRUeXBlKShlbGVtZW50LCBbJ2lucHV0JywgJ3RleHRhcmVhJ10pKSB7XG4gICAgLy8gVE9ETzogc3VwcG9ydCBjb250ZW50ZWRpdGFibGVcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2NsZWFyIGN1cnJlbnRseSBvbmx5IHN1cHBvcnRzIGlucHV0IGFuZCB0ZXh0YXJlYSBlbGVtZW50cy4nKTtcbiAgfVxuXG4gIGlmICgoMCwgX3V0aWxzLmlzRGlzYWJsZWQpKGVsZW1lbnQpKSB7XG4gICAgcmV0dXJuO1xuICB9IC8vIFRPRE86IHRyYWNrIHRoZSBzZWxlY3Rpb24gcmFuZ2Ugb3Vyc2VsdmVzIHNvIHdlIGRvbid0IGhhdmUgdG8gZG8gdGhpcyBpbnB1dCBcInR5cGVcIiB0cmlja2VyeVxuICAvLyBqdXN0IGxpa2UgY3lwcmVzcyBkb2VzOiBodHRwczovL2dpdGh1Yi5jb20vY3lwcmVzcy1pby9jeXByZXNzL2Jsb2IvOGQ3ZjFhMGJlZGMzYzQ1YTJlYmYxZmY1MDMyNGIzNDEyOWZkYzY4My9wYWNrYWdlcy9kcml2ZXIvc3JjL2RvbS9zZWxlY3Rpb24udHMjTDE2LUwzN1xuXG5cbiAgY29uc3QgZWxlbWVudFR5cGUgPSBlbGVtZW50LnR5cGU7XG5cbiAgaWYgKGVsZW1lbnRUeXBlICE9PSAndGV4dGFyZWEnKSB7XG4gICAgLy8gc2V0U2VsZWN0aW9uUmFuZ2UgaXMgbm90IHN1cHBvcnRlZCBvbiBjZXJ0YWluIHR5cGVzIG9mIGlucHV0cywgZS5nLiBcIm51bWJlclwiIG9yIFwiZW1haWxcIlxuICAgIDtcbiAgICBlbGVtZW50LnR5cGUgPSAndGV4dCc7XG4gIH1cblxuICAoMCwgX3R5cGUudHlwZSkoZWxlbWVudCwgJ3tzZWxlY3RhbGx9e2RlbH0nLCB7XG4gICAgZGVsYXk6IDAsXG4gICAgaW5pdGlhbFNlbGVjdGlvblN0YXJ0OiAoX2VsZW1lbnQkc2VsZWN0aW9uU3RhID0gZWxlbWVudC5zZWxlY3Rpb25TdGFydCkgIT0gbnVsbCA/IF9lbGVtZW50JHNlbGVjdGlvblN0YSA6XG4gICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICB1bmRlZmluZWQsXG4gICAgaW5pdGlhbFNlbGVjdGlvbkVuZDogKF9lbGVtZW50JHNlbGVjdGlvbkVuZCA9IGVsZW1lbnQuc2VsZWN0aW9uRW5kKSAhPSBudWxsID8gX2VsZW1lbnQkc2VsZWN0aW9uRW5kIDpcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICAgIHVuZGVmaW5lZFxuICB9KTtcblxuICBpZiAoZWxlbWVudFR5cGUgIT09ICd0ZXh0YXJlYScpIHtcbiAgICA7XG4gICAgZWxlbWVudC50eXBlID0gZWxlbWVudFR5cGU7XG4gIH1cbn0iXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7O0FBRVpBLE1BQU0sQ0FBQ0MsY0FBYyxDQUFDQyxPQUFPLEVBQUUsWUFBWSxFQUFFO0VBQzNDQyxLQUFLLEVBQUU7QUFDVCxDQUFDLENBQUM7QUFDRkQsT0FBTyxDQUFDRSxLQUFLLEdBQUdBLEtBQUs7QUFFckIsSUFBSUMsTUFBTSxHQUFHQyxPQUFPLENBQUMsU0FBUyxDQUFDO0FBRS9CLElBQUlDLEtBQUssR0FBR0QsT0FBTyxDQUFDLFFBQVEsQ0FBQztBQUU3QixTQUFTRixLQUFLQSxDQUFDSSxPQUFPLEVBQUU7RUFDdEIsSUFBSUMscUJBQXFCLEVBQUVDLHFCQUFxQjtFQUVoRCxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUVMLE1BQU0sQ0FBQ00sYUFBYSxFQUFFSCxPQUFPLEVBQUUsQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDLENBQUMsRUFBRTtJQUM5RDtJQUNBLE1BQU0sSUFBSUksS0FBSyxDQUFDLDREQUE0RCxDQUFDO0VBQy9FO0VBRUEsSUFBSSxDQUFDLENBQUMsRUFBRVAsTUFBTSxDQUFDUSxVQUFVLEVBQUVMLE9BQU8sQ0FBQyxFQUFFO0lBQ25DO0VBQ0YsQ0FBQyxDQUFDO0VBQ0Y7O0VBR0EsTUFBTU0sV0FBVyxHQUFHTixPQUFPLENBQUNPLElBQUk7RUFFaEMsSUFBSUQsV0FBVyxLQUFLLFVBQVUsRUFBRTtJQUM5QjtJQUNBO0lBQ0FOLE9BQU8sQ0FBQ08sSUFBSSxHQUFHLE1BQU07RUFDdkI7RUFFQSxDQUFDLENBQUMsRUFBRVIsS0FBSyxDQUFDUSxJQUFJLEVBQUVQLE9BQU8sRUFBRSxrQkFBa0IsRUFBRTtJQUMzQ1EsS0FBSyxFQUFFLENBQUM7SUFDUkMscUJBQXFCLEVBQUUsQ0FBQ1IscUJBQXFCLEdBQUdELE9BQU8sQ0FBQ1UsY0FBYyxLQUFLLElBQUksR0FBR1QscUJBQXFCLEdBQ3ZHO0lBQ0FVLFNBQVM7SUFDVEMsbUJBQW1CLEVBQUUsQ0FBQ1YscUJBQXFCLEdBQUdGLE9BQU8sQ0FBQ2EsWUFBWSxLQUFLLElBQUksR0FBR1gscUJBQXFCLEdBQ25HO0lBQ0FTO0VBQ0YsQ0FBQyxDQUFDO0VBRUYsSUFBSUwsV0FBVyxLQUFLLFVBQVUsRUFBRTtJQUM5QjtJQUNBTixPQUFPLENBQUNPLElBQUksR0FBR0QsV0FBVztFQUM1QjtBQUNGIn0=