{"version":3,"names":["_react","require","_material","_reactRouter","_formik","_NavigateNext","_interopRequireDefault","_App","_jsxRuntime","obj","__esModule","default","Question2","navigation","useNavigate","score","setScore","trackScore","setTracker","selectedLanguage","useContext","QuizContext","questionText","answersObject","isSubmitted","setIsSubmitted","useState","formik","useFormik","initialValues","answer","onSubmit","values","previous","handleNavigation","handleQuestionNavigation","index","jsxs","children","jsx","Box","sx","display","gap","flexDirection","alignItems","p","mt","mr","map","number","IconButton","onClick","border","borderColor","className","justifyContent","Typography","Button","variant","RadioGroup","name","value","onChange","handleChange","option","FormControlLabel","control","Radio","label","disabled","e","handleSubmit","_default","exports"],"sources":["Question2.tsx"],"sourcesContent":["import { useContext, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  RadioGroup,\r\n  Radio,\r\n  Button,\r\n  IconButton,\r\n  FormControlLabel,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useFormik } from \"formik\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport { QuizContext } from \"./../../App\";\r\nconst Question2 = () => {\r\n  const navigation = useNavigate();\r\n  const { score, setScore, trackScore, setTracker, selectedLanguage } =\r\n    useContext(QuizContext);\r\n  let questionText: string = \"\";\r\n  let answersObject: string[] = [];\r\n  if (selectedLanguage === \"ReactJS\") {\r\n    questionText =\r\n      \"Which of these packages that are used to install React and create React Apps?\";\r\n    answersObject = [\"JVM\", \"npm -- Node Package Manager\"];\r\n  } else if (selectedLanguage === \"React Native\") {\r\n    questionText =\r\n      \"Is it true that React Native can only be used to create Android Apps?\";\r\n    answersObject = [\"Yes\", \"No\"];\r\n  } else if (selectedLanguage === \"Java\") {\r\n    questionText =\r\n      \"Arrays should always contain the same type of elements. True or false?\";\r\n    answersObject = [\"True\", \"False\"];\r\n  }\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      answer: \"\",\r\n    },\r\n    onSubmit: (values) => {\r\n      if (selectedLanguage === \"ReactJS\") {\r\n        if (values.answer === answersObject[1] && score < 2) {\r\n          setScore((previous) => previous + 1);\r\n        }\r\n      } else if (selectedLanguage === \"React Native\") {\r\n        if (values.answer === answersObject[1] && score < 2) {\r\n          setScore((previous) => previous + 1);\r\n        }\r\n      } else if (selectedLanguage === \"Java\") {\r\n        if (values.answer === answersObject[0] && score < 2) {\r\n          setScore((previous) => previous + 1);\r\n        }\r\n      }\r\n      setIsSubmitted(true);\r\n    },\r\n  });\r\n  const handleNavigation = () => {\r\n    navigation(\"/question3\");\r\n  };\r\n  const handleQuestionNavigation = (index: number) => {\r\n    navigation(`/question${index}`);\r\n  };\r\n  return (\r\n    <div>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          gap: 1,\r\n          flexDirection: \"column\",\r\n          alignItems: \"flex-end\",\r\n          p: 1,\r\n          mt: \"25vh\",\r\n          mr: 2,\r\n        }}\r\n      >\r\n        {[1, 2, 3, 4, 5].map((number) => (\r\n          <IconButton\r\n            onClick={() => handleQuestionNavigation(number)}\r\n            sx={{ border: 1, borderColor: \"divider\" }}\r\n          >\r\n            {number}\r\n          </IconButton>\r\n        ))}\r\n      </Box>\r\n      <div className=\"quiz-container\">\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-start\",\r\n            flexDirection: \"column\",\r\n            gap: 2,\r\n          }}\r\n        >\r\n          <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n            {trackScore && <Typography>Score: {score}</Typography>}\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() => {\r\n                setTracker(!trackScore);\r\n              }}\r\n            >\r\n              {trackScore ? \"Disable Score Tracking\" : \"Enable Score Tracking\"}\r\n            </Button>\r\n          </Box>\r\n          <Box>\r\n            <Typography>{questionText}</Typography>\r\n          </Box>\r\n          <RadioGroup\r\n            name=\"answer\"\r\n            value={formik.values.answer}\r\n            onChange={formik.handleChange}\r\n          >\r\n            {answersObject.map((option) => (\r\n              <FormControlLabel\r\n                key={option}\r\n                value={option}\r\n                control={<Radio />}\r\n                label={option}\r\n                disabled={isSubmitted}\r\n              />\r\n            ))}\r\n          </RadioGroup>\r\n          <Box sx={{ display: \"flex\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={(e: React.MouseEvent<HTMLButtonElement>) =>\r\n                formik.handleSubmit()\r\n              }\r\n              disabled={isSubmitted}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <IconButton onClick={handleNavigation}>\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Box>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question2;\r\n"],"mappings":"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"}