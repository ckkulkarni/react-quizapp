d3cb0ebef92a5e6e90c57f3127f8611a
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.keydownBehavior = void 0;
var _utils = require("../../utils");

/**
 * This file should contain behavior for arrow keys as described here:
 * https://w3c.github.io/uievents-code/#key-arrowpad-section
 */
const keydownBehavior = [{
  // TODO: implement for contentEditable
  matches: (keyDef, element) => (keyDef.key === 'ArrowLeft' || keyDef.key === 'ArrowRight') && (0, _utils.isElementType)(element, ['input', 'textarea']),
  handle: (keyDef, element) => {
    var _ref;
    const {
      selectionStart,
      selectionEnd
    } = (0, _utils.getSelectionRange)(element);
    const direction = keyDef.key === 'ArrowLeft' ? -1 : 1;
    const newPos = (_ref = selectionStart === selectionEnd ? (selectionStart != null ? selectionStart : /* istanbul ignore next */
    0) + direction : direction < 0 ? selectionStart : selectionEnd) != null ? _ref : /* istanbul ignore next */
    0;
    (0, _utils.setSelectionRange)(element, newPos, newPos);
  }
}];
exports.keydownBehavior = keydownBehavior;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImtleWRvd25CZWhhdmlvciIsIl91dGlscyIsInJlcXVpcmUiLCJtYXRjaGVzIiwia2V5RGVmIiwiZWxlbWVudCIsImtleSIsImlzRWxlbWVudFR5cGUiLCJoYW5kbGUiLCJfcmVmIiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJnZXRTZWxlY3Rpb25SYW5nZSIsImRpcmVjdGlvbiIsIm5ld1BvcyIsInNldFNlbGVjdGlvblJhbmdlIl0sInNvdXJjZXMiOlsiYXJyb3cuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmtleWRvd25CZWhhdmlvciA9IHZvaWQgMDtcblxudmFyIF91dGlscyA9IHJlcXVpcmUoXCIuLi8uLi91dGlsc1wiKTtcblxuLyoqXG4gKiBUaGlzIGZpbGUgc2hvdWxkIGNvbnRhaW4gYmVoYXZpb3IgZm9yIGFycm93IGtleXMgYXMgZGVzY3JpYmVkIGhlcmU6XG4gKiBodHRwczovL3czYy5naXRodWIuaW8vdWlldmVudHMtY29kZS8ja2V5LWFycm93cGFkLXNlY3Rpb25cbiAqL1xuY29uc3Qga2V5ZG93bkJlaGF2aW9yID0gW3tcbiAgLy8gVE9ETzogaW1wbGVtZW50IGZvciBjb250ZW50RWRpdGFibGVcbiAgbWF0Y2hlczogKGtleURlZiwgZWxlbWVudCkgPT4gKGtleURlZi5rZXkgPT09ICdBcnJvd0xlZnQnIHx8IGtleURlZi5rZXkgPT09ICdBcnJvd1JpZ2h0JykgJiYgKDAsIF91dGlscy5pc0VsZW1lbnRUeXBlKShlbGVtZW50LCBbJ2lucHV0JywgJ3RleHRhcmVhJ10pLFxuICBoYW5kbGU6IChrZXlEZWYsIGVsZW1lbnQpID0+IHtcbiAgICB2YXIgX3JlZjtcblxuICAgIGNvbnN0IHtcbiAgICAgIHNlbGVjdGlvblN0YXJ0LFxuICAgICAgc2VsZWN0aW9uRW5kXG4gICAgfSA9ICgwLCBfdXRpbHMuZ2V0U2VsZWN0aW9uUmFuZ2UpKGVsZW1lbnQpO1xuICAgIGNvbnN0IGRpcmVjdGlvbiA9IGtleURlZi5rZXkgPT09ICdBcnJvd0xlZnQnID8gLTEgOiAxO1xuICAgIGNvbnN0IG5ld1BvcyA9IChfcmVmID0gc2VsZWN0aW9uU3RhcnQgPT09IHNlbGVjdGlvbkVuZCA/IChzZWxlY3Rpb25TdGFydCAhPSBudWxsID8gc2VsZWN0aW9uU3RhcnQgOlxuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgMCkgKyBkaXJlY3Rpb24gOiBkaXJlY3Rpb24gPCAwID8gc2VsZWN0aW9uU3RhcnQgOiBzZWxlY3Rpb25FbmQpICE9IG51bGwgPyBfcmVmIDpcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICAgIDA7XG4gICAgKDAsIF91dGlscy5zZXRTZWxlY3Rpb25SYW5nZSkoZWxlbWVudCwgbmV3UG9zLCBuZXdQb3MpO1xuICB9XG59XTtcbmV4cG9ydHMua2V5ZG93bkJlaGF2aW9yID0ga2V5ZG93bkJlaGF2aW9yOyJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFFWkEsTUFBTSxDQUFDQyxjQUFjLENBQUNDLE9BQU8sRUFBRSxZQUFZLEVBQUU7RUFDM0NDLEtBQUssRUFBRTtBQUNULENBQUMsQ0FBQztBQUNGRCxPQUFPLENBQUNFLGVBQWUsR0FBRyxLQUFLLENBQUM7QUFFaEMsSUFBSUMsTUFBTSxHQUFHQyxPQUFPLENBQUMsYUFBYSxDQUFDOztBQUVuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU1GLGVBQWUsR0FBRyxDQUFDO0VBQ3ZCO0VBQ0FHLE9BQU8sRUFBRUEsQ0FBQ0MsTUFBTSxFQUFFQyxPQUFPLEtBQUssQ0FBQ0QsTUFBTSxDQUFDRSxHQUFHLEtBQUssV0FBVyxJQUFJRixNQUFNLENBQUNFLEdBQUcsS0FBSyxZQUFZLEtBQUssQ0FBQyxDQUFDLEVBQUVMLE1BQU0sQ0FBQ00sYUFBYSxFQUFFRixPQUFPLEVBQUUsQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDLENBQUM7RUFDdEpHLE1BQU0sRUFBRUEsQ0FBQ0osTUFBTSxFQUFFQyxPQUFPLEtBQUs7SUFDM0IsSUFBSUksSUFBSTtJQUVSLE1BQU07TUFDSkMsY0FBYztNQUNkQztJQUNGLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRVYsTUFBTSxDQUFDVyxpQkFBaUIsRUFBRVAsT0FBTyxDQUFDO0lBQzFDLE1BQU1RLFNBQVMsR0FBR1QsTUFBTSxDQUFDRSxHQUFHLEtBQUssV0FBVyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUM7SUFDckQsTUFBTVEsTUFBTSxHQUFHLENBQUNMLElBQUksR0FBR0MsY0FBYyxLQUFLQyxZQUFZLEdBQUcsQ0FBQ0QsY0FBYyxJQUFJLElBQUksR0FBR0EsY0FBYyxHQUNqRztJQUNBLENBQUMsSUFBSUcsU0FBUyxHQUFHQSxTQUFTLEdBQUcsQ0FBQyxHQUFHSCxjQUFjLEdBQUdDLFlBQVksS0FBSyxJQUFJLEdBQUdGLElBQUksR0FDOUU7SUFDQSxDQUFDO0lBQ0QsQ0FBQyxDQUFDLEVBQUVSLE1BQU0sQ0FBQ2MsaUJBQWlCLEVBQUVWLE9BQU8sRUFBRVMsTUFBTSxFQUFFQSxNQUFNLENBQUM7RUFDeEQ7QUFDRixDQUFDLENBQUM7QUFDRmhCLE9BQU8sQ0FBQ0UsZUFBZSxHQUFHQSxlQUFlIn0=