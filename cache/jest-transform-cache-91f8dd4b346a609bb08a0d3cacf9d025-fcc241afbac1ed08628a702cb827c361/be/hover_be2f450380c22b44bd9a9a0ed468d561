a7bb507e281e77de3a9e87cbb7fdc92d
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hover = hover;
exports.unhover = unhover;
var _dom = require("@testing-library/dom");
var _utils = require("./utils");

// includes `element`
function getParentElements(element) {
  const parentElements = [element];
  let currentElement = element;
  while ((currentElement = currentElement.parentElement) != null) {
    parentElements.push(currentElement);
  }
  return parentElements;
}
function hover(element, init, {
  skipPointerEventsCheck = false
} = {}) {
  if (!skipPointerEventsCheck && !(0, _utils.hasPointerEvents)(element)) {
    throw new Error('unable to hover element as it has or inherits pointer-events set to "none".');
  }
  if ((0, _utils.isLabelWithInternallyDisabledControl)(element)) return;
  const parentElements = getParentElements(element).reverse();
  _dom.fireEvent.pointerOver(element, init);
  for (const el of parentElements) {
    _dom.fireEvent.pointerEnter(el, init);
  }
  if (!(0, _utils.isDisabled)(element)) {
    _dom.fireEvent.mouseOver(element, (0, _utils.getMouseEventOptions)('mouseover', init));
    for (const el of parentElements) {
      _dom.fireEvent.mouseEnter(el, (0, _utils.getMouseEventOptions)('mouseenter', init));
    }
  }
  _dom.fireEvent.pointerMove(element, init);
  if (!(0, _utils.isDisabled)(element)) {
    _dom.fireEvent.mouseMove(element, (0, _utils.getMouseEventOptions)('mousemove', init));
  }
}
function unhover(element, init, {
  skipPointerEventsCheck = false
} = {}) {
  if (!skipPointerEventsCheck && !(0, _utils.hasPointerEvents)(element)) {
    throw new Error('unable to unhover element as it has or inherits pointer-events set to "none".');
  }
  if ((0, _utils.isLabelWithInternallyDisabledControl)(element)) return;
  const parentElements = getParentElements(element);
  _dom.fireEvent.pointerMove(element, init);
  if (!(0, _utils.isDisabled)(element)) {
    _dom.fireEvent.mouseMove(element, (0, _utils.getMouseEventOptions)('mousemove', init));
  }
  _dom.fireEvent.pointerOut(element, init);
  for (const el of parentElements) {
    _dom.fireEvent.pointerLeave(el, init);
  }
  if (!(0, _utils.isDisabled)(element)) {
    _dom.fireEvent.mouseOut(element, (0, _utils.getMouseEventOptions)('mouseout', init));
    for (const el of parentElements) {
      _dom.fireEvent.mouseLeave(el, (0, _utils.getMouseEventOptions)('mouseleave', init));
    }
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImhvdmVyIiwidW5ob3ZlciIsIl9kb20iLCJyZXF1aXJlIiwiX3V0aWxzIiwiZ2V0UGFyZW50RWxlbWVudHMiLCJlbGVtZW50IiwicGFyZW50RWxlbWVudHMiLCJjdXJyZW50RWxlbWVudCIsInBhcmVudEVsZW1lbnQiLCJwdXNoIiwiaW5pdCIsInNraXBQb2ludGVyRXZlbnRzQ2hlY2siLCJoYXNQb2ludGVyRXZlbnRzIiwiRXJyb3IiLCJpc0xhYmVsV2l0aEludGVybmFsbHlEaXNhYmxlZENvbnRyb2wiLCJyZXZlcnNlIiwiZmlyZUV2ZW50IiwicG9pbnRlck92ZXIiLCJlbCIsInBvaW50ZXJFbnRlciIsImlzRGlzYWJsZWQiLCJtb3VzZU92ZXIiLCJnZXRNb3VzZUV2ZW50T3B0aW9ucyIsIm1vdXNlRW50ZXIiLCJwb2ludGVyTW92ZSIsIm1vdXNlTW92ZSIsInBvaW50ZXJPdXQiLCJwb2ludGVyTGVhdmUiLCJtb3VzZU91dCIsIm1vdXNlTGVhdmUiXSwic291cmNlcyI6WyJob3Zlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuaG92ZXIgPSBob3ZlcjtcbmV4cG9ydHMudW5ob3ZlciA9IHVuaG92ZXI7XG5cbnZhciBfZG9tID0gcmVxdWlyZShcIkB0ZXN0aW5nLWxpYnJhcnkvZG9tXCIpO1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG5cbi8vIGluY2x1ZGVzIGBlbGVtZW50YFxuZnVuY3Rpb24gZ2V0UGFyZW50RWxlbWVudHMoZWxlbWVudCkge1xuICBjb25zdCBwYXJlbnRFbGVtZW50cyA9IFtlbGVtZW50XTtcbiAgbGV0IGN1cnJlbnRFbGVtZW50ID0gZWxlbWVudDtcblxuICB3aGlsZSAoKGN1cnJlbnRFbGVtZW50ID0gY3VycmVudEVsZW1lbnQucGFyZW50RWxlbWVudCkgIT0gbnVsbCkge1xuICAgIHBhcmVudEVsZW1lbnRzLnB1c2goY3VycmVudEVsZW1lbnQpO1xuICB9XG5cbiAgcmV0dXJuIHBhcmVudEVsZW1lbnRzO1xufVxuXG5mdW5jdGlvbiBob3ZlcihlbGVtZW50LCBpbml0LCB7XG4gIHNraXBQb2ludGVyRXZlbnRzQ2hlY2sgPSBmYWxzZVxufSA9IHt9KSB7XG4gIGlmICghc2tpcFBvaW50ZXJFdmVudHNDaGVjayAmJiAhKDAsIF91dGlscy5oYXNQb2ludGVyRXZlbnRzKShlbGVtZW50KSkge1xuICAgIHRocm93IG5ldyBFcnJvcigndW5hYmxlIHRvIGhvdmVyIGVsZW1lbnQgYXMgaXQgaGFzIG9yIGluaGVyaXRzIHBvaW50ZXItZXZlbnRzIHNldCB0byBcIm5vbmVcIi4nKTtcbiAgfVxuXG4gIGlmICgoMCwgX3V0aWxzLmlzTGFiZWxXaXRoSW50ZXJuYWxseURpc2FibGVkQ29udHJvbCkoZWxlbWVudCkpIHJldHVybjtcbiAgY29uc3QgcGFyZW50RWxlbWVudHMgPSBnZXRQYXJlbnRFbGVtZW50cyhlbGVtZW50KS5yZXZlcnNlKCk7XG5cbiAgX2RvbS5maXJlRXZlbnQucG9pbnRlck92ZXIoZWxlbWVudCwgaW5pdCk7XG5cbiAgZm9yIChjb25zdCBlbCBvZiBwYXJlbnRFbGVtZW50cykge1xuICAgIF9kb20uZmlyZUV2ZW50LnBvaW50ZXJFbnRlcihlbCwgaW5pdCk7XG4gIH1cblxuICBpZiAoISgwLCBfdXRpbHMuaXNEaXNhYmxlZCkoZWxlbWVudCkpIHtcbiAgICBfZG9tLmZpcmVFdmVudC5tb3VzZU92ZXIoZWxlbWVudCwgKDAsIF91dGlscy5nZXRNb3VzZUV2ZW50T3B0aW9ucykoJ21vdXNlb3ZlcicsIGluaXQpKTtcblxuICAgIGZvciAoY29uc3QgZWwgb2YgcGFyZW50RWxlbWVudHMpIHtcbiAgICAgIF9kb20uZmlyZUV2ZW50Lm1vdXNlRW50ZXIoZWwsICgwLCBfdXRpbHMuZ2V0TW91c2VFdmVudE9wdGlvbnMpKCdtb3VzZWVudGVyJywgaW5pdCkpO1xuICAgIH1cbiAgfVxuXG4gIF9kb20uZmlyZUV2ZW50LnBvaW50ZXJNb3ZlKGVsZW1lbnQsIGluaXQpO1xuXG4gIGlmICghKDAsIF91dGlscy5pc0Rpc2FibGVkKShlbGVtZW50KSkge1xuICAgIF9kb20uZmlyZUV2ZW50Lm1vdXNlTW92ZShlbGVtZW50LCAoMCwgX3V0aWxzLmdldE1vdXNlRXZlbnRPcHRpb25zKSgnbW91c2Vtb3ZlJywgaW5pdCkpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHVuaG92ZXIoZWxlbWVudCwgaW5pdCwge1xuICBza2lwUG9pbnRlckV2ZW50c0NoZWNrID0gZmFsc2Vcbn0gPSB7fSkge1xuICBpZiAoIXNraXBQb2ludGVyRXZlbnRzQ2hlY2sgJiYgISgwLCBfdXRpbHMuaGFzUG9pbnRlckV2ZW50cykoZWxlbWVudCkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3VuYWJsZSB0byB1bmhvdmVyIGVsZW1lbnQgYXMgaXQgaGFzIG9yIGluaGVyaXRzIHBvaW50ZXItZXZlbnRzIHNldCB0byBcIm5vbmVcIi4nKTtcbiAgfVxuXG4gIGlmICgoMCwgX3V0aWxzLmlzTGFiZWxXaXRoSW50ZXJuYWxseURpc2FibGVkQ29udHJvbCkoZWxlbWVudCkpIHJldHVybjtcbiAgY29uc3QgcGFyZW50RWxlbWVudHMgPSBnZXRQYXJlbnRFbGVtZW50cyhlbGVtZW50KTtcblxuICBfZG9tLmZpcmVFdmVudC5wb2ludGVyTW92ZShlbGVtZW50LCBpbml0KTtcblxuICBpZiAoISgwLCBfdXRpbHMuaXNEaXNhYmxlZCkoZWxlbWVudCkpIHtcbiAgICBfZG9tLmZpcmVFdmVudC5tb3VzZU1vdmUoZWxlbWVudCwgKDAsIF91dGlscy5nZXRNb3VzZUV2ZW50T3B0aW9ucykoJ21vdXNlbW92ZScsIGluaXQpKTtcbiAgfVxuXG4gIF9kb20uZmlyZUV2ZW50LnBvaW50ZXJPdXQoZWxlbWVudCwgaW5pdCk7XG5cbiAgZm9yIChjb25zdCBlbCBvZiBwYXJlbnRFbGVtZW50cykge1xuICAgIF9kb20uZmlyZUV2ZW50LnBvaW50ZXJMZWF2ZShlbCwgaW5pdCk7XG4gIH1cblxuICBpZiAoISgwLCBfdXRpbHMuaXNEaXNhYmxlZCkoZWxlbWVudCkpIHtcbiAgICBfZG9tLmZpcmVFdmVudC5tb3VzZU91dChlbGVtZW50LCAoMCwgX3V0aWxzLmdldE1vdXNlRXZlbnRPcHRpb25zKSgnbW91c2VvdXQnLCBpbml0KSk7XG5cbiAgICBmb3IgKGNvbnN0IGVsIG9mIHBhcmVudEVsZW1lbnRzKSB7XG4gICAgICBfZG9tLmZpcmVFdmVudC5tb3VzZUxlYXZlKGVsLCAoMCwgX3V0aWxzLmdldE1vdXNlRXZlbnRPcHRpb25zKSgnbW91c2VsZWF2ZScsIGluaXQpKTtcbiAgICB9XG4gIH1cbn0iXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7O0FBRVpBLE1BQU0sQ0FBQ0MsY0FBYyxDQUFDQyxPQUFPLEVBQUUsWUFBWSxFQUFFO0VBQzNDQyxLQUFLLEVBQUU7QUFDVCxDQUFDLENBQUM7QUFDRkQsT0FBTyxDQUFDRSxLQUFLLEdBQUdBLEtBQUs7QUFDckJGLE9BQU8sQ0FBQ0csT0FBTyxHQUFHQSxPQUFPO0FBRXpCLElBQUlDLElBQUksR0FBR0MsT0FBTyxDQUFDLHNCQUFzQixDQUFDO0FBRTFDLElBQUlDLE1BQU0sR0FBR0QsT0FBTyxDQUFDLFNBQVMsQ0FBQzs7QUFFL0I7QUFDQSxTQUFTRSxpQkFBaUJBLENBQUNDLE9BQU8sRUFBRTtFQUNsQyxNQUFNQyxjQUFjLEdBQUcsQ0FBQ0QsT0FBTyxDQUFDO0VBQ2hDLElBQUlFLGNBQWMsR0FBR0YsT0FBTztFQUU1QixPQUFPLENBQUNFLGNBQWMsR0FBR0EsY0FBYyxDQUFDQyxhQUFhLEtBQUssSUFBSSxFQUFFO0lBQzlERixjQUFjLENBQUNHLElBQUksQ0FBQ0YsY0FBYyxDQUFDO0VBQ3JDO0VBRUEsT0FBT0QsY0FBYztBQUN2QjtBQUVBLFNBQVNQLEtBQUtBLENBQUNNLE9BQU8sRUFBRUss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