be9b4bf270c8dcc91c17d34dcb47aadd
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useDrop = useDrop;
var _useCollectedProps = require("../useCollectedProps.js");
var _useOptionalFactory = require("../useOptionalFactory.js");
var _connectors = require("./connectors.js");
var _useDropTargetConnector = require("./useDropTargetConnector.js");
var _useDropTargetMonitor = require("./useDropTargetMonitor.js");
var _useRegisteredDropTarget = require("./useRegisteredDropTarget.js");
/**
 * useDropTarget Hook
 * @param spec The drop target specification (object or function, function preferred)
 * @param deps The memoization deps array to use when evaluating spec changes
 */
function useDrop(specArg, deps) {
  const spec = (0, _useOptionalFactory.useOptionalFactory)(specArg, deps);
  const monitor = (0, _useDropTargetMonitor.useDropTargetMonitor)();
  const connector = (0, _useDropTargetConnector.useDropTargetConnector)(spec.options);
  (0, _useRegisteredDropTarget.useRegisteredDropTarget)(spec, monitor, connector);
  return [(0, _useCollectedProps.useCollectedProps)(spec.collect, monitor, connector), (0, _connectors.useConnectDropTarget)(connector)];
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfdXNlQ29sbGVjdGVkUHJvcHMiLCJyZXF1aXJlIiwiX3VzZU9wdGlvbmFsRmFjdG9yeSIsIl9jb25uZWN0b3JzIiwiX3VzZURyb3BUYXJnZXRDb25uZWN0b3IiLCJfdXNlRHJvcFRhcmdldE1vbml0b3IiLCJfdXNlUmVnaXN0ZXJlZERyb3BUYXJnZXQiLCJ1c2VEcm9wIiwic3BlY0FyZyIsImRlcHMiLCJzcGVjIiwidXNlT3B0aW9uYWxGYWN0b3J5IiwibW9uaXRvciIsInVzZURyb3BUYXJnZXRNb25pdG9yIiwiY29ubmVjdG9yIiwidXNlRHJvcFRhcmdldENvbm5lY3RvciIsIm9wdGlvbnMiLCJ1c2VSZWdpc3RlcmVkRHJvcFRhcmdldCIsInVzZUNvbGxlY3RlZFByb3BzIiwiY29sbGVjdCIsInVzZUNvbm5lY3REcm9wVGFyZ2V0Il0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2hvb2tzL3VzZURyb3AvdXNlRHJvcC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IENvbm5lY3REcm9wVGFyZ2V0IH0gZnJvbSAnLi4vLi4vdHlwZXMvaW5kZXguanMnXG5pbXBvcnQgdHlwZSB7IERyb3BUYXJnZXRIb29rU3BlYywgRmFjdG9yeU9ySW5zdGFuY2UgfSBmcm9tICcuLi90eXBlcy5qcydcbmltcG9ydCB7IHVzZUNvbGxlY3RlZFByb3BzIH0gZnJvbSAnLi4vdXNlQ29sbGVjdGVkUHJvcHMuanMnXG5pbXBvcnQgeyB1c2VPcHRpb25hbEZhY3RvcnkgfSBmcm9tICcuLi91c2VPcHRpb25hbEZhY3RvcnkuanMnXG5pbXBvcnQgeyB1c2VDb25uZWN0RHJvcFRhcmdldCB9IGZyb20gJy4vY29ubmVjdG9ycy5qcydcbmltcG9ydCB7IHVzZURyb3BUYXJnZXRDb25uZWN0b3IgfSBmcm9tICcuL3VzZURyb3BUYXJnZXRDb25uZWN0b3IuanMnXG5pbXBvcnQgeyB1c2VEcm9wVGFyZ2V0TW9uaXRvciB9IGZyb20gJy4vdXNlRHJvcFRhcmdldE1vbml0b3IuanMnXG5pbXBvcnQgeyB1c2VSZWdpc3RlcmVkRHJvcFRhcmdldCB9IGZyb20gJy4vdXNlUmVnaXN0ZXJlZERyb3BUYXJnZXQuanMnXG5cbi8qKlxuICogdXNlRHJvcFRhcmdldCBIb29rXG4gKiBAcGFyYW0gc3BlYyBUaGUgZHJvcCB0YXJnZXQgc3BlY2lmaWNhdGlvbiAob2JqZWN0IG9yIGZ1bmN0aW9uLCBmdW5jdGlvbiBwcmVmZXJyZWQpXG4gKiBAcGFyYW0gZGVwcyBUaGUgbWVtb2l6YXRpb24gZGVwcyBhcnJheSB0byB1c2Ugd2hlbiBldmFsdWF0aW5nIHNwZWMgY2hhbmdlc1xuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlRHJvcDxcblx0RHJhZ09iamVjdCA9IHVua25vd24sXG5cdERyb3BSZXN1bHQgPSB1bmtub3duLFxuXHRDb2xsZWN0ZWRQcm9wcyA9IHVua25vd24sXG4+KFxuXHRzcGVjQXJnOiBGYWN0b3J5T3JJbnN0YW5jZTxcblx0XHREcm9wVGFyZ2V0SG9va1NwZWM8RHJhZ09iamVjdCwgRHJvcFJlc3VsdCwgQ29sbGVjdGVkUHJvcHM+XG5cdD4sXG5cdGRlcHM/OiB1bmtub3duW10sXG4pOiBbQ29sbGVjdGVkUHJvcHMsIENvbm5lY3REcm9wVGFyZ2V0XSB7XG5cdGNvbnN0IHNwZWMgPSB1c2VPcHRpb25hbEZhY3Rvcnkoc3BlY0FyZywgZGVwcylcblx0Y29uc3QgbW9uaXRvciA9IHVzZURyb3BUYXJnZXRNb25pdG9yPERyYWdPYmplY3QsIERyb3BSZXN1bHQ+KClcblx0Y29uc3QgY29ubmVjdG9yID0gdXNlRHJvcFRhcmdldENvbm5lY3RvcihzcGVjLm9wdGlvbnMpXG5cdHVzZVJlZ2lzdGVyZWREcm9wVGFyZ2V0KHNwZWMsIG1vbml0b3IsIGNvbm5lY3RvcilcblxuXHRyZXR1cm4gW1xuXHRcdHVzZUNvbGxlY3RlZFByb3BzKHNwZWMuY29sbGVjdCwgbW9uaXRvciwgY29ubmVjdG9yKSxcblx0XHR1c2VDb25uZWN0RHJvcFRhcmdldChjb25uZWN0b3IpLFxuXHRdXG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVBLElBQUFBLGtCQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxtQkFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsV0FBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsdUJBQUEsR0FBQUgsT0FBQTtBQUNBLElBQUFJLHFCQUFBLEdBQUFKLE9BQUE7QUFDQSxJQUFBSyx3QkFBQSxHQUFBTCxPQUFBO0FBRUE7Ozs7O0FBS08sU0FBU00sT0FBT0EsQ0FLdEJDLE9BRUMsRUFDREMsSUFBZ0IsRUFDc0I7RUFDdEMsTUFBTUMsSUFBSSxHQUFHLElBQUFDLHNDQUFrQixFQUFDSCxPQUFPLEVBQUVDLElBQUksQ0FBQztFQUM5QyxNQUFNRyxPQUFPLEdBQUcsSUFBQUMsMENBQW9CLEdBQTBCO0VBQzlELE1BQU1DLFNBQVMsR0FBRyxJQUFBQyw4Q0FBc0IsRUFBQ0wsSUFBSSxDQUFDTSxPQUFPLENBQUM7RUFDdEQsSUFBQUMsZ0RBQXVCLEVBQUNQLElBQUksRUFBRUUsT0FBTyxFQUFFRSxTQUFTLENBQUM7RUFFakQsT0FBTyxDQUNOLElBQUFJLG9DQUFpQixFQUFDUixJQUFJLENBQUNTLE9BQU8sRUFBRVAsT0FBTyxFQUFFRSxTQUFTLENBQUMsRUFDbkQsSUFBQU0sZ0NBQW9CLEVBQUNOLFNBQVMsQ0FBQyxDQUMvQiJ9