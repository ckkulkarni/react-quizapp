{"version":3,"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","hslToRgb","h","s","l","c","Math","abs","x","m","r","g","b","floor","map","val","rgbToHsl","max","min","delta","hwbToRgb","hue","white","black","_a","hwbToHsv","v","hsvToRgb","rgbToHwb","rgbToHsv","hsvToHwb","cmykToRgb","y","k","red","green","blue","rgbToCmyk","i","w","resolveHwb","rgbToHex","a","enableShort","arr","push","round","hex","_util_util__WEBPACK_IMPORTED_MODULE_0__","padStart","toString","join","hexToShorthand","check","rgb","match","forEach","substring","hexToRgb","short","replace","parseInt","total","Number","toFixed","ColorFormatter","_color_converter__WEBPACK_IMPORTED_MODULE_0__","prototype","setColor","color","alpha","_util_util__WEBPACK_IMPORTED_MODULE_2__","resolveAlpha","getColor","getColorAs","model","convert","getModel","undefined","changeModel","getAlpha","setAlpha","values","convertFromRgb","convertFromHwb","convertFromHsl","convertFromHsv","convertFromCmyk","length","Error","args","_i","arguments","toHex","apply","toHwb","toHsl","toHsv","toCmyk","toRgb","mode","nameOrShort","name","Object","keys","_color_names__WEBPACK_IMPORTED_MODULE_1__","key","arrayIsEqual","concat","_b","decimal","__WEBPACK_DEFAULT_EXPORT__","color_name__WEBPACK_IMPORTED_MODULE_0__","inputParser","input","prefix","substr","toLowerCase","parseHwb","parseHsl","parseHsv","parseCmyk","parseRgb","shortHex","rgba","percent","hexToAlpha","num","test","_c","_d","parseFloat","clamp","hsl","degree","hwb","hsv","cmyk","str","chars","space","makePad","padEnd","limit","isNaN","precision","factor","pow","getRandom","random","arr1","arr2","every","Array","isArray","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","obj","prop","hasOwnProperty","call","Symbol","toStringTag","value","MooColor","_super","__extends","_this","setColorByParser","mix","color1","color2","percentOf1","c1","c2","_util_util__WEBPACK_IMPORTED_MODULE_3__","_input_parser__WEBPACK_IMPORTED_MODULE_2__","clone","brightness","contrastRatioWith","luminance","isContrastEnough","lighten","amount","manipulate","darken","saturate","desaturate","grayscale","whiten","blacken","rotate","complement","invert","absRound","asModel","callback","_color_formatter__WEBPACK_IMPORTED_MODULE_1__"],"sources":["webpack://MooColor/webpack/universalModuleDefinition","webpack://MooColor/node_modules/color-name/index.js","webpack://MooColor/src/color-converter.ts","webpack://MooColor/src/color-formatter.ts","webpack://MooColor/src/color-names.ts","webpack://MooColor/src/color.ts","webpack://MooColor/src/input-parser.ts","webpack://MooColor/src/util/util.ts","webpack://MooColor/webpack/bootstrap","webpack://MooColor/webpack/runtime/compat get default export","webpack://MooColor/webpack/runtime/define property getters","webpack://MooColor/webpack/runtime/hasOwnProperty shorthand","webpack://MooColor/webpack/runtime/make namespace object","webpack://MooColor/src/moo-color.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MooColor\"] = factory();\n\telse\n\t\troot[\"MooColor\"] = factory();\n})(this, () => {\nreturn ","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","import { padStart } from './util/util';\n\n/**\n * Converts an HSL to RGB.\n * @see https://www.rapidtables.com/convert/color/hsl-to-rgb.html\n * @export\n * @param {number} h hue\n * @param {number} s saturation 0-100\n * @param {number} l lightness 0-100\n * @returns {number[]} [red, green, blue] 0-255\n */\nexport function hslToRgb(h: number, s: number, l: number): number[] {\n  h /= 60, s /= 100, l /= 100;\n  const c = (1 - Math.abs(2 * l - 1)) * s;\n  const x = c * (1 - Math.abs(h % 2 - 1));\n  const m = l - c / 2;\n  let r;\n  let g;\n  let b;\n  switch (Math.floor(h)) {\n    case 0: r = c, g = x, b = 0; break;\n    case 1: r = x, g = c, b = 0; break;\n    case 2: r = 0, g = c, b = x; break;\n    case 3: r = 0, g = x, b = c; break;\n    case 4: r = x, g = 0, b = c; break;\n    case 5: r = c, g = 0, b = x; break;\n  }\n  return [r, g, b].map(val => (val + m) * 255);\n}\n\n/**\n * Converts RGB to HSL.\n * @see https://www.rapidtables.com/convert/color/rgb-to-hsl.html\n * @export\n * @param {number} r red 0-255\n * @param {number} g green 0-255\n * @param {number} b blue 0-255\n * @returns {number[]} [hue, saturation, lightness] (0-360, 0-100, 0-100)\n */\nexport function rgbToHsl(r: number, g: number, b: number): number[] {\n  r /= 255, g /= 255, b /= 255;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const delta = max - min;\n  let h;\n  if (delta === 0) {\n    h = 0;\n  } else if (max === r) {\n    h = 60 * ((g - b) / delta % 6);\n  } else if (max === g) {\n    h = 60 * ((b - r) / delta + 2);\n  } else {\n    h = 60 * ((r - g) / delta + 4);\n  }\n  const l = (max + min) / 2;\n  const s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n  return [h, s * 100, l * 100];\n}\n\n/**\n * Converts HWB to RGB.\n * @export\n * @param {number} hue hue 0-360\n * @param {number} white whiteness 0-100\n * @param {number} black blackness 0-100\n * @returns {number[]} [red, green, blue] 0-255\n */\nexport function hwbToRgb(hue: number, white: number, black: number): number[] {\n  const [h, s, v] = hwbToHsv(hue, white, black);\n  return hsvToRgb(h, s, v);\n}\n\n/**\n * Converts RGB to HWB.\n * @export\n * @param {number} r red 0-255\n * @param {number} g green 0-255\n * @param {number} b blue 0-255\n * @returns {number[]} [hue, whiteness, blackness] (0-360, 0-100, 0-100)\n */\nexport function rgbToHwb(r: number, g: number, b: number): number[] {\n  const [h, s, v] = rgbToHsv(r, g, b);\n  return hsvToHwb(h, s, v);\n}\n\n/**\n * Converts CMYK to RGB.\n * @see https://www.rapidtables.com/convert/color/cmyk-to-rgb.html\n * @export\n * @param {number} c cyan 0-100\n * @param {number} m magenta 0-100\n * @param {number} y yellow 0-100\n * @param {number} k black 0-100\n * @returns {number[]} [red, green, blue] 0-255\n */\nexport function cmykToRgb(c: number, m: number, y: number, k: number): number[] {\n  c /= 100, m /= 100, y /= 100, k /= 100;\n  const red = 255 * (1 - c) * (1 - k);\n  const green = 255 * (1 - m) * (1 - k);\n  const blue = 255 * (1 - y) * (1 - k);\n  return [red, green, blue];\n}\n\n/**\n * Converts RGB to CMYK\n * @see https://www.rapidtables.com/convert/color/rgb-to-cmyk.html\n * @export\n * @param {number} r red 0-255\n * @param {number} g green 0-255\n * @param {number} b blue 0-255\n * @returns {number[]} [cyan, magenta, yellow, black] 0-100\n */\nexport function rgbToCmyk(r: number, g: number, b: number): number[] {\n  r /= 255, g /= 255, b /= 255;\n  const k = 1 - Math.max(r, g, b);\n  const c = (1 - r - k) / (1 - k);\n  const m = (1 - g - k) / (1 - k);\n  const y = (1 - b - k) / (1 - k);\n  return [c, m, y, k].map(x => x * 100);\n}\n\n/**\n * Converts HSV to RGB.\n * @see https://www.rapidtables.com/convert/color/hsv-to-rgb.html\n * @export\n * @param {number} h hue 0-360\n * @param {number} s saturation 0-100\n * @param {number} v value 0-100\n * @returns {number[]} [red, green, blue] 0-255\n */\nexport function hsvToRgb(h: number, s: number, v: number): number[] {\n  s /= 100; v /= 100;\n  let r;\n  let g;\n  let b;\n  const i = h / 60;\n  const c = v * s;\n  const x = c * (1 - Math.abs(i % 2 - 1));\n  const m = v - c;\n  switch (Math.floor(i)) {\n    case 0: r = c, g = x, b = 0; break;\n    case 1: r = x, g = c, b = 0; break;\n    case 2: r = 0, g = c, b = x; break;\n    case 3: r = 0, g = x, b = c; break;\n    case 4: r = x, g = 0, b = c; break;\n    case 5: r = c, g = 0, b = x; break;\n  }\n  return [r, g, b].map(val => (val + m) * 255);\n}\n\n/**\n * Converts RGB to HSV.\n * @see https://www.rapidtables.com/convert/color/rgb-to-hsv.html\n * @export\n * @param {number} r red 0-255\n * @param {number} g green 0-255\n * @param {number} b blue 0-255\n * @returns {number[]} [hue, saturation, value] (0-360, 0-100, 0-100)\n */\nexport function rgbToHsv(r: number, g: number, b: number): number[] {\n  r /= 255, g /= 255, b /= 255;\n  let h;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const delta = max - min;\n  if (delta === 0) {\n    h = 0;\n  } else if (max === r) {\n    h = 60 * ((g - b) / delta % 6);\n  } else if (max === g) {\n    h = 60 * ((b - r) / delta + 2);\n  } else {\n    h = 60 * ((r - g) / delta + 4);\n  }\n  const s = max === 0 ? 0 : delta / max;\n  const v = max;\n  return [h, s * 100, v * 100];\n}\n\n/**\n * Converts HSV to HWB\n * @see https://en.wikipedia.org/wiki/HWB_color_model\n * @export\n * @param {number} h hue 0-360\n * @param {number} s saturation 0-100\n * @param {number} v value 0-100\n * @returns {number[]} [hue, whiteness, blackness] (0-360, 0-100, 0-100)\n */\nexport function hsvToHwb(h: number, s: number, v: number): number[] {\n  s /= 100, v /= 100;\n  const white = (1 - s) * v;\n  const black = 1 - v;\n  return [h, white * 100, black * 100];\n}\n\n/**\n * Converts HWB to HSV.\n * @see https://en.wikipedia.org/wiki/HWB_color_model\n * @export\n * @param {number} h hue 0-360\n * @param {number} w whiteness 0-100\n * @param {number} b blackness 0-100\n * @returns {number[]} [hue, saturation, value] (0-360, 0-100, 0-100)\n */\nexport function hwbToHsv(h: number, w: number, b: number): number[] {\n  [h, w, b] = resolveHwb(h, w, b);\n  w /= 100, b /= 100;\n  const s = 1 - w / (1 - b);\n  const v = 1 - b;\n  return [h, s * 100, v * 100];\n}\n\n/**\n * Converts RGB to HEX string.\n * @export\n * @param {number} r red 0-255\n * @param {number} g green 0-255\n * @param {number} b blue 0-255\n * @param {(number|null)} [a] alpha 0-1 or null\n * @param {boolean} [enableShort] enable shorthand, default is false.\n * @returns {string} Hex string. e.g. 'ff0000'\n */\nexport function rgbToHex(r: number, g: number, b: number, a?: number|null, enableShort?: boolean): string {\n  const arr = [r, g, b];\n  if (typeof a === 'number') {\n    arr.push(Math.round(a * 255));\n  }\n  const hex = arr.map(x => padStart(x.toString(16), 2, '0')).join('');\n  return enableShort ? hexToShorthand(hex) : hex;\n}\n\nfunction hexToShorthand(hex: string): string {\n  let check = true;\n  const rgb = hex.match(/.{2}/g);\n  rgb.forEach(x => {\n    if (!x.match(/(.)\\1+/)) {\n      check = false;\n    }\n  });\n  return check ? rgb.map(x => x.substring(1)).join('') : hex;\n}\n\n/**\n * Converts HEX string to RGB.\n * @export\n * @param {string} hex hex string. e.g. 'ff0000', 'f00', 'ff000080'\n * @returns {number[]} [red, green, blue, alpha?] (rgb: 0-255, alpha: 0-1)\n */\nexport function hexToRgb(hex: string): number[] {\n  const short = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i;\n  return hex.replace(short, (m, r, g, b, a) => {\n    a = typeof a === 'undefined' ? '' : a;\n    return r + r + g + g + b + b + a + a;\n  })\n  .match(/.{2}/g)\n  .map((x, i) => i !== 3 ? parseInt(x, 16) : parseInt(x, 16) / 255);\n}\n\n/**\n * Resolve HWB values.\n * @see https://drafts.csswg.org/css-color/#the-hwb-notation\n * @export\n * @param {number} h hue 0-360\n * @param {number} w whiteness 0-100\n * @param {number} b blackness 0-100\n * @returns {number[]} [hue, whiteness, blackness]\n */\nexport function resolveHwb(h: number, w: number, b: number): number[] {\n  const total = w + b;\n  if (total > 100) {\n    w = Number((w / total).toFixed(4)) * 100;\n    b = Number((b / total).toFixed(4)) * 100;\n  }\n  return [h, w, b];\n}\n","import {\n  AcceptedModel,\n  Color,\n  ColorRepresentable,\n  ColorSettable,\n  HexMode,\n  RgbMode,\n} from './color';\nimport * as Converter from './color-converter';\nimport Names from './color-names';\nimport { arrayIsEqual, decimal, resolveAlpha } from './util/util';\n\nexport class ColorFormatter implements ColorSettable, ColorRepresentable {\n  color?: Color;\n  // In hwb model, whiteness and blackness value's adjust will required.\n  protected resolveHwb = Converter.resolveHwb;\n\n  setColor(color: Color): this {\n    color.alpha = resolveAlpha(color.alpha);\n    this.color = color;\n    return this;\n  }\n\n  getColor(): Color {\n    return this.color;\n  }\n\n  getColorAs(model: AcceptedModel): Color {\n    return this.color.model === model\n      ? this.color\n      : this.convert(this.color, model);\n  }\n\n  getModel(): AcceptedModel|undefined {\n    return this.color ? this.color.model : undefined;\n  }\n\n  changeModel(model: AcceptedModel): this {\n    return this.color.model === model\n      ? this\n      : this.setColor(this.convert(this.color, model));\n  }\n\n  getAlpha(): number {\n    return this.color.alpha;\n  }\n\n  setAlpha(alpha: number): this {\n    this.color.alpha = alpha;\n    return this;\n  }\n\n  convert(color: Color, model: AcceptedModel): Color {\n    let values: number[];\n    switch (color.model) {\n      case 'rgb': values = this.convertFromRgb(color.values, model); break;\n      case 'hwb': values = this.convertFromHwb(color.values, model); break;\n      case 'hsl': values = this.convertFromHsl(color.values, model); break;\n      case 'hsv': values = this.convertFromHsv(color.values, model); break;\n      case 'cmyk': values = this.convertFromCmyk(color.values, model); break;\n    }\n    if (!values.length) {\n      throw new Error('Converting Error!');\n    }\n    return { model, values, alpha: color.alpha};\n  }\n\n  /**\n   * Represents color as notation of specific color model.\n   *\n   * @param {(AcceptedModel|'hex')} [model] - Specify color model.\n   * If not specifying this value, then returns current color model.\n   * @param {...any[]} args - Arguments for the represent methods.\n   * @returns {string}\n   */\n  toString(model?: AcceptedModel|'hex', ...args: any[]): string {\n    model = model ? model : this.color.model;\n    switch (model) {\n      case 'hex': return this.toHex(...args);\n      case 'hwb': return this.toHwb();\n      case 'hsl': return this.toHsl();\n      case 'hsv': return this.toHsv();\n      case 'cmyk': return this.toCmyk();\n      default: return this.toRgb(...args);\n    }\n  }\n\n  /**\n   * Represents color as HEX notation.\n   * @see https://www.w3.org/TR/css-color-4/#hex-notation\n   *\n   * @param {HexMode} [mode='full'] 'full'|'short'|'name'\n   * @returns {string}\n   */\n  toHex(mode: HexMode = 'full'): string {\n    const color = this.getColorAs('rgb');\n    const [r, g, b] = color.values.map(x => Math.round(x));\n    const a = color.alpha === 1 ? null : color.alpha;\n    const nameOrShort = () => {\n      let name = '';\n      for (const key of Object.keys(Names)) {\n        if (arrayIsEqual(Names[key], [r, g, b])) {\n          name = key; break;\n        }\n      }\n      return a === null && name !== '' ? name : `#${Converter.rgbToHex(r, g, b, a, true)}`;\n    };\n    switch (mode) {\n      case 'name': return nameOrShort();\n      case 'short': return `#${Converter.rgbToHex(r, g, b, a, true)}`;\n      case 'full':\n      default: return `#${Converter.rgbToHex(r, g, b, a)}`;\n    }\n  }\n\n  /**\n   * Represents color as RGB notation.\n   * @see https://www.w3.org/TR/css-color-4/#rgb-functions\n   *\n   * @param {RgbMode} [mode='default'] 'default'|'percent'\n   * @returns {string}\n   */\n  toRgb(mode: RgbMode = 'default'): string {\n    const color = this.getColorAs('rgb');\n    let [r, g, b]: number[]|string[] = color.values.map(x => Math.round(x));\n    if (mode === 'percent') {\n      [r, g, b] = [r, g, b].map(x => `${x / 255 * 100}%`);\n    }\n    return color.alpha === 1\n      ? `rgb(${r}, ${g}, ${b})`\n      : `rgba(${r}, ${g}, ${b}, ${color.alpha})`;\n  }\n\n  /**\n   * Represents color as HWB notation.\n   * @see https://www.w3.org/TR/css-color-4/#the-hwb-notation\n   * @returns {string} e.g. 'hwb(0, 0%, 0%, 0)'\n   */\n  toHwb(): string {\n    const color = this.getColorAs('hwb');\n    const [h, w, b] = color.values.map(x => decimal(x, 2));\n    const a = color.alpha === 1 ? '' : `, ${color.alpha}`;\n    return `hwb(${h}, ${w}%, ${b}%${a})`;\n  }\n\n  /**\n   * Represents color as HSL notation.\n   * @see https://www.w3.org/TR/css-color-4/#the-hsl-notation\n   * @returns {string}\n   */\n  toHsl(): string {\n    const color = this.getColorAs('hsl');\n    const [h, s, l] = color.values.map(x => decimal(x, 2));\n    return color.alpha === 1\n      ? `hsl(${h}, ${s}%, ${l}%)`\n      : `hsla(${h}, ${s}%, ${l}%, ${color.alpha})`;\n  }\n\n  /**\n   * Represents color as HSV notation. This format is similar to HSL.\n   * @returns {string}\n   */\n  toHsv(): string {\n    const color = this.getColorAs('hsv');\n    const [h, s, v] = color.values.map(x => decimal(x, 2));\n    return color.alpha === 1\n      ? `hsv(${h}, ${s}%, ${v}%)`\n      : `hsva(${h}, ${s}%, ${v}%, ${color.alpha})`;\n  }\n\n  /**\n   * Represents color as CMYK notation. e.g. 'cmyk(0%, 0%, 0%, 0%)'\n   * @see https://www.w3.org/TR/css-color-4/#cmyk-colors\n   * @returns {string}\n   */\n  toCmyk(): string {\n    const color = this.getColorAs('cmyk');\n    const [c, m, y, k] = color.values.map(x => decimal(x, 2));\n    const a = color.alpha === 1 ? '' : `, ${color.alpha}`;\n    return `cmyk(${c}%, ${m}%, ${y}%, ${k}%${a})`;\n  }\n\n  protected convertFromRgb([r, g, b]: number[], model: AcceptedModel): number[] {\n    switch (model) {\n      case 'rgb': return [r, g, b];\n      case 'hwb': return Converter.rgbToHwb(r, g, b);\n      case 'hsl': return Converter.rgbToHsl(r, g, b);\n      case 'hsv': return Converter.rgbToHsv(r, g, b);\n      case 'cmyk': return Converter.rgbToCmyk(r, g, b);\n    }\n  }\n\n  protected convertFromHwb([h, w, b]: number[], model: AcceptedModel): number[] {\n    const [red, green, blue] = Converter.hwbToRgb(h, w, b);\n    switch (model) {\n      case 'rgb': return [red, green, blue];\n      case 'hwb': return [h, w, b];\n      case 'hsl': return Converter.rgbToHsl(red, green, blue);\n      case 'hsv': return Converter.hwbToHsv(h, w, b);\n      case 'cmyk': return Converter.rgbToCmyk(red, green, blue);\n    }\n  }\n\n  protected convertFromHsl([h, s, l]: number[], model: AcceptedModel): number[] {\n    const [red, green, blue] = Converter.hslToRgb(h, s, l);\n    switch (model) {\n      case 'rgb': return [red, green, blue];\n      case 'hwb': return Converter.rgbToHwb(red, green, blue);\n      case 'hsl': return [h, s, l];\n      case 'hsv': return Converter.rgbToHsv(red, green, blue);\n      case 'cmyk': return Converter.rgbToCmyk(red, green, blue);\n    }\n  }\n\n  protected convertFromHsv([h, s, v]: number[], model: AcceptedModel): number[] {\n    const [red, green, blue] = Converter.hsvToRgb(h, s, v);\n    switch (model) {\n      case 'rgb': return [red, green, blue];\n      case 'hwb': return Converter.hsvToHwb(h, s, v);\n      case 'hsl': return Converter.rgbToHsl(red, green, blue);\n      case 'hsv': return [h, s, v];\n      case 'cmyk': return Converter.rgbToCmyk(red, green, blue);\n    }\n  }\n\n  protected convertFromCmyk([c, m, y, k]: number[], model: AcceptedModel): number[] {\n    const [red, green, blue] = Converter.cmykToRgb(c, m, y, k);\n    switch (model) {\n      case 'rgb': return [red, green, blue];\n      case 'hwb': return Converter.rgbToHwb(red, green, blue);\n      case 'hsl': return Converter.rgbToHsl(red, green, blue);\n      case 'hsv': return Converter.rgbToHsv(red, green, blue);\n      case 'cmyk': return [c, m, y, k];\n    }\n  }\n}\n\nexport default ColorFormatter;\n","import * as ColorName from 'color-name';\n\ninterface ColorNames {\n  [index: string]: [number, number, number];\n}\n\nexport default ColorName as ColorNames;\n","export type Color = ColorData;\nexport type AcceptedModel = 'rgb'|'hwb'|'hsl'|'hsv'|'cmyk';\n\n/** Type for `ColorSettable.toHex()` method. */\nexport type HexMode = 'full'|'short'|'name';\n/** Type for `ColorSettable.toRgb()` method. */\nexport type RgbMode = 'default'|'percent';\n\n/** A data object that includes color data. */\nexport interface ColorData {\n  model: AcceptedModel;\n  values: number[];\n  alpha?: number;\n}\n\n/** An argument for `ColorModifiable.random()` method. */\nexport interface RandomArguments {\n  /** The hue value from 0 to 360. Also you can give this as range. e.g. [0, 180] */\n  hue?: number|[number, number];\n  /** The whiteness value from 0 to 100. Also you can give this as range. e.g. [0, 50] */\n  white?: number|[number, number];\n  /** The blackness value from 0 to 100. Also you can give this as range. e.g. [0, 50] */\n  black?: number|[number, number];\n}\n\n/** It can set or get color data. and also can change color to another model. */\nexport interface ColorSettable {\n  color?: Color;\n\n  setColor: (color: Color) => this;\n  getColor: () => Color;\n  getColorAs: (model: AcceptedModel) => Color;\n  getModel: () => AcceptedModel|undefined;\n  changeModel: (model: AcceptedModel) => this;\n  getAlpha: () => number;\n  setAlpha: (alpha: number) => this;\n  convert: (color: Color, model: AcceptedModel) => Color;\n}\n\n/**\n * It can represent color to multiple notations.\n * accepted color models: 'rgb'|'hwb'|'hsl'|'hsv'|'cmyk' + 'hex'\n */\nexport interface ColorRepresentable {\n  color?: Color;\n\n  toString(model?: AcceptedModel|'hex', ...args: any[]): string;\n  toHex(mode?: HexMode): string;\n  toRgb(mode?: RgbMode): string;\n  toHwb(): string;\n  toHsl(): string;\n  toHsv(): string;\n  toCmyk(): string;\n}\n\n/**\n * It can access color state. such as brightness, luminance..\n * @see https://www.w3.org/TR/AERT/#color-contrast\n * @see https://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n */\nexport interface ColorStateAccessible {\n  color?: Color;\n\n  readonly brightness: number;\n  readonly isLight: boolean;\n  readonly isDark: boolean;\n  readonly luminance: number;\n\n  contrastRatioWith(color: ColorStateAccessible): number;\n  isContrastEnough(color: ColorStateAccessible): boolean;\n}\n\n/**\n * It can manipulate color values.\n */\nexport interface ColorModifiable<T extends ColorSettable> {\n  color?: Color;\n\n  lighten(amount: number): this;\n  darken(amount: number): this;\n  saturate(amount: number): this;\n  desaturate(amount: number): this;\n  grayscale(): this;\n  whiten(amount: number): this;\n  blacken(amount: number): this;\n  rotate(degree: number): this;\n  mix(color: T, percent?: number): T;\n  complement(): this;\n  invert(percent?: number): this;\n}\n","import { Color } from './color';\nimport { resolveHwb } from './color-converter';\nimport Names from './color-names';\nimport { clamp, degree, resolveAlpha } from './util/util';\n\nexport default function inputParser(input: string): Color|null {\n  if (input in Names) {\n    // Named colors.\n    return {\n      model: 'rgb',\n      values: Names[input],\n      alpha: 1,\n    };\n  } else if (input === 'transparent') {\n    // 'transparent'.\n    return {\n      model: 'rgb',\n      values: [0, 0, 0],\n      alpha: 0,\n    };\n  } else {\n    // parse string.\n    const prefix = input.substr(0, 3).toLowerCase();\n    switch (prefix) {\n      case 'hwb': return parseHwb(input);\n      case 'hsl': return parseHsl(input);\n      case 'hsv': return parseHsv(input);\n      case 'cmy': return parseCmyk(input);\n      default: return parseRgb(input);\n    }\n  }\n}\n\nfunction parseRgb(input: string): Color|null {\n  const hex = /^#?([a-f0-9]{6})([a-f0-9]{2})?$/i;\n  const shortHex = /^#?([a-f0-9]{3})([a-f0-9]{1})?$/i;\n  const rgba = /^rgba?\\s*\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d.]+)\\s*)?\\)$/;\n  // tslint:disable-next-line:max-line-length\n  const percent = /^rgba?\\s*\\(\\s*([+-]?[\\d.]+)%\\s*,\\s*([+-]?[\\d.]+)%\\s*,\\s*([+-]?[\\d.]+)%\\s*(?:,\\s*([+-]?[\\d.]+)\\s*)?\\)$/;\n  const hexToAlpha = (num: string) => Math.round((parseInt(num, 16) / 255) * 100) / 100;\n  let values: number[];\n  let alpha: number;\n\n  if (hex.test(input)) {\n    const [, h, a] = input.match(hex);\n    values = h.match(/.{2}/g).map(x => parseInt(x, 16));\n    alpha = a ? hexToAlpha(a) : 1;\n  } else if (shortHex.test(input)) {\n    const [, h, a] = input.match(shortHex);\n    values = h.match(/.{1}/g).map(x => parseInt(x + x, 16));\n    alpha = a ? hexToAlpha(a) : 1;\n  } else if (rgba.test(input)) {\n    const [, r, g, b, a] = input.match(rgba);\n    values = [r, g, b].map(x => parseInt(x, 0));\n    alpha = resolveAlpha(a);\n  } else if (percent.test(input)) {\n    const [, r, g, b, a] = input.match(percent);\n    values = [r, g, b].map(x => Math.round(parseFloat(x) * 2.55));\n    alpha = resolveAlpha(a);\n  } else {\n    return null;\n  }\n  return {\n    model: 'rgb',\n    values: values.map(x => clamp(x, 0, 255)),\n    alpha: clamp(alpha, 0, 1),\n  };\n}\n\nfunction parseHsl(input: string): Color|null {\n  // tslint:disable-next-line:max-line-length\n  const hsl = /^hsla?\\s*\\(\\s*([+-]?\\d*[.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d.]+)%\\s*,\\s*([+-]?[\\d.]+)%\\s*(?:,\\s*([+-]?[\\d.]+)\\s*)?\\)$/i;\n\n  if (hsl.test(input)) {\n    const [, h, s, l, a] = input.match(hsl);\n    return {\n      model: 'hsl',\n      values: [\n        degree(h),\n        clamp(parseFloat(s), 0, 100),\n        clamp(parseFloat(l), 0, 100),\n      ],\n      alpha: resolveAlpha(a),\n    };\n  } else {\n    return null;\n  }\n}\n\nfunction parseHwb(input: string): Color|null {\n  // tslint:disable-next-line:max-line-length\n  const hwb = /^hwba?\\s*\\(\\s*([+-]?\\d*[.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d.]+)%\\s*,\\s*([+-]?[\\d.]+)%\\s*(?:,\\s*([+-]?[\\d.]+)\\s*)?\\)$/i;\n\n  if (hwb.test(input)) {\n    const [, h, w, b, a] = input.match(hwb);\n    return {\n      model: 'hwb',\n      values: resolveHwb(\n        degree(h),\n        clamp(parseFloat(w), 0, 100),\n        clamp(parseFloat(b), 0, 100),\n      ),\n      alpha: resolveAlpha(a),\n    };\n  } else {\n    return null;\n  }\n}\n\nfunction parseHsv(input: string): Color|null {\n  // tslint:disable-next-line:max-line-length\n  const hsv = /^hsva?\\s*\\(\\s*([+-]?\\d*[.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d.]+)%\\s*,\\s*([+-]?[\\d.]+)%\\s*(?:,\\s*([+-]?[\\d.]+)\\s*)?\\)$/i;\n\n  if (hsv.test(input)) {\n    const [, h, s, v, a] = input.match(hsv);\n    return {\n      model: 'hsv',\n      values: [\n        degree(h),\n        clamp(parseFloat(s), 0, 100),\n        clamp(parseFloat(v), 0, 100),\n      ],\n      alpha: resolveAlpha(a),\n    };\n  } else {\n    return null;\n  }\n}\n\nfunction parseCmyk(input: string): Color|null {\n  // tslint:disable-next-line:max-line-length\n  const cmyk = /^cmyk\\s*\\(\\s*([+-]?[\\d.]+)%\\s*,\\s*([+-]?[\\d.]+)%\\s*,\\s*([+-]?[\\d.]+)%\\s*,\\s*([+-]?[\\d.]+)%\\s*(?:,\\s*([+-]?[\\d.]+)\\s*)?\\)$/i;\n\n  if (cmyk.test(input)) {\n    const [, c, m, y, k, a] = input.match(cmyk);\n    return {\n      model: 'cmyk',\n      values: [\n        clamp(parseFloat(c), 0, 100),\n        clamp(parseFloat(m), 0, 100),\n        clamp(parseFloat(y), 0, 100),\n        clamp(parseFloat(k), 0, 100),\n      ],\n      alpha: resolveAlpha(a),\n    };\n  } else {\n    return null;\n  }\n}\n","export function padStart(str: string, length: number, chars: string): string {\n  const space = length - str.length;\n  return space > 0 ? `${makePad(chars, space)}${str}` : str;\n}\n\nexport function padEnd(str: string, length: number, chars: string): string {\n  const space = length - str.length;\n  return space > 0 ? `${str}${makePad(chars, space)}` : str;\n}\n\nfunction makePad(chars: string, limit: number): string {\n  while (chars.length < limit) {\n    chars += chars;\n  }\n  return chars.substring(0, limit);\n}\n\nexport function clamp(num: number, min: number, max: number): number {\n  return Math.min(Math.max(min, num), max);\n}\n\nexport function degree(num: string|number): number {\n  num = typeof num === 'string' ? parseFloat(num) : num;\n  return (num % 360 + 360) % 360;\n}\n\nexport function resolveAlpha(a: string|number): number {\n  a = typeof a === 'string' ? parseFloat(a) : a;\n  return clamp(isNaN(a) ? 1 : a, 0, 1);\n}\n\n// @see: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\nexport function decimal(num: number, precision: number): number {\n  const factor = Math.pow(10, precision);\n  return Math.round(num * factor) / factor;\n}\n\nexport function getRandom(min: number, max: number, precision: number = 0): number {\n  const num = Math.random() * (max - min) + min;\n  return decimal(num, precision);\n}\n\n// https://stackoverflow.com/questions/7837456/how-to-compare-arrays-in-javascript#answer-19746771\nexport function arrayIsEqual(arr1: any[], arr2: any[]): boolean {\n  return arr1.length === arr2.length && arr1.every((v, i) => {\n    return Array.isArray(v) ? arrayIsEqual(v, arr2[i]) : v === arr2[i];\n  });\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {\n  AcceptedModel,\n  Color,\n  ColorModifiable,\n  ColorStateAccessible,\n  RandomArguments,\n} from './color';\nimport { resolveHwb } from './color-converter';\nimport ColorFormatter from './color-formatter';\nimport parser from './input-parser';\nimport {\n  clamp,\n  degree,\n  getRandom,\n} from './util/util';\n\nexport * from './color';\n\nexport { ColorFormatter };\n\ntype manipulateFn = (...args: number[]) => number[];\n\nexport class MooColor extends ColorFormatter implements ColorModifiable<MooColor>, ColorStateAccessible {\n\n  static mix(color1: MooColor|string|Color, color2: MooColor|string|Color, percentOf1: number = 50): MooColor {\n    const c1 = (color1 instanceof MooColor) ? color1 : new MooColor(color1);\n    const c2 = (color2 instanceof MooColor) ? color2 : new MooColor(color2);\n    return c2.mix(c1, percentOf1);\n  }\n\n  /**\n   * Create random color as HWB color model.\n   *\n   * @static\n   * @param {RandomArguments} [{hue, white, black}={}]\n   * @returns {MooColor}\n   * @memberof MooColor\n   */\n  static random({hue, white, black}: RandomArguments = {}): MooColor {\n    [hue, white, black] = [hue, white, black].map((x, i) => {\n      if (typeof x === 'number') {\n        return x;\n      } else if (Array.isArray(x)) {\n        const precision = i === 0 ? 0 : 2;\n        return getRandom(Math.min(...x), Math.max(...x), precision);\n      } else {\n        return i === 0 ? getRandom(0, 360) : getRandom(0, 100, 2);\n      }\n    });\n    return new MooColor({\n      model: 'hwb',\n      values: resolveHwb(degree(hue), clamp(white, 0, 100), clamp(black, 0, 100)),\n      alpha: 1,\n    });\n  }\n\n  /**\n   * Creates an instance of MooColor.\n   * @param {(string|Color)} [color] color value. e.g. '#ff0000' 'rgba(255, 0, 0, .5)' 'hsl(120, 50%, 100%)'\n   * @memberof MooColor\n   */\n  constructor(color?: string|Color) {\n    super();\n    if (typeof color === 'object' && color !== null) {\n      this.setColor(color as Color);\n    } else if (typeof color === 'string' || typeof color === 'undefined') {\n      color = color ? color : '#000';\n      this.setColorByParser(color as string);\n    }\n  }\n\n  setColorByParser(str: string): this {\n    const color: Color = parser(str);\n    if (!color) {\n      throw new Error('parsing error!');\n    }\n    return this.setColor(color);\n  }\n\n  clone(): MooColor {\n    return new MooColor(this.color);\n  }\n\n  /**\n   * Returns color brightness from 0 to 255. (It based RGB)\n   * @see https://www.w3.org/TR/AERT/#color-contrast\n   * @readonly\n   * @type {number}\n   */\n  get brightness(): number {\n    const [r, g, b] = this.getColorAs('rgb').values;\n    return ((r * 299) + (g * 587) + (b * 114)) / 1000;\n  }\n\n  /**\n   * Returns whether color is light or not.\n   * @readonly\n   * @type {boolean}\n   */\n  get isLight(): boolean {\n    return this.brightness >= 128;\n  }\n\n  /**\n   * Returns whether color is dark or not.\n   * @readonly\n   * @type {boolean}\n   */\n  get isDark(): boolean {\n    return this.brightness < 128;\n  }\n\n  /**\n   * Returns luminance value of the color. value from 0 to 1.\n   * @see https://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n   * @readonly\n   * @type {number}\n   */\n  get luminance(): number {\n    const [r, g, b] = this.getColorAs('rgb').values.map(x => x / 255);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  }\n\n  /**\n   * Returns contrast ratio with other color. range from 0 to 21.\n   * @see https://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n   * @param {MooColor} color\n   * @returns {number} 0-21\n   */\n  contrastRatioWith(color: MooColor): number {\n    const max = Math.max(this.luminance, color.luminance);\n    const min = Math.min(this.luminance, color.luminance);\n    return (max + 0.05) / (min + 0.05);\n  }\n\n  /**\n   * Return true if contrast ratio >= 4.5\n   * @see https://www.w3.org/WAI/WCAG20/quickref/#qr-visual-audio-contrast-contrast\n   * @param {MooColor} color\n   * @returns {boolean}\n   */\n  isContrastEnough(color: MooColor): boolean {\n    return this.contrastRatioWith(color) >= 4.5;\n  }\n\n  /**\n   * Increase lightness.\n   * @param {number} amount The amount from 0 to 100.\n   * @returns {this}\n   */\n  lighten(amount: number): this {\n    return this.manipulate('hsl', (h, s, l) => {\n      l = clamp(l + amount, 0, 100);\n      return [h, s, l];\n    });\n  }\n\n  /**\n   * Decrease lightness.\n   * @param {number} amount The amount from 0 to 100.\n   * @returns {this}\n   */\n  darken(amount: number): this {\n    return this.manipulate('hsl', (h, s, l) => {\n      l = clamp(l - amount, 0, 100);\n      return [h, s, l];\n    });\n  }\n\n  /**\n   * Increase saturation.\n   * @param {number} amount The amount from 0 to 100.\n   * @returns {this}\n   */\n  saturate(amount: number): this {\n    return this.manipulate('hsl', (h, s, l) => {\n      s = clamp(s + amount, 0, 100);\n      return [h, s, l];\n    });\n  }\n\n  /**\n   * Decrease saturation.\n   * @param {number} amount The amount from 0 to 100.\n   * @returns {this}\n   */\n  desaturate(amount: number): this {\n    return this.manipulate('hsl', (h, s, l) => {\n      s = clamp(s - amount, 0, 100);\n      return [h, s, l];\n    });\n  }\n\n  /**\n   * Sets saturation value to 0.\n   * @returns {this}\n   */\n  grayscale(): this {\n    return this.manipulate('hsl', (h, s, l) => [h, 0, l]);\n  }\n\n  /**\n   * Modify whiteness.\n   * @param {number} amount The amount from -100 to 100.\n   * @returns {this}\n   */\n  whiten(amount: number): this {\n    return this.manipulate(\n      'hwb',\n      (h, w, b) => this.resolveHwb(h, clamp(w + amount, 0, 100), b),\n    );\n  }\n\n  /**\n   * Modify blackness.\n   * @param {number} amount The amount from -100 to 100.\n   * @returns {this}\n   */\n  blacken(amount: number): this {\n    return this.manipulate(\n      'hwb',\n      (h, w, b) => this.resolveHwb(h, w, clamp(b + amount, 0, 100)),\n    );\n  }\n\n  /**\n   * Rotate hue value.\n   * @param {number} d degree 0-360\n   * @returns {this}\n   */\n  rotate(d: number): this {\n    return this.manipulate('hsl', (h, s, l) => [degree(h + d), s, l]);\n  }\n\n  /**\n   * Mix two colors.\n   * @param {MooColor} color The color to mixed.\n   * @param {number} [percent=50] The percentage value of color to be mixed.\n   * @returns {MooColor} The mixed color that as a new instance of `MooColor`.\n   */\n  mix(color: MooColor, percent: number = 50): MooColor {\n    percent /= 100;\n    const m = this.getModel();\n    const c1 = this.getColorAs('rgb');\n    const c2 = color.getColorAs('rgb');\n    return new MooColor({\n      model: 'rgb',\n      values: c1.values.map((v, i) => v + (c2.values[i] - v) * percent),\n      alpha: c1.alpha + (c2.alpha - c1.alpha) * percent,\n    }).changeModel(m);\n  }\n\n  /**\n   * Sets color to the complement of a color.\n   *\n   * @returns {this}\n   */\n  complement(): this {\n    return this.manipulate('hsl', (h, s, l) => [degree(h + 180), s, l]);\n  }\n\n  /**\n   * Sets color to the inverse (negative) of a color.\n   *\n   * @param {number} [percent=100] The relative percent of the color that inverse.\n   * @returns {this}\n   */\n  invert(percent: number = 100): this {\n    percent /= 100;\n    const absRound = (x: number) => Math.round(Math.abs(x));\n    return this.manipulate('rgb', (r, g, b) => [r, g, b].map(x => absRound(255 * percent - x)));\n  }\n\n  protected manipulate(asModel: AcceptedModel, callback: manipulateFn): this {\n    const m = this.color.model;\n    const color = this.getColorAs(asModel);\n    color.values = callback(...color.values);\n    return this.setColor(color).changeModel(m);\n  }\n}\n\nexport default MooColor;\n"],"mappings":";;AAAA,UAAAA,iCAAAC,IAAA,EAAAC,OAAA;EACA,WAAAC,OAAA,wBAAAC,MAAA,eACAA,MAAA,CAAAD,OAAA,GAAAD,OAAA,QACA,WAAAG,MAAA,mBAAAA,MAAA,CAAAC,GAAA,EACAD,MAAA,KAAAH,OAAA,OACA,WAAAC,OAAA,eACAA,OAAA,eAAAD,OAAA,QAEAD,IAAA,eAAAC,OAAA;AACA,CAAC;EACD,O;;;;;;;;;;;;;UCRAE,MAAA,CAAAD,OAAA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;UACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCrJA;;;;;;;;;UASO,SAASI,QAAQA,CAACC,CAAS,EAAEC,CAAS,EAAEC,CAAS;YACtDF,CAAC,IAAI,EAAE,EAAEC,CAAC,IAAI,GAAG,EAAEC,CAAC,IAAI,GAAG;YAC3B,IAAMC,CAAC,GAAG,CAAC,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"}