{"version":3,"names":["_react","_interopRequireDefault","require","_jestCucumber","_react2","_reactRouterDom","_Question","_Question2","_App","_jsxRuntime","obj","__esModule","default","feature","loadFeature","defineFeature","test","given","when","and","then","mockQuizContext","score","setScore","jest","fn","name","setName","age","setAge","email","setMail","phoneNumber","setPhone","selectedLanguage","setSelector","trackScore","setTracker","screen","render","jsx","QuizContext","Provider","value","children","BrowserRouter","jsxs","Routes","Route","path","element","expect","toBeTruthy","questionText","getByText"],"sources":["question1.steps.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { defineFeature, loadFeature } from \"jest-cucumber\";\r\nimport { render, screen, fireEvent, waitFor } from \"@testing-library/react\";\r\nimport \"text-encoding\";\r\nimport Home from \"./../../homeandsubmit/Home\";\r\nimport \"@testing-library/jest-dom/extend-expect\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Question1 from \"../../questions/Question1\";\r\nimport Question2 from \"../../questions/Question2\";\r\nimport { QuizContext } from \"../../../App\";\r\nconst feature = loadFeature(\"src/components/features/question1.feature\");\r\ndefineFeature(feature, (test) => {\r\n  test(\"User answers first quiz question correctly\", ({\r\n    given,\r\n    when,\r\n    and,\r\n    then,\r\n  }) => {\r\n    const mockQuizContext = {\r\n      score: 0,\r\n      setScore: jest.fn(),\r\n      name: \"chandu\",\r\n      setName: jest.fn(),\r\n      age: 0,\r\n      setAge: jest.fn(),\r\n      email: \"chandra@chandu.com\",\r\n      setMail: jest.fn(),\r\n      phoneNumber: \"1234567890\",\r\n      setPhone: jest.fn(),\r\n      selectedLanguage: \"ReactJS\",\r\n      setSelector: jest.fn(),\r\n      trackScore: false,\r\n      setTracker: jest.fn(),\r\n    };\r\n    given(\"I am on the Question 1 screen\", () => {\r\n      const screen = render(\r\n        <QuizContext.Provider value={mockQuizContext}>\r\n          <Router>\r\n            <Routes>\r\n              <Route path=\"/\" element={<Question1 />} />\r\n              <Route path=\"/question2\" element={<Question2 />} />\r\n            </Routes>\r\n          </Router>\r\n        </QuizContext.Provider>\r\n      );\r\n      expect(screen).toBeTruthy();\r\n      const questionText = screen.getByText(\r\n        \"What is the extension used for TypeScript in ReactJS?\"\r\n      );\r\n      expect(questionText).toBeTruthy();\r\n    });\r\n    when(\r\n      'I select the correct answer and press \"Answer\", then the score should update',\r\n      () => {}\r\n    );\r\n    when(\r\n      \"I select any of the numbers above the questions, then it should navigate to that respective question screen\",\r\n      () => {}\r\n    );\r\n    then(\r\n      'I navigate to the next question when I click on the \"Next Question\" button',\r\n      () => {}\r\n    );\r\n  });\r\n});\r\n"],"mappings":";;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,aAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AACAA,OAAA;AAEAA,OAAA;AACA,IAAAG,eAAA,GAAAH,OAAA;AACA,IAAAI,SAAA,GAAAL,sBAAA,CAAAC,OAAA;AACA,IAAAK,UAAA,GAAAN,sBAAA,CAAAC,OAAA;AACA,IAAAM,IAAA,GAAAN,OAAA;AAA2C,IAAAO,WAAA,GAAAP,OAAA;AAAA,SAAAD,uBAAAS,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAC3C,MAAMG,OAAO,GAAG,IAAAC,yBAAW,EAAC,2CAA2C,CAAC;AACxE,IAAAC,2BAAa,EAACF,OAAO,EAAGG,IAAI,IAAK;EAC/BA,IAAI,CAAC,4CAA4C,EAAE,CAAC;IAClDC,KAAK;IACLC,IAAI;IACJC,GAAG;IACHC;EACF,CAAC,KAAK;IACJ,MAAMC,eAAe,GAAG;MACtBC,KAAK,EAAE,CAAC;MACRC,QAAQ,EAAEC,IAAI,CAACC,EAAE,EAAE;MACnBC,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAEH,IAAI,CAACC,EAAE,EAAE;MAClBG,GAAG,EAAE,CAAC;MACNC,MAAM,EAAEL,IAAI,CAACC,EAAE,EAAE;MACjBK,KAAK,EAAE,oBAAoB;MAC3BC,OAAO,EAAEP,IAAI,CAACC,EAAE,EAAE;MAClBO,WAAW,EAAE,YAAY;MACzBC,QAAQ,EAAET,IAAI,CAACC,EAAE,EAAE;MACnBS,gBAAgB,EAAE,SAAS;MAC3BC,WAAW,EAAEX,IAAI,CAACC,EAAE,EAAE;MACtBW,UAAU,EAAE,KAAK;MACjBC,UAAU,EAAEb,IAAI,CAACC,EAAE;IACrB,CAAC;IACDR,KAAK,CAAC,+BAA+B,EAAE,MAAM;MAC3C,MAAMqB,MAAM,GAAG,IAAAC,cAAM,gBACnB,IAAA9B,WAAA,CAAA+B,GAAA,EAAChC,IAAA,CAAAiC,WAAW,CAACC,QAAQ;QAACC,KAAK,EAAEtB,eAAgB;QAAAuB,QAAA,eAC3C,IAAAnC,WAAA,CAAA+B,GAAA,EAACnC,eAAA,CAAAwC,aAAM;UAAAD,QAAA,eACL,IAAAnC,WAAA,CAAAqC,IAAA,EAACzC,eAAA,CAAA0C,MAAM;YAAAH,QAAA,gBACL,IAAAnC,WAAA,CAAA+B,GAAA,EAACnC,eAAA,CAAA2C,KAAK;cAACC,IAAI,EAAC,GAAG;cAACC,OAAO,eAAE,IAAAzC,WAAA,CAAA+B,GAAA,EAAClC,SAAA,CAAAM,OAAS;YAAI,EAAG,eAC1C,IAAAH,WAAA,CAAA+B,GAAA,EAACnC,eAAA,CAAA2C,KAAK;cAACC,IAAI,EAAC,YAAY;cAACC,OAAO,eAAE,IAAAzC,WAAA,CAAA+B,GAAA,EAACjC,UAAA,CAAAK,OAAS;YAAI,EAAG;UAAA;QAC5C;MACF,EACY,CACxB;MACDuC,MAAM,CAACb,MAAM,CAAC,CAACc,UAAU,EAAE;MAC3B,MAAMC,YAAY,GAAGf,MAAM,CAACgB,SAAS,CACnC,uDAAuD,CACxD;MACDH,MAAM,CAACE,YAAY,CAAC,CAACD,UAAU,EAAE;IACnC,CAAC,CAAC;IACFlC,IAAI,CACF,8EAA8E,EAC9E,MAAM,CAAC,CAAC,CACT;IACDA,IAAI,CACF,6GAA6G,EAC7G,MAAM,CAAC,CAAC,CACT;IACDE,IAAI,CACF,4EAA4E,EAC5E,MAAM,CAAC,CAAC,CACT;EACH,CAAC,CAAC;AACJ,CAAC,CAAC"}