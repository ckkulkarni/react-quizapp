{"version":3,"names":["_jestCucumber","require","_react","_Home","_interopRequireDefault","obj","__esModule","default","feature","loadFeature","defineFeature","test","given","when","and","then","container","getByLabelText","getByText","render","React","createElement","email","emailInput","fireEvent","change","target","value","name","nameInput","phone","phoneInput","submitButton","click","expect","screen","toBeInTheDocument"],"sources":["base.steps.tsx"],"sourcesContent":["import { defineFeature, loadFeature } from \"jest-cucumber\";\r\nimport { render, screen, fireEvent } from \"@testing-library/react\";\r\nimport { act } from \"react-dom/test-utils\";\r\nimport Home from \"./../../homeandsubmit/Home\";\r\nimport { QuizContext } from \"./../../../App\";\r\n\r\nconst feature = loadFeature(\"./path/to/your/feature-file.feature\");\r\n\r\ndefineFeature(feature, (test) => {\r\n  test(\"User submits form with valid inputs\", ({ given, when, and, then }) => {\r\n    let container;\r\n    let getByLabelText: any;\r\n    let getByText: any;\r\n\r\n    given(\"I am on the Home screen\", () => {\r\n      container = render(<Home />);\r\n      getByLabelText = container.getByLabelText;\r\n      getByText = container.getByText;\r\n    });\r\n\r\n    when(\"I enter a valid email {string}\", (email) => {\r\n      const emailInput = getByLabelText(\"Enter MailID:\");\r\n      fireEvent.change(emailInput, { target: { value: email } });\r\n    });\r\n\r\n    and(\"I enter a valid name {string}\", (name) => {\r\n      const nameInput = getByLabelText(\"Enter your name:\");\r\n      fireEvent.change(nameInput, { target: { value: name } });\r\n    });\r\n\r\n    and(\"I enter a valid phone number {string}\", (phone) => {\r\n      const phoneInput = getByLabelText(\"Enter your Phone Number:\");\r\n      fireEvent.change(phoneInput, { target: { value: phone } });\r\n    });\r\n\r\n    and(\"I submit the form\", () => {\r\n      const submitButton = getByText(\"Submit\");\r\n      fireEvent.click(submitButton);\r\n    });\r\n\r\n    then(\"I should see the start quiz button\", () => {\r\n      expect(screen.getByText(\"Start Quiz\")).toBeInTheDocument();\r\n    });\r\n  });\r\n});\r\n"],"mappings":";;AAAA,IAAAA,aAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AAEA,IAAAE,KAAA,GAAAC,sBAAA,CAAAH,OAAA;AAA8C,SAAAG,uBAAAC,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAG9C,MAAMG,OAAO,GAAG,IAAAC,yBAAW,EAAC,qCAAqC,CAAC;AAElE,IAAAC,2BAAa,EAACF,OAAO,EAAGG,IAAI,IAAK;EAC/BA,IAAI,CAAC,qCAAqC,EAAE,CAAC;IAAEC,KAAK;IAAEC,IAAI;IAAEC,GAAG;IAAEC;EAAK,CAAC,KAAK;IAC1E,IAAIC,SAAS;IACb,IAAIC,cAAmB;IACvB,IAAIC,SAAc;IAElBN,KAAK,CAAC,yBAAyB,EAAE,MAAM;MACrCI,SAAS,GAAG,IAAAG,aAAM,gBAACC,KAAA,CAAAC,aAAA,CAAClB,KAAA,CAAAI,OAAI,OAAG,CAAC;MAC5BU,cAAc,GAAGD,SAAS,CAACC,cAAc;MACzCC,SAAS,GAAGF,SAAS,CAACE,SAAS;IACjC,CAAC,CAAC;IAEFL,IAAI,CAAC,gCAAgC,EAAGS,KAAK,IAAK;MAChD,MAAMC,UAAU,GAAGN,cAAc,CAAC,eAAe,CAAC;MAClDO,gBAAS,CAACC,MAAM,CAACF,UAAU,EAAE;QAAEG,MAAM,EAAE;UAAEC,KAAK,EAAEL;QAAM;MAAE,CAAC,CAAC;IAC5D,CAAC,CAAC;IAEFR,GAAG,CAAC,+BAA+B,EAAGc,IAAI,IAAK;MAC7C,MAAMC,SAAS,GAAGZ,cAAc,CAAC,kBAAkB,CAAC;MACpDO,gBAAS,CAACC,MAAM,CAACI,SAAS,EAAE;QAAEH,MAAM,EAAE;UAAEC,KAAK,EAAEC;QAAK;MAAE,CAAC,CAAC;IAC1D,CAAC,CAAC;IAEFd,GAAG,CAAC,uCAAuC,EAAGgB,KAAK,IAAK;MACtD,MAAMC,UAAU,GAAGd,cAAc,CAAC,0BAA0B,CAAC;MAC7DO,gBAAS,CAACC,MAAM,CAACM,UAAU,EAAE;QAAEL,MAAM,EAAE;UAAEC,KAAK,EAAEG;QAAM;MAAE,CAAC,CAAC;IAC5D,CAAC,CAAC;IAEFhB,GAAG,CAAC,mBAAmB,EAAE,MAAM;MAC7B,MAAMkB,YAAY,GAAGd,SAAS,CAAC,QAAQ,CAAC;MACxCM,gBAAS,CAACS,KAAK,CAACD,YAAY,CAAC;IAC/B,CAAC,CAAC;IAEFjB,IAAI,CAAC,oCAAoC,EAAE,MAAM;MAC/CmB,MAAM,CAACC,aAAM,CAACjB,SAAS,CAAC,YAAY,CAAC,CAAC,CAACkB,iBAAiB,EAAE;IAC5D,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}