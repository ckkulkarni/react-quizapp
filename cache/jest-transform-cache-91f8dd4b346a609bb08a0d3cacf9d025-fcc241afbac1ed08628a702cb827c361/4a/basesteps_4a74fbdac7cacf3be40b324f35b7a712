60a6e3693310174cc3c82cf52e1551a3
"use strict";

var _react = _interopRequireDefault(require("react"));
var _jestCucumber = require("jest-cucumber");
var _react2 = require("@testing-library/react");
require("text-encoding");
var _Home = _interopRequireDefault(require("./../../homeandsubmit/Home"));
require("@testing-library/jest-dom/extend-expect");
var _reactRouterDom = require("react-router-dom");
var _Question = _interopRequireDefault(require("../../questions/Question1"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const feature = (0, _jestCucumber.loadFeature)("src/components/features/base.feature");
(0, _jestCucumber.defineFeature)(feature, test => {
  test("User submits form with valid inputs", ({
    given,
    when,
    and,
    then
  }) => {
    given("I am on the Home Screen", () => {
      const screen = (0, _react2.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.BrowserRouter, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactRouterDom.Routes, {
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.Route, {
            path: "/",
            element: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Home.default, {})
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.Route, {
            path: "/question",
            element: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Question.default, {})
          })]
        })
      }));
      expect(screen).toBeTruthy();
    });
    when('I enter a valid email "test@test.com"', () => {
      const emailInput = _react2.screen.getByTestId("form-mailid").querySelector("input");
      expect(emailInput).toBeInTheDocument();
      _react2.fireEvent.change(emailInput, {
        target: {
          value: "test@test.com"
        }
      });
    });
    and('I enter a valid name "John"', () => {
      const nameInput = _react2.screen.getByTestId("form-name").querySelector("input");
      expect(nameInput).toBeInTheDocument();
      _react2.fireEvent.change(nameInput, {
        target: {
          value: "John"
        }
      });
    });
    and('I enter a valid phone number "1234567890"', () => {
      const phoneInput = _react2.screen.getByTestId("form-phone").querySelector("input");
      expect(phoneInput).toBeInTheDocument();
      _react2.fireEvent.change(phoneInput, {
        target: {
          value: "1234567890"
        }
      });
    });
    and('I enter a valid age "25"', () => {
      const ageInput = _react2.screen.getByTestId("form-age").querySelector("input");
      expect(ageInput).toBeInTheDocument();
      _react2.fireEvent.change(ageInput, {
        target: {
          value: "25"
        }
      });
    });
    and('I select the language "ReactJS"', () => {
      const languageSelect = _react2.screen.getByTestId("form-language");
      expect(languageSelect).not.toBeChecked();
      _react2.fireEvent.click(languageSelect);
      expect(languageSelect).toBeChecked();
    });
    and("I choose to track my score", () => {});
    and("I submit the form", () => {});
    then("I should see the start quiz button", () => {});
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9qZXN0Q3VjdW1iZXIiLCJfcmVhY3QyIiwiX0hvbWUiLCJfcmVhY3RSb3V0ZXJEb20iLCJfUXVlc3Rpb24iLCJfanN4UnVudGltZSIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiZmVhdHVyZSIsImxvYWRGZWF0dXJlIiwiZGVmaW5lRmVhdHVyZSIsInRlc3QiLCJnaXZlbiIsIndoZW4iLCJhbmQiLCJ0aGVuIiwic2NyZWVuIiwicmVuZGVyIiwianN4IiwiQnJvd3NlclJvdXRlciIsImNoaWxkcmVuIiwianN4cyIsIlJvdXRlcyIsIlJvdXRlIiwicGF0aCIsImVsZW1lbnQiLCJleHBlY3QiLCJ0b0JlVHJ1dGh5IiwiZW1haWxJbnB1dCIsImdldEJ5VGVzdElkIiwicXVlcnlTZWxlY3RvciIsInRvQmVJblRoZURvY3VtZW50IiwiZmlyZUV2ZW50IiwiY2hhbmdlIiwidGFyZ2V0IiwidmFsdWUiLCJuYW1lSW5wdXQiLCJwaG9uZUlucHV0IiwiYWdlSW5wdXQiLCJsYW5ndWFnZVNlbGVjdCIsIm5vdCIsInRvQmVDaGVja2VkIiwiY2xpY2siXSwic291cmNlcyI6WyJiYXNlLnN0ZXBzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGRlZmluZUZlYXR1cmUsIGxvYWRGZWF0dXJlIH0gZnJvbSBcImplc3QtY3VjdW1iZXJcIjtcclxuaW1wb3J0IHtcclxuICByZW5kZXIsXHJcbiAgc2NyZWVuLFxyXG4gIGZpcmVFdmVudCxcclxuICBnZXRCeUxhYmVsVGV4dCxcclxufSBmcm9tIFwiQHRlc3RpbmctbGlicmFyeS9yZWFjdFwiO1xyXG5pbXBvcnQgeyBhY3QgfSBmcm9tIFwicmVhY3QtZG9tL3Rlc3QtdXRpbHNcIjtcclxuaW1wb3J0IFwidGV4dC1lbmNvZGluZ1wiO1xyXG5pbXBvcnQgSG9tZSBmcm9tIFwiLi8uLi8uLi9ob21lYW5kc3VibWl0L0hvbWVcIjtcclxuaW1wb3J0IHsgRG5kUHJvdmlkZXIgfSBmcm9tIFwicmVhY3QtZG5kXCI7XHJcbmltcG9ydCB7IEhUTUw1QmFja2VuZCB9IGZyb20gXCJyZWFjdC1kbmQtaHRtbDUtYmFja2VuZFwiO1xyXG5pbXBvcnQgXCJAdGVzdGluZy1saWJyYXJ5L2plc3QtZG9tL2V4dGVuZC1leHBlY3RcIjtcclxuaW1wb3J0IHtcclxuICBCcm93c2VyUm91dGVyIGFzIFJvdXRlcixcclxuICBNZW1vcnlSb3V0ZXIsXHJcbiAgUm91dGUsXHJcbiAgUm91dGVzLFxyXG59IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCI7XHJcbmltcG9ydCBRdWVzdGlvbjEgZnJvbSBcIi4uLy4uL3F1ZXN0aW9ucy9RdWVzdGlvbjFcIjtcclxuaW1wb3J0IHVzZXJFdmVudCBmcm9tIFwiQHRlc3RpbmctbGlicmFyeS91c2VyLWV2ZW50XCI7XHJcbmNvbnN0IGZlYXR1cmUgPSBsb2FkRmVhdHVyZShcInNyYy9jb21wb25lbnRzL2ZlYXR1cmVzL2Jhc2UuZmVhdHVyZVwiKTtcclxuZGVmaW5lRmVhdHVyZShmZWF0dXJlLCAodGVzdCkgPT4ge1xyXG4gIHRlc3QoXCJVc2VyIHN1Ym1pdHMgZm9ybSB3aXRoIHZhbGlkIGlucHV0c1wiLCAoeyBnaXZlbiwgd2hlbiwgYW5kLCB0aGVuIH0pID0+IHtcclxuICAgIGdpdmVuKFwiSSBhbSBvbiB0aGUgSG9tZSBTY3JlZW5cIiwgKCkgPT4ge1xyXG4gICAgICBjb25zdCBzY3JlZW4gPSByZW5kZXIoXHJcbiAgICAgICAgPFJvdXRlcj5cclxuICAgICAgICAgIDxSb3V0ZXM+XHJcbiAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL1wiIGVsZW1lbnQ9ezxIb21lIC8+fSAvPlxyXG4gICAgICAgICAgICA8Um91dGUgcGF0aD1cIi9xdWVzdGlvblwiIGVsZW1lbnQ9ezxRdWVzdGlvbjEgLz59IC8+XHJcbiAgICAgICAgICA8L1JvdXRlcz5cclxuICAgICAgICA8L1JvdXRlcj5cclxuICAgICAgKTtcclxuICAgICAgZXhwZWN0KHNjcmVlbikudG9CZVRydXRoeSgpO1xyXG4gICAgfSk7XHJcbiAgICB3aGVuKCdJIGVudGVyIGEgdmFsaWQgZW1haWwgXCJ0ZXN0QHRlc3QuY29tXCInLCAoKSA9PiB7XHJcbiAgICAgIGNvbnN0IGVtYWlsSW5wdXQgPSBzY3JlZW5cclxuICAgICAgICAuZ2V0QnlUZXN0SWQoXCJmb3JtLW1haWxpZFwiKVxyXG4gICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiaW5wdXRcIikhO1xyXG4gICAgICBleHBlY3QoZW1haWxJbnB1dCkudG9CZUluVGhlRG9jdW1lbnQoKTtcclxuICAgICAgZmlyZUV2ZW50LmNoYW5nZShlbWFpbElucHV0LCB7IHRhcmdldDogeyB2YWx1ZTogXCJ0ZXN0QHRlc3QuY29tXCIgfSB9KTtcclxuICAgIH0pO1xyXG4gICAgYW5kKCdJIGVudGVyIGEgdmFsaWQgbmFtZSBcIkpvaG5cIicsICgpID0+IHtcclxuICAgICAgY29uc3QgbmFtZUlucHV0ID0gc2NyZWVuLmdldEJ5VGVzdElkKFwiZm9ybS1uYW1lXCIpLnF1ZXJ5U2VsZWN0b3IoXCJpbnB1dFwiKSE7XHJcbiAgICAgIGV4cGVjdChuYW1lSW5wdXQpLnRvQmVJblRoZURvY3VtZW50KCk7XHJcbiAgICAgIGZpcmVFdmVudC5jaGFuZ2UobmFtZUlucHV0LCB7IHRhcmdldDogeyB2YWx1ZTogXCJKb2huXCIgfSB9KTtcclxuICAgIH0pO1xyXG4gICAgYW5kKCdJIGVudGVyIGEgdmFsaWQgcGhvbmUgbnVtYmVyIFwiMTIzNDU2Nzg5MFwiJywgKCkgPT4ge1xyXG4gICAgICBjb25zdCBwaG9uZUlucHV0ID0gc2NyZWVuXHJcbiAgICAgICAgLmdldEJ5VGVzdElkKFwiZm9ybS1waG9uZVwiKVxyXG4gICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiaW5wdXRcIikhO1xyXG4gICAgICBleHBlY3QocGhvbmVJbnB1dCkudG9CZUluVGhlRG9jdW1lbnQoKTtcclxuICAgICAgZmlyZUV2ZW50LmNoYW5nZShwaG9uZUlucHV0LCB7IHRhcmdldDogeyB2YWx1ZTogXCIxMjM0NTY3ODkwXCIgfSB9KTtcclxuICAgIH0pO1xyXG4gICAgYW5kKCdJIGVudGVyIGEgdmFsaWQgYWdlIFwiMjVcIicsICgpID0+IHtcclxuICAgICAgY29uc3QgYWdlSW5wdXQgPSBzY3JlZW4uZ2V0QnlUZXN0SWQoXCJmb3JtLWFnZVwiKS5xdWVyeVNlbGVjdG9yKFwiaW5wdXRcIikhO1xyXG4gICAgICBleHBlY3QoYWdlSW5wdXQpLnRvQmVJblRoZURvY3VtZW50KCk7XHJcbiAgICAgIGZpcmVFdmVudC5jaGFuZ2UoYWdlSW5wdXQsIHsgdGFyZ2V0OiB7IHZhbHVlOiBcIjI1XCIgfSB9KTtcclxuICAgIH0pO1xyXG4gICAgYW5kKCdJIHNlbGVjdCB0aGUgbGFuZ3VhZ2UgXCJSZWFjdEpTXCInLCAoKSA9PiB7XHJcbiAgICAgIGNvbnN0IGxhbmd1YWdlU2VsZWN0ID0gc2NyZWVuLmdldEJ5VGVzdElkKFwiZm9ybS1sYW5ndWFnZVwiKTtcclxuICAgICAgZXhwZWN0KGxhbmd1YWdlU2VsZWN0KS5ub3QudG9CZUNoZWNrZWQoKTtcclxuICAgICAgZmlyZUV2ZW50LmNsaWNrKGxhbmd1YWdlU2VsZWN0KTtcclxuICAgICAgZXhwZWN0KGxhbmd1YWdlU2VsZWN0KS50b0JlQ2hlY2tlZCgpO1xyXG4gICAgfSk7XHJcbiAgICBhbmQoXCJJIGNob29zZSB0byB0cmFjayBteSBzY29yZVwiLCAoKSA9PiB7fSk7XHJcbiAgICBhbmQoXCJJIHN1Ym1pdCB0aGUgZm9ybVwiLCAoKSA9PiB7fSk7XHJcblxyXG4gICAgdGhlbihcIkkgc2hvdWxkIHNlZSB0aGUgc3RhcnQgcXVpeiBidXR0b25cIiwgKCkgPT4ge30pO1xyXG4gIH0pO1xyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLGFBQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLE9BQUEsR0FBQUYsT0FBQTtBQU9BQSxPQUFBO0FBQ0EsSUFBQUcsS0FBQSxHQUFBSixzQkFBQSxDQUFBQyxPQUFBO0FBR0FBLE9BQUE7QUFDQSxJQUFBSSxlQUFBLEdBQUFKLE9BQUE7QUFNQSxJQUFBSyxTQUFBLEdBQUFOLHNCQUFBLENBQUFDLE9BQUE7QUFBa0QsSUFBQU0sV0FBQSxHQUFBTixPQUFBO0FBQUEsU0FBQUQsdUJBQUFRLEdBQUEsV0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQSxLQUFBRSxPQUFBLEVBQUFGLEdBQUE7QUFFbEQsTUFBTUcsT0FBTyxHQUFHLElBQUFDLHlCQUFXLEVBQUMsc0NBQXNDLENBQUM7QUFDbkUsSUFBQUMsMkJBQWEsRUFBQ0YsT0FBTyxFQUFHRyxJQUFJLElBQUs7RUFDL0JBLElBQUksQ0FBQyxxQ0FBcUMsRUFBRSxDQUFDO0lBQUVDLEtBQUs7SUFBRUMsSUFBSTtJQUFFQyxHQUFHO0lBQUVDO0VBQUssQ0FBQyxLQUFLO0lBQzFFSCxLQUFLLENBQUMseUJBQXlCLEVBQUUsTUFBTTtNQUNyQyxNQUFNSSxNQUFNLEdBQUcsSUFBQUMsY0FBTSxnQkFDbkIsSUFBQWIsV0FBQSxDQUFBYyxHQUFBLEVBQUNoQixlQUFBLENBQUFpQixhQUFNO1FBQUFDLFFBQUEsZUFDTCxJQUFBaEIsV0FBQSxDQUFBaUIsSUFBQSxFQUFDbkIsZUFBQSxDQUFBb0IsTUFBTTtVQUFBRixRQUFBLGdCQUNMLElBQUFoQixXQUFBLENBQUFjLEdBQUEsRUFBQ2hCLGVBQUEsQ0FBQXFCLEtBQUs7WUFBQ0MsSUFBSSxFQUFDLEdBQUc7WUFBQ0MsT0FBTyxlQUFFLElBQUFyQixXQUFBLENBQUFjLEdBQUEsRUFBQ2pCLEtBQUEsQ0FBQU0sT0FBSTtVQUFJLEVBQUcsZUFDckMsSUFBQUgsV0FBQSxDQUFBYyxHQUFBLEVBQUNoQixlQUFBLENBQUFxQixLQUFLO1lBQUNDLElBQUksRUFBQyxXQUFXO1lBQUNDLE9BQU8sZUFBRSxJQUFBckIsV0FBQSxDQUFBYyxHQUFBLEVBQUNmLFNBQUEsQ0FBQUksT0FBUztVQUFJLEVBQUc7UUFBQTtNQUMzQyxFQUNGLENBQ1Y7TUFDRG1CLE1BQU0sQ0FBQ1YsTUFBTSxDQUFDLENBQUNXLFVBQVUsRUFBRTtJQUM3QixDQUFDLENBQUM7SUFDRmQsSUFBSSxDQUFDLHVDQUF1QyxFQUFFLE1BQU07TUFDbEQsTUFBTWUsVUFBVSxHQUFHWixjQUFNLENBQ3RCYSxXQUFXLENBQUMsYUFBYSxDQUFDLENBQzFCQyxhQUFhLENBQUMsT0FBTyxDQUFFO01BQzFCSixNQUFNLENBQUNFLFVBQVUsQ0FBQyxDQUFDRyxpQkFBaUIsRUFBRTtNQUN0Q0MsaUJBQVMsQ0FBQ0MsTUFBTSxDQUFDTCxVQUFVLEVBQUU7UUFBRU0sTUFBTSxFQUFFO1VBQUVDLEtBQUssRUFBRTtRQUFnQjtNQUFFLENBQUMsQ0FBQztJQUN0RSxDQUFDLENBQUM7SUFDRnJCLEdBQUcsQ0FBQyw2QkFBNkIsRUFBRSxNQUFNO01BQ3ZDLE1BQU1zQixTQUFTLEdBQUdwQixjQUFNLENBQUNhLFdBQVcsQ0FBQyxXQUFXLENBQUMsQ0FBQ0MsYUFBYSxDQUFDLE9BQU8sQ0FBRTtNQUN6RUosTUFBTSxDQUFDVSxTQUFTLENBQUMsQ0FBQ0wsaUJBQWlCLEVBQUU7TUFDckNDLGlCQUFTLENBQUNDLE1BQU0sQ0FBQ0csU0FBUyxFQUFFO1FBQUVGLE1BQU0sRUFBRTtVQUFFQyxLQUFLLEVBQUU7UUFBTztNQUFFLENBQUMsQ0FBQztJQUM1RCxDQUFDLENBQUM7SUFDRnJCLEdBQUcsQ0FBQywyQ0FBMkMsRUFBRSxNQUFNO01BQ3JELE1BQU11QixVQUFVLEdBQUdyQixjQUFNLENBQ3RCYSxXQUFXLENBQUMsWUFBWSxDQUFDLENBQ3pCQyxhQUFhLENBQUMsT0FBTyxDQUFFO01BQzFCSixNQUFNLENBQUNXLFVBQVUsQ0FBQyxDQUFDTixpQkFBaUIsRUFBRTtNQUN0Q0MsaUJBQVMsQ0FBQ0MsTUFBTSxDQUFDSSxVQUFVLEVBQUU7UUFBRUgsTUFBTSxFQUFFO1VBQUVDLEtBQUssRUFBRTtRQUFhO01BQUUsQ0FBQyxDQUFDO0lBQ25FLENBQUMsQ0FBQztJQUNGckIsR0FBRyxDQUFDLDBCQUEwQixFQUFFLE1BQU07TUFDcEMsTUFBTXdCLFFBQVEsR0FBR3RCLGNBQU0sQ0FBQ2EsV0FBVyxDQUFDLFVBQVUsQ0FBQyxDQUFDQyxhQUFhLENBQUMsT0FBTyxDQUFFO01BQ3ZFSixNQUFNLENBQUNZLFFBQVEsQ0FBQyxDQUFDUCxpQkFBaUIsRUFBRTtNQUNwQ0MsaUJBQVMsQ0FBQ0MsTUFBTSxDQUFDSyxRQUFRLEVBQUU7UUFBRUosTUFBTSxFQUFFO1VBQUVDLEtBQUssRUFBRTtRQUFLO01BQUUsQ0FBQyxDQUFDO0lBQ3pELENBQUMsQ0FBQztJQUNGckIsR0FBRyxDQUFDLGlDQUFpQyxFQUFFLE1BQU07TUFDM0MsTUFBTXlCLGNBQWMsR0FBR3ZCLGNBQU0sQ0FBQ2EsV0FBVyxDQUFDLGVBQWUsQ0FBQztNQUMxREgsTUFBTSxDQUFDYSxjQUFjLENBQUMsQ0FBQ0MsR0FBRyxDQUFDQyxXQUFXLEVBQUU7TUFDeENULGlCQUFTLENBQUNVLEtBQUssQ0FBQ0gsY0FBYyxDQUFDO01BQy9CYixNQUFNLENBQUNhLGNBQWMsQ0FBQyxDQUFDRSxXQUFXLEVBQUU7SUFDdEMsQ0FBQyxDQUFDO0lBQ0YzQixHQUFHLENBQUMsNEJBQTRCLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUMzQ0EsR0FBRyxDQUFDLG1CQUFtQixFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFFbENDLElBQUksQ0FBQyxvQ0FBb0MsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDO0VBQ3RELENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyJ9