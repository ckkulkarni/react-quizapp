{"version":3,"names":["_js_utils","require","NONE","exports","ALL","__IS_NONE__","__IS_ALL__","areDirty","dirtyIds","handlerIds","commonIds","intersection","length"],"sources":["../../src/utils/dirtiness.ts"],"sourcesContent":["import { intersection } from './js_utils.js'\n\nexport const NONE: string[] = []\nexport const ALL: string[] = []\n// Add these flags for debug\n;(NONE as any).__IS_NONE__ = true\n;(ALL as any).__IS_ALL__ = true\n\n/**\n * Determines if the given handler IDs are dirty or not.\n *\n * @param dirtyIds The set of dirty handler ids\n * @param handlerIds The set of handler ids to check\n */\nexport function areDirty(\n\tdirtyIds: string[],\n\thandlerIds: string[] | undefined,\n): boolean {\n\tif (dirtyIds === NONE) {\n\t\treturn false\n\t}\n\n\tif (dirtyIds === ALL || typeof handlerIds === 'undefined') {\n\t\treturn true\n\t}\n\n\tconst commonIds = intersection(handlerIds, dirtyIds)\n\treturn commonIds.length > 0\n}\n"],"mappings":";;;;;;;AAAA,IAAAA,SAAA,GAAAC,OAAA;AAEO,MAAMC,IAAI,GAAa,EAAE;AAAAC,OAAA,CAAAD,IAAA,GAAAA,IAAA;AACzB,MAAME,GAAG,GAAa,EAAE;AAE9BD,OAAA,CAAAC,GAAA,GAAAA,GAAA;AAAAF,IAAK,CAASG,WAAW,GAAG,IAAI;AAChCD,GAAI,CAASE,UAAU,GAAG,IAAI;AAE/B;;;;;;AAMO,SAASC,QAAQA,CACvBC,QAAkB,EAClBC,UAAgC,EACtB;EACV,IAAID,QAAQ,KAAKN,IAAI,EAAE;IACtB,OAAO,KAAK;;EAGb,IAAIM,QAAQ,KAAKJ,GAAG,IAAI,OAAOK,UAAU,KAAK,WAAW,EAAE;IAC1D,OAAO,IAAI;;EAGZ,MAAMC,SAAS,GAAG,IAAAC,sBAAY,EAACF,UAAU,EAAED,QAAQ,CAAC;EACpD,OAAOE,SAAS,CAACE,MAAM,GAAG,CAAC"}