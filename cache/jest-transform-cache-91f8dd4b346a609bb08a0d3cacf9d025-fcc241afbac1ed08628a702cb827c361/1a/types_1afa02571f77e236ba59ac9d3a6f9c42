3657f96f666b1c77ee47ef99d1f29ccb
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AttributeAction = exports.IgnoreCaseMode = exports.SelectorType = void 0;
var SelectorType;
(function (SelectorType) {
  SelectorType["Attribute"] = "attribute";
  SelectorType["Pseudo"] = "pseudo";
  SelectorType["PseudoElement"] = "pseudo-element";
  SelectorType["Tag"] = "tag";
  SelectorType["Universal"] = "universal";
  // Traversals
  SelectorType["Adjacent"] = "adjacent";
  SelectorType["Child"] = "child";
  SelectorType["Descendant"] = "descendant";
  SelectorType["Parent"] = "parent";
  SelectorType["Sibling"] = "sibling";
  SelectorType["ColumnCombinator"] = "column-combinator";
})(SelectorType = exports.SelectorType || (exports.SelectorType = {}));
/**
 * Modes for ignore case.
 *
 * This could be updated to an enum, and the object is
 * the current stand-in that will allow code to be updated
 * without big changes.
 */
exports.IgnoreCaseMode = {
  Unknown: null,
  QuirksMode: "quirks",
  IgnoreCase: true,
  CaseSensitive: false
};
var AttributeAction;
(function (AttributeAction) {
  AttributeAction["Any"] = "any";
  AttributeAction["Element"] = "element";
  AttributeAction["End"] = "end";
  AttributeAction["Equals"] = "equals";
  AttributeAction["Exists"] = "exists";
  AttributeAction["Hyphen"] = "hyphen";
  AttributeAction["Not"] = "not";
  AttributeAction["Start"] = "start";
})(AttributeAction = exports.AttributeAction || (exports.AttributeAction = {}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkF0dHJpYnV0ZUFjdGlvbiIsIklnbm9yZUNhc2VNb2RlIiwiU2VsZWN0b3JUeXBlIiwiVW5rbm93biIsIlF1aXJrc01vZGUiLCJJZ25vcmVDYXNlIiwiQ2FzZVNlbnNpdGl2ZSJdLCJzb3VyY2VzIjpbInR5cGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BdHRyaWJ1dGVBY3Rpb24gPSBleHBvcnRzLklnbm9yZUNhc2VNb2RlID0gZXhwb3J0cy5TZWxlY3RvclR5cGUgPSB2b2lkIDA7XG52YXIgU2VsZWN0b3JUeXBlO1xuKGZ1bmN0aW9uIChTZWxlY3RvclR5cGUpIHtcbiAgICBTZWxlY3RvclR5cGVbXCJBdHRyaWJ1dGVcIl0gPSBcImF0dHJpYnV0ZVwiO1xuICAgIFNlbGVjdG9yVHlwZVtcIlBzZXVkb1wiXSA9IFwicHNldWRvXCI7XG4gICAgU2VsZWN0b3JUeXBlW1wiUHNldWRvRWxlbWVudFwiXSA9IFwicHNldWRvLWVsZW1lbnRcIjtcbiAgICBTZWxlY3RvclR5cGVbXCJUYWdcIl0gPSBcInRhZ1wiO1xuICAgIFNlbGVjdG9yVHlwZVtcIlVuaXZlcnNhbFwiXSA9IFwidW5pdmVyc2FsXCI7XG4gICAgLy8gVHJhdmVyc2Fsc1xuICAgIFNlbGVjdG9yVHlwZVtcIkFkamFjZW50XCJdID0gXCJhZGphY2VudFwiO1xuICAgIFNlbGVjdG9yVHlwZVtcIkNoaWxkXCJdID0gXCJjaGlsZFwiO1xuICAgIFNlbGVjdG9yVHlwZVtcIkRlc2NlbmRhbnRcIl0gPSBcImRlc2NlbmRhbnRcIjtcbiAgICBTZWxlY3RvclR5cGVbXCJQYXJlbnRcIl0gPSBcInBhcmVudFwiO1xuICAgIFNlbGVjdG9yVHlwZVtcIlNpYmxpbmdcIl0gPSBcInNpYmxpbmdcIjtcbiAgICBTZWxlY3RvclR5cGVbXCJDb2x1bW5Db21iaW5hdG9yXCJdID0gXCJjb2x1bW4tY29tYmluYXRvclwiO1xufSkoU2VsZWN0b3JUeXBlID0gZXhwb3J0cy5TZWxlY3RvclR5cGUgfHwgKGV4cG9ydHMuU2VsZWN0b3JUeXBlID0ge30pKTtcbi8qKlxuICogTW9kZXMgZm9yIGlnbm9yZSBjYXNlLlxuICpcbiAqIFRoaXMgY291bGQgYmUgdXBkYXRlZCB0byBhbiBlbnVtLCBhbmQgdGhlIG9iamVjdCBpc1xuICogdGhlIGN1cnJlbnQgc3RhbmQtaW4gdGhhdCB3aWxsIGFsbG93IGNvZGUgdG8gYmUgdXBkYXRlZFxuICogd2l0aG91dCBiaWcgY2hhbmdlcy5cbiAqL1xuZXhwb3J0cy5JZ25vcmVDYXNlTW9kZSA9IHtcbiAgICBVbmtub3duOiBudWxsLFxuICAgIFF1aXJrc01vZGU6IFwicXVpcmtzXCIsXG4gICAgSWdub3JlQ2FzZTogdHJ1ZSxcbiAgICBDYXNlU2Vuc2l0aXZlOiBmYWxzZSxcbn07XG52YXIgQXR0cmlidXRlQWN0aW9uO1xuKGZ1bmN0aW9uIChBdHRyaWJ1dGVBY3Rpb24pIHtcbiAgICBBdHRyaWJ1dGVBY3Rpb25bXCJBbnlcIl0gPSBcImFueVwiO1xuICAgIEF0dHJpYnV0ZUFjdGlvbltcIkVsZW1lbnRcIl0gPSBcImVsZW1lbnRcIjtcbiAgICBBdHRyaWJ1dGVBY3Rpb25bXCJFbmRcIl0gPSBcImVuZFwiO1xuICAgIEF0dHJpYnV0ZUFjdGlvbltcIkVxdWFsc1wiXSA9IFwiZXF1YWxzXCI7XG4gICAgQXR0cmlidXRlQWN0aW9uW1wiRXhpc3RzXCJdID0gXCJleGlzdHNcIjtcbiAgICBBdHRyaWJ1dGVBY3Rpb25bXCJIeXBoZW5cIl0gPSBcImh5cGhlblwiO1xuICAgIEF0dHJpYnV0ZUFjdGlvbltcIk5vdFwiXSA9IFwibm90XCI7XG4gICAgQXR0cmlidXRlQWN0aW9uW1wiU3RhcnRcIl0gPSBcInN0YXJ0XCI7XG59KShBdHRyaWJ1dGVBY3Rpb24gPSBleHBvcnRzLkF0dHJpYnV0ZUFjdGlvbiB8fCAoZXhwb3J0cy5BdHRyaWJ1dGVBY3Rpb24gPSB7fSkpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOztBQUNaQSxNQUFNLENBQUNDLGNBQWMsQ0FBQ0MsT0FBTyxFQUFFLFlBQVksRUFBRTtFQUFFQyxLQUFLLEVBQUU7QUFBSyxDQUFDLENBQUM7QUFDN0RELE9BQU8sQ0FBQ0UsZUFBZSxHQUFHRixPQUFPLENBQUNHLGNBQWMsR0FBR0gsT0FBTyxDQUFDSSxZQUFZLEdBQUcsS0FBSyxDQUFDO0FBQ2hGLElBQUlBLFlBQVk7QUFDaEIsQ0FBQyxVQUFVQSxZQUFZLEVBQUU7RUFDckJBLFlBQVksQ0FBQyxXQUFXLENBQUMsR0FBRyxXQUFXO0VBQ3ZDQSxZQUFZLENBQUMsUUFBUSxDQUFDLEdBQUcsUUFBUTtFQUNqQ0EsWUFBWSxDQUFDLGVBQWUsQ0FBQyxHQUFHLGdCQUFnQjtFQUNoREEsWUFBWSxDQUFDLEtBQUssQ0FBQyxHQUFHLEtBQUs7RUFDM0JBLFlBQVksQ0FBQyxXQUFXLENBQUMsR0FBRyxXQUFXO0VBQ3ZDO0VBQ0FBLFlBQVksQ0FBQyxVQUFVLENBQUMsR0FBRyxVQUFVO0VBQ3JDQSxZQUFZLENBQUMsT0FBTyxDQUFDLEdBQUcsT0FBTztFQUMvQkEsWUFBWSxDQUFDLFlBQVksQ0FBQyxHQUFHLFlBQVk7RUFDekNBLFlBQVksQ0FBQyxRQUFRLENBQUMsR0FBRyxRQUFRO0VBQ2pDQSxZQUFZLENBQUMsU0FBUyxDQUFDLEdBQUcsU0FBUztFQUNuQ0EsWUFBWSxDQUFDLGtCQUFrQixDQUFDLEdBQUcsbUJBQW1CO0FBQzFELENBQUMsRUFBRUEsWUFBWSxHQUFHSixPQUFPLENBQUNJLFlBQVksS0FBS0osT0FBTyxDQUFDSSxZQUFZLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBSixPQUFPLENBQUNHLGNBQWMsR0FBRztFQUNyQkUsT0FBTyxFQUFFLElBQUk7RUFDYkMsVUFBVSxFQUFFLFFBQVE7RUFDcEJDLFVBQVUsRUFBRSxJQUFJO0VBQ2hCQyxhQUFhLEVBQUU7QUFDbkIsQ0FBQztBQUNELElBQUlOLGVBQWU7QUFDbkIsQ0FBQyxVQUFVQSxlQUFlLEVBQUU7RUFDeEJBLGVBQWUsQ0FBQyxLQUFLLENBQUMsR0FBRyxLQUFLO0VBQzlCQSxlQUFlLENBQUMsU0FBUyxDQUFDLEdBQUcsU0FBUztFQUN0Q0EsZUFBZSxDQUFDLEtBQUssQ0FBQyxHQUFHLEtBQUs7RUFDOUJBLGVBQWUsQ0FBQyxRQUFRLENBQUMsR0FBRyxRQUFRO0VBQ3BDQSxlQUFlLENBQUMsUUFBUSxDQUFDLEdBQUcsUUFBUTtFQUNwQ0EsZUFBZSxDQUFDLFFBQVEsQ0FBQyxHQUFHLFFBQVE7RUFDcENBLGVBQWUsQ0FBQyxLQUFLLENBQUMsR0FBRyxLQUFLO0VBQzlCQSxlQUFlLENBQUMsT0FBTyxDQUFDLEdBQUcsT0FBTztBQUN0QyxDQUFDLEVBQUVBLGVBQWUsR0FBR0YsT0FBTyxDQUFDRSxlQUFlLEtBQUtGLE9BQU8sQ0FBQ0UsZUFBZSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMifQ==