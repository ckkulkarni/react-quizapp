05fb61226e317e0cb9fa91d1ae0323a4
'use strict';

var ToObject = require('es-abstract/2022/ToObject');
var ToLength = require('es-abstract/2022/ToLength');
var IsCallable = require('es-abstract/2022/IsCallable');
module.exports = function find(predicate) {
  var list = ToObject(this);
  var length = ToLength(list.length);
  if (!IsCallable(predicate)) {
    throw new TypeError('Array#find: predicate must be a function');
  }
  if (length === 0) {
    return void 0;
  }
  var thisArg;
  if (arguments.length > 0) {
    thisArg = arguments[1];
  }
  for (var i = 0, value; i < length; i++) {
    value = list[i];
    // inlined for performance: if (Call(predicate, thisArg, [value, i, list])) {
    if (predicate.apply(thisArg, [value, i, list])) {
      return value;
    }
  }
  return void 0;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUb09iamVjdCIsInJlcXVpcmUiLCJUb0xlbmd0aCIsIklzQ2FsbGFibGUiLCJtb2R1bGUiLCJleHBvcnRzIiwiZmluZCIsInByZWRpY2F0ZSIsImxpc3QiLCJsZW5ndGgiLCJUeXBlRXJyb3IiLCJ0aGlzQXJnIiwiYXJndW1lbnRzIiwiaSIsInZhbHVlIiwiYXBwbHkiXSwic291cmNlcyI6WyJpbXBsZW1lbnRhdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBUb09iamVjdCA9IHJlcXVpcmUoJ2VzLWFic3RyYWN0LzIwMjIvVG9PYmplY3QnKTtcbnZhciBUb0xlbmd0aCA9IHJlcXVpcmUoJ2VzLWFic3RyYWN0LzIwMjIvVG9MZW5ndGgnKTtcbnZhciBJc0NhbGxhYmxlID0gcmVxdWlyZSgnZXMtYWJzdHJhY3QvMjAyMi9Jc0NhbGxhYmxlJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZmluZChwcmVkaWNhdGUpIHtcblx0dmFyIGxpc3QgPSBUb09iamVjdCh0aGlzKTtcblx0dmFyIGxlbmd0aCA9IFRvTGVuZ3RoKGxpc3QubGVuZ3RoKTtcblx0aWYgKCFJc0NhbGxhYmxlKHByZWRpY2F0ZSkpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdBcnJheSNmaW5kOiBwcmVkaWNhdGUgbXVzdCBiZSBhIGZ1bmN0aW9uJyk7XG5cdH1cblx0aWYgKGxlbmd0aCA9PT0gMCkge1xuXHRcdHJldHVybiB2b2lkIDA7XG5cdH1cblx0dmFyIHRoaXNBcmc7XG5cdGlmIChhcmd1bWVudHMubGVuZ3RoID4gMCkge1xuXHRcdHRoaXNBcmcgPSBhcmd1bWVudHNbMV07XG5cdH1cblxuXHRmb3IgKHZhciBpID0gMCwgdmFsdWU7IGkgPCBsZW5ndGg7IGkrKykge1xuXHRcdHZhbHVlID0gbGlzdFtpXTtcblx0XHQvLyBpbmxpbmVkIGZvciBwZXJmb3JtYW5jZTogaWYgKENhbGwocHJlZGljYXRlLCB0aGlzQXJnLCBbdmFsdWUsIGksIGxpc3RdKSkge1xuXHRcdGlmIChwcmVkaWNhdGUuYXBwbHkodGhpc0FyZywgW3ZhbHVlLCBpLCBsaXN0XSkpIHtcblx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHR9XG5cdH1cblx0cmV0dXJuIHZvaWQgMDtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7O0FBRVosSUFBSUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsMkJBQTJCLENBQUM7QUFDbkQsSUFBSUMsUUFBUSxHQUFHRCxPQUFPLENBQUMsMkJBQTJCLENBQUM7QUFDbkQsSUFBSUUsVUFBVSxHQUFHRixPQUFPLENBQUMsNkJBQTZCLENBQUM7QUFFdkRHLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHLFNBQVNDLElBQUlBLENBQUNDLFNBQVMsRUFBRTtFQUN6QyxJQUFJQyxJQUFJLEdBQUdSLFFBQVEsQ0FBQyxJQUFJLENBQUM7RUFDekIsSUFBSVMsTUFBTSxHQUFHUCxRQUFRLENBQUNNLElBQUksQ0FBQ0MsTUFBTSxDQUFDO0VBQ2xDLElBQUksQ0FBQ04sVUFBVSxDQUFDSSxTQUFTLENBQUMsRUFBRTtJQUMzQixNQUFNLElBQUlHLFNBQVMsQ0FBQywwQ0FBMEMsQ0FBQztFQUNoRTtFQUNBLElBQUlELE1BQU0sS0FBSyxDQUFDLEVBQUU7SUFDakIsT0FBTyxLQUFLLENBQUM7RUFDZDtFQUNBLElBQUlFLE9BQU87RUFDWCxJQUFJQyxTQUFTLENBQUNILE1BQU0sR0FBRyxDQUFDLEVBQUU7SUFDekJFLE9BQU8sR0FBR0MsU0FBUyxDQUFDLENBQUMsQ0FBQztFQUN2QjtFQUVBLEtBQUssSUFBSUMsQ0FBQyxHQUFHLENBQUMsRUFBRUMsS0FBSyxFQUFFRCxDQUFDLEdBQUdKLE1BQU0sRUFBRUksQ0FBQyxFQUFFLEVBQUU7SUFDdkNDLEtBQUssR0FBR04sSUFBSSxDQUFDSyxDQUFDLENBQUM7SUFDZjtJQUNBLElBQUlOLFNBQVMsQ0FBQ1EsS0FBSyxDQUFDSixPQUFPLEVBQUUsQ0FBQ0csS0FBSyxFQUFFRCxDQUFDLEVBQUVMLElBQUksQ0FBQyxDQUFDLEVBQUU7TUFDL0MsT0FBT00sS0FBSztJQUNiO0VBQ0Q7RUFDQSxPQUFPLEtBQUssQ0FBQztBQUNkLENBQUMifQ==